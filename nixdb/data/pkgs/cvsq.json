{
 "1.10": {
  "meta": {
   "description": "A collection of tools to work locally with CVS",
   "homepage": "https://www.linta.de/~aehlig/cvsq/",
   "license": {
    "fullName": "BSD 3-clause \"New\" or \"Revised\" License",
    "shortName": "bsd3",
    "spdxId": "BSD-3-Clause",
    "url": "http://spdx.org/licenses/BSD-3-Clause.html"
   },
   "long_description": "cvsq is a collection of tools to work locally with CVS.\n\ncvsq queues commits and other cvs commands in a queue to be executed later,\nwhen the machine is online again. In case of a commit (the default action)\nan actual copy of the working directory is made, so that you can continue\nediting without affecting the scheduled commit. You can even schedule\nseveral successive commits to the same file and they will be correctly\ncommitted as successive commits at the time of upload. This is different\nfrom an earlier script also named cvsq that you might have seen elsewhere.\n\nlcvs uses rsync to maintain a local copy of a cvs repository. It also\ngives a convenient interface to call cvs in such a way that it believes the\ncurrent working directory refers to the local copy rather than to the actual\nrepository. This is useful for commands like log, diff, etc; however it cannot\nbe used for commits (that's what cvsq is for).\n",
   "maintainers": [
    {
     "email": "c@lkamp.de",
     "github": "clkamp",
     "githubId": 46303707,
     "name": "Christian L\u00fctke-Stetzkamp"
    }
   ],
   "name": "cvsq",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "aarch64-none",
    "avr-none",
    "arm-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none",
    "riscv64-none",
    "riscv32-none",
    "vc4-none",
    "js-ghcjs"
   ],
   "position": "pkgs/applications/version-management/cvsq/default.nix:44"
  },
  "revs": [
   "0029baca2ba2b52706f1ff160058128ddcff5575",
   "1b099f9d6c21734359215aeeead2576187e81a8e"
  ]
 },
 "1.11": {
  "meta": {
   "description": "A collection of tools to work locally with CVS",
   "homepage": "https://www.linta.de/~aehlig/cvsq/",
   "license": {
    "fullName": "BSD 3-clause \"New\" or \"Revised\" License",
    "shortName": "bsd3",
    "spdxId": "BSD-3-Clause",
    "url": "https://spdx.org/licenses/BSD-3-Clause.html"
   },
   "long_description": "cvsq is a collection of tools to work locally with CVS.\n\ncvsq queues commits and other cvs commands in a queue to be executed later,\nwhen the machine is online again. In case of a commit (the default action)\nan actual copy of the working directory is made, so that you can continue\nediting without affecting the scheduled commit. You can even schedule\nseveral successive commits to the same file and they will be correctly\ncommitted as successive commits at the time of upload. This is different\nfrom an earlier script also named cvsq that you might have seen elsewhere.\n\nlcvs uses rsync to maintain a local copy of a cvs repository. It also\ngives a convenient interface to call cvs in such a way that it believes the\ncurrent working directory refers to the local copy rather than to the actual\nrepository. This is useful for commands like log, diff, etc; however it cannot\nbe used for commits (that's what cvsq is for).\n",
   "maintainers": [
    {
     "email": "c@lkamp.de",
     "github": "clkamp",
     "githubId": 46303707,
     "name": "Christian L\u00fctke-Stetzkamp"
    }
   ],
   "name": "cvsq",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "arm-none",
    "armv6l-none",
    "aarch64-none",
    "avr-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none",
    "riscv64-none",
    "riscv32-none",
    "vc4-none",
    "js-ghcjs",
    "aarch64-genode",
    "x86_64-genode"
   ],
   "position": "pkgs/applications/version-management/cvsq/default.nix:44"
  },
  "revs": [
   "00022fbeda385d7b6ae2eee44f07eecfc6d92015",
   "5101b357ec30c1ac4a9273b379e631f841af9fa3"
  ]
 }
}