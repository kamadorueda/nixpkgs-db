{
 "1.16": {
  "meta": {
   "description": "MIME::Types for Ruby originally based on and synchronized with MIME::Types for Perl by Mark Overmeer, copyright 2001 - 20",
   "homepage": "http://mime-types.rubyforge.org/",
   "license": [],
   "long_description": "MIME::Types for Ruby originally based on and synchronized with MIME::Types for Perl by Mark Overmeer, copyright 2001 - 2009. As of version 1.15, the data format for the MIME::Type list has changed and the synchronization will no longer happen.",
   "maintainers": [],
   "name": "ruby-mime-types",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "000c2c51fdfffcd0b0cc91011d53080bf1f6513c",
   "2ee854b2b30a6c5f6b8bf456bbf4d3fa3a572607"
  ]
 },
 "1.17.2": {
  "meta": {
   "description": "This library allows for the identification of a file's likely MIME content type",
   "homepage": "http://mime-types.rubyforge.org/",
   "license": null,
   "long_description": "This library allows for the identification of a file's likely MIME content\ntype. This is release 1.17.2. The identification of MIME content type is based\non a file's filename extensions.\n\nMIME::Types for Ruby originally based on and synchronized with MIME::Types for\nPerl by Mark Overmeer, copyright 2001 - 2009. As of version 1.15, the data\nformat for the MIME::Type list has changed and the synchronization will no\nlonger happen.\n\nHomepage::  http://mime-types.rubyforge.org/\nGitHub::    http://github.com/halostatue/mime-types/\nCopyright:: 2002 - 2011, Austin Ziegler\n            Based in part on prior work copyright Mark Overmeer\n\n:include: License.rdoc",
   "maintainers": [],
   "name": "ruby-mime-types",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "000051b196b82d30d1008c8999502c484ea5bd7d",
   "61d475d2e0c5634d5c85a94bebd74a9f64f7bc09"
  ]
 },
 "1.18": {
  "meta": {
   "description": "This library allows for the identification of a file's likely MIME content type",
   "homepage": "http://mime-types.rubyforge.org/",
   "license": null,
   "long_description": "This library allows for the identification of a file's likely MIME content\ntype. This is release 1.17.2. The identification of MIME content type is based\non a file's filename extensions.\n\nMIME::Types for Ruby originally based on and synchronized with MIME::Types for\nPerl by Mark Overmeer, copyright 2001 - 2009. As of version 1.15, the data\nformat for the MIME::Type list has changed and the synchronization will no\nlonger happen.\n\n:include: Licence.rdoc",
   "maintainers": [],
   "name": "ruby-mime-types",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "002ffde4a48ccd69fa0ab0c03fda04557b70789e",
   "41840af6894bf718a1038ba1045adef26a687919"
  ]
 },
 "1.19": {
  "meta": {
   "description": "This library allows for the identification of a file's likely MIME content type",
   "homepage": "http://mime-types.rubyforge.org/",
   "license": null,
   "long_description": "This library allows for the identification of a file's likely MIME content\ntype. This is release 1.19 with new MIME types. The identification of MIME\ncontent type is based on a file's filename extensions.\n\nMIME::Types for Ruby was originally based on and synchronized with MIME::Types\nfor Perl by Mark Overmeer, copyright 2001 - 2009. As of version 1.15, the data\nformat for the MIME::Type list has changed and the synchronization will no\nlonger happen.\n\n:include: Licence.rdoc",
   "maintainers": [],
   "name": "ruby-mime-types",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "000791e74a511f862081aff90ab27304c88f0aba",
   "61129e1ee9a37d75f2f26c8eb5de1c984766a461"
  ]
 },
 "1.20.1": {
  "meta": {
   "description": "This library allows for the identification of a file's likely MIME content type",
   "homepage": "http://mime-types.rubyforge.org/",
   "license": null,
   "long_description": "This library allows for the identification of a file's likely MIME content\ntype. This is release 1.20.1 with new MIME types. The identification of MIME\ncontent type is based on a file's filename extensions.\n\nMIME types are used in MIME-compliant communications, as in e-mail or\nHTTP traffic, to indicate the type of content which is transmitted.\nMIME::Types provides the ability for detailed information about MIME\nentities (provided as a set of MIME::Type objects) to be determined and\nused programmatically. There are many types defined by RFCs and vendors,\nso the list is long but not complete; don't hesitate to ask to add\nadditional information. This library follows the IANA collection of MIME\ntypes (see below for reference).\n\nMIME::Types for Ruby was originally based on and synchronized with MIME::Types\nfor Perl by Mark Overmeer, copyright 2001 - 2009. As of version 1.15, the data\nformat for the MIME::Type list has changed and the synchronization will no\nlonger happen.\n\nMIME::Types is built to conform to the MIME types of RFCs 2045 and 2231. It\nfollows the official {IANA registry}[http://www.iana.org/assignments/media-types/]\n({ftp}[ftp://ftp.iana.org/assignments/media-types]) with some unofficial types\nadded from the the {LTSW collection}[http://www.ltsw.se/knbase/internet/mime.htp].",
   "maintainers": [],
   "name": "ruby-mime-types",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "01cbb17c12cee32d90ea17dd901284498c6f30e4",
   "7b35dcdc623c539ee47b19fff9d6facab2fd3ef5"
  ]
 },
 "1.21": {
  "meta": {
   "description": "This library allows for the identification of a file's likely MIME content type",
   "homepage": "http://mime-types.rubyforge.org/",
   "license": null,
   "long_description": "This library allows for the identification of a file's likely MIME content\ntype. This is release 1.21 with new MIME types. The identification of MIME\ncontent type is based on a file's filename extensions.\n\nMIME types are used in MIME-compliant communications, as in e-mail or\nHTTP traffic, to indicate the type of content which is transmitted.\nMIME::Types provides the ability for detailed information about MIME\nentities (provided as a set of MIME::Type objects) to be determined and\nused programmatically. There are many types defined by RFCs and vendors,\nso the list is long but not complete; don't hesitate to ask to add\nadditional information. This library follows the IANA collection of MIME\ntypes (see below for reference).\n\nMIME::Types for Ruby was originally based on and synchronized with MIME::Types\nfor Perl by Mark Overmeer, copyright 2001 - 2009. As of version 1.15, the data\nformat for the MIME::Type list has changed and the synchronization will no\nlonger happen.\n\nMIME::Types is built to conform to the MIME types of RFCs 2045 and 2231. It\nfollows the official {IANA registry}[http://www.iana.org/assignments/media-types/]\n({ftp}[ftp://ftp.iana.org/assignments/media-types]) with some unofficial types\nadded from the the {LTSW collection}[http://www.ltsw.se/knbase/internet/mime.htp].",
   "maintainers": [],
   "name": "ruby-mime-types",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "000fddd10e079f147769f686e5661bd6d7c1db5a",
   "9555f3ba068f2deeb433ac7989775f8e2c3494a1"
  ]
 },
 "1.23": {
  "meta": {
   "description": "This library allows for the identification of a file's likely MIME content type",
   "homepage": "http://mime-types.rubyforge.org/",
   "license": null,
   "long_description": "This library allows for the identification of a file's likely MIME content\ntype. This is release 1.23 that adds the ability to enumerate over the\ncollection of MIME types and updates the sources of a few MIME types. The\nidentification of MIME content type is based on a file's filename extensions.\n\nMIME types are used in MIME-compliant communications, as in e-mail or HTTP\ntraffic, to indicate the type of content which is transmitted. MIME::Types\nprovides the ability for detailed information about MIME entities (provided as\na set of MIME::Type objects) to be determined and used programmatically. There\nare many types defined by RFCs and vendors, so the list is long but not\ncomplete; don't hesitate to ask to add additional information. This library\nfollows the IANA collection of MIME types (see below for reference).\n\nMIME::Types for Ruby was originally based on and synchronized with MIME::Types\nfor Perl by Mark Overmeer, copyright 2001 - 2009. As of version 1.15, the data\nformat for the MIME::Type list has changed and the synchronization will no\nlonger happen.\n\nMIME::Types is built to conform to the MIME types of RFCs 2045 and 2231. It\nfollows the official {IANA registry}[http://www.iana.org/assignments/media-types/]\n({ftp}[ftp://ftp.iana.org/assignments/media-types]) with some unofficial types\nadded from the the {LTSW collection}[http://www.ltsw.se/knbase/internet/mime.htp].",
   "maintainers": [],
   "name": "ruby-mime-types",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "0024926701875c6cac245281f07d899f2ee14d92",
   "afcda36c4653ac3e1aea2e842a9e71f3fdbe07e8"
  ]
 },
 "1.24": {
  "meta": {
   "description": "This library allows for the identification of a file's likely MIME content type",
   "homepage": "http://mime-types.rubyforge.org/",
   "license": null,
   "long_description": "This library allows for the identification of a file's likely MIME content\ntype. This is release 1.24, adding and updating a few MIME types and fixing\nsome issues with documentation.\n\nMIME types are used in MIME-compliant communications, as in e-mail or HTTP\ntraffic, to indicate the type of content which is transmitted. MIME::Types\nprovides the ability for detailed information about MIME entities (provided as\na set of MIME::Type objects) to be determined and used programmatically. There\nare many types defined by RFCs and vendors, so the list is long but not\ncomplete; don't hesitate to ask to add additional information. This library\nfollows the IANA collection of MIME types (see below for reference).\n\nMIME::Types for Ruby was originally based on MIME::Types for Perl by Mark\nOvermeer, copyright 2001 - 2009. As of version 1.15, the data format for the\nMIME::Type list has changed and the synchronization will no longer happen.\n\nMIME::Types is built to conform to the MIME types of RFCs 2045 and 2231. It\ntracks the {IANA registry}[http://www.iana.org/assignments/media-types/]\n({ftp}[ftp://ftp.iana.org/assignments/media-types]) with some unofficial types\nadded from the {LTSW collection}[http://www.ltsw.se/knbase/internet/mime.htp]\nand added by the users of MIME::Types.",
   "maintainers": [],
   "name": "ruby-mime-types",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "01cc4301f36d439b4f918dbb521937c09f097e7c",
   "2d405ed4d54ba4d924b5146cea4a39ae65343d59"
  ]
 },
 "1.25": {
  "meta": {
   "description": "This library allows for the identification of a file's likely MIME content type",
   "homepage": "http://mime-types.rubyforge.org/",
   "license": null,
   "long_description": "This library allows for the identification of a file's likely MIME content\ntype. This is release 1.25, adding experimental caching and lazy loading\nfunctionality.\n\nThe caching and lazy loading features were initially implemented by Greg\nBrockman (gdb). As these features are experimental, they are disabled by\ndefault and must be enabled through the use of environment variables. The cache\nis invalidated on a per-version basis; the cache for version 1.25 will not be\nreused for version 1.26.\n\nTo use lazy loading, set the environment variable +RUBY_MIME_TYPES_LAZY_LOAD+\nto any value other than 'false'. When using lazy loading, the initial startup\nof MIME::Types is around 12\u201325\u00d7 faster than normal startup (on my system,\nnormal startup is about 90 ms; lazy startup is about 4 ms). This isn't\ngenerally useful, however, as the MIME::Types database has not been loaded.\nLazy startup and load is just *slightly* faster\u2014around 1 ms. The real advantage\ncomes from using the cache.\n\nTo enable the cache, set the environment variable +RUBY_MIME_TYPES_CACHE+ to a\nfilename where MIME::Types will have read-write access. The first time a new\nversion of MIME::Types is run using this file, it will be created, taking a\nlittle longer than normal. Subsequent loads using the same cache file will be\napproximately 3\u00bd\u00d7 faster (25 ms) than normal loads. This can be combined with\n+RUBY_MIME_TYPES_LAZY_LOAD+, but this is *not* recommended in a multithreaded\nor multiprocess environment where all threads or processes will be using the\nsame cache file.\n\nAs the caching interface is still experimental, the only values cached are the\ndefault MIME::Types database, not any custom MIME::Types added by users.\n\nMIME types are used in MIME-compliant communications, as in e-mail or HTTP\ntraffic, to indicate the type of content which is transmitted. MIME::Types\nprovides the ability for detailed information about MIME entities (provided as\na set of MIME::Type objects) to be determined and used programmatically. There\nare many types defined by RFCs and vendors, so the list is long but not\ncomplete; don't hesitate to ask to add additional information. This library\nfollows the IANA collection of MIME types (see below for reference).\n\nMIME::Types for Ruby was originally based on MIME::Types for Perl by Mark\nOvermeer, copyright 2001 - 2009. As of version 1.15, the data format for the\nMIME::Type list has changed and the synchronization will no longer happen.\n\nMIME::Types is built to conform to the MIME types of RFCs 2045 and 2231. It\ntracks the {IANA registry}[http://www.iana.org/assignments/media-types/]\n({ftp}[ftp://ftp.iana.org/assignments/media-types]) with some unofficial types\nadded from the {LTSW collection}[http://www.ltsw.se/knbase/internet/mime.htp]\nand added by the users of MIME::Types.",
   "maintainers": [],
   "name": "ruby-mime-types",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "00081d1873148a8ec642d5c912d04875c4ee4a66",
   "2c09066dfd1e9f332603993829e128a0261e9840"
  ]
 },
 "2.3": {
  "meta": {
   "description": "The mime-types library provides a library and registry for information about MIME content type definitions",
   "homepage": "https://github.com/halostatue/mime-types/",
   "license": null,
   "long_description": "The mime-types library provides a library and registry for information about\nMIME content type definitions. It can be used to determine defined filename\nextensions for MIME types, or to use filename extensions to look up the likely\nMIME type definitions.\n\nMIME content types are used in MIME-compliant communications, as in e-mail or\nHTTP traffic, to indicate the type of content which is transmitted. The\nmime-types library provides the ability for detailed information about MIME\nentities (provided as an enumerable collection of MIME::Type objects) to be\ndetermined and used programmatically. There are many types defined by RFCs and\nvendors, so the list is long but by definition incomplete; don't hesitate to to\nadd additional type definitions (see Contributing.rdoc). The primary sources\nfor MIME type definitions found in mime-types is the IANA collection of\nregistrations (see below for the link), RFCs, and W3C recommendations.\n\nThis is release 2.2, mostly changing how the MIME type registry is updated from\nthe IANA registry (the format of which was incompatibly changed shortly before\nthis release) and taking advantage of the extra data available from IANA\nregistry in the form of MIME::Type#xrefs. In addition, the {LTSW\nlist}[http://www.ltsw.se/knbase/internet/mime.htp] has been dropped as a\nsupported list.\n\nAs a reminder, mime-types 2.x is no longer compatible with Ruby 1.8 and\nmime-types 1.x is only being maintained for security issues. No new MIME types\nor features will be added.\n\nmime-types (previously called MIME::Types for Ruby) was originally based on\nMIME::Types for Perl by Mark Overmeer, copyright 2001 - 2009. It is built to\nconform to the MIME types of RFCs 2045 and 2231. It tracks the {IANA Media\nTypes registry}[https://www.iana.org/assignments/media-types/media-types.xhtml]\nwith some types added by the users of mime-types.",
   "maintainers": [],
   "name": "ruby-mime-types",
   "platforms": null,
   "position": "pkgs/development/interpreters/ruby/generated.nix:966"
  },
  "revs": [
   "0005e1896d9bdef48aedcff9e86843351ac024e9",
   "9bc82e0952c270c9ae0d4294a866ad25e38e2672"
  ]
 },
 "2.4.3": {
  "meta": {
   "description": "The mime-types library provides a library and registry for information about MIME content type definitions",
   "homepage": "https://github.com/halostatue/mime-types/",
   "license": null,
   "long_description": "The mime-types library provides a library and registry for information about\nMIME content type definitions. It can be used to determine defined filename\nextensions for MIME types, or to use filename extensions to look up the likely\nMIME type definitions.\n\nMIME content types are used in MIME-compliant communications, as in e-mail or\nHTTP traffic, to indicate the type of content which is transmitted. The\nmime-types library provides the ability for detailed information about MIME\nentities (provided as an enumerable collection of MIME::Type objects) to be\ndetermined and used programmatically. There are many types defined by RFCs and\nvendors, so the list is long but by definition incomplete; don't hesitate to to\nadd additional type definitions (see Contributing.rdoc). The primary sources\nfor MIME type definitions found in mime-types is the IANA collection of\nregistrations (see below for the link), RFCs, and W3C recommendations.\n\nThis is release 2.4.3, restoring full compatibility with Ruby 1.9.2 (which will\nbe dropped in mime-types 3.0). It also includes the performance improvements\nfrom mime-types 2.4.2 (since yanked because of the broken Ruby 1.9.2 support)\nand the 2.4.1 fix of a bug in observed use of the mime-types library where\nextensions were not previously sorted, such that\n\n    MIME::Types.of('image.jpg').first.extensions.first\n\nreturned a value of +jpeg+ in mime-types 1, but +jpe+ in mime-types 2. This was\nintroduced because extensions were sorted during assignment\n(MIME::Type#extensions=). This behaviour has been reverted to protect clients\nthat work as noted above. The preferred way to express this is the new method:\n\n    MIME::Type.of('image.jpg').first.preferred_extension\n\n\u0141ukasz \u015aliwa created the\n{friendly_mime}[https://github.com/lukaszsliwa/friendly_mime] gem, which offers\nfriendly descriptive names for MIME types. This functionality and\nEnglish-language data has been added to mime-types as MIME::Type#friendly. To\nmake it easy for internationalization, MIME::Type#i18n_key has been added,\nwhich will return a key suitable for use with the\n{I18n}[https://github.com/svenfuchs/i18n] library.\n\nAs a reminder, mime-types 2.x is no longer compatible with Ruby 1.8 and\nmime-types 1.x is only being maintained for security issues. No new MIME types\nor features will be added.\n\nmime-types (previously called MIME::Types for Ruby) was originally based on\nMIME::Types for Perl by Mark Overmeer, copyright 2001 - 2009. It is built to\nconform to the MIME types of RFCs 2045 and 2231. It tracks the {IANA Media\nTypes registry}[https://www.iana.org/assignments/media-types/media-types.xhtml]\nwith some types added by the users of mime-types.",
   "maintainers": [],
   "name": "ruby-mime-types",
   "platforms": null,
   "position": "pkgs/development/interpreters/ruby/generated.nix:1243"
  },
  "revs": [
   "000c24a43fef598f04cc9435de09a818dfedfdba",
   "19f0b18b992a9495c20d11ab096cbe6a29eb148f"
  ]
 }
}