(this["webpackJsonpnixpkgs-db"]=this["webpackJsonpnixpkgs-db"]||[]).push([[0],{159:function(e,n,a){"use strict";a.r(n);var t=a(0),l=a.n(t),r=a(25),i=a.n(r),c=a(169),s=a(164),o=a(161),m=a(162),u=a(167),h=a(29),d=a(6),E=(a(80),a(70)),g=a.n(E),b={text:function(e){return l.a.createElement("span",null,e.children)},break:function(){return l.a.createElement("br",null)},heading:function(e){return l.a.createElement("h".concat(e.level+1),{},e.children)}},p=function(e){return l.a.createElement(g.a,{children:e.content,renderers:b})},v=a(71),f=a.n(v),k=function(){return l.a.createElement(o.a,null,l.a.createElement(m.a,{sm:12},l.a.createElement(p,{content:f.a})))},x=a(26),y=a(174),N=a(168),S=a(163),w=a(165),j=a(171),O=a(166),C=a(173),T=a(170),V=a(172),A=function(e){return l.a.createElement(V.a,{animated:!0,label:e.label,now:100*Math.random(),variant:e.variant,stripped:!0})},L="https://raw.githubusercontent.com/kamadorueda/nixpkgs-db/latest",$="https://github.com/NixOS/nixpkgs",I=a(50),K=a.n(I),D=a(72),P=function(e,n){var a=Object(t.useState)(n),l=Object(x.a)(a,2),r=l[0],i=l[1],c=function(){var n=Object(D.a)(K.a.mark((function n(){var a;return K.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,fetch(e);case 2:return a=n.sent,n.t0=i,n.next=6,a.json();case 6:n.t1=n.sent,(0,n.t0)(n.t1);case 8:case"end":return n.stop()}}),n)})));return function(){return n.apply(this,arguments)}}();return Object(t.useEffect)((function(){c()}),[]),r},z=function(e,n){return e.filter((function(e){return e.includes(n)})).sort()},G=function(e){var n=e.pkg,a="".concat(L,"/data/pkgs/").concat(n,".json"),t=function(e){var n=Object.entries(e);return n.sort((function(e,n){return e[0]<n[0]?1:-1})),n}(P(a,{}));if(0===t.length)return l.a.createElement(y.a,null,l.a.createElement(N.a.Toggle,{as:y.a.Header,variant:"link",eventKey:n},l.a.createElement(A,{label:"Loading...",variant:"info"})));var r,i=t[0][0],c=t[0][1];return l.a.createElement(y.a,null,l.a.createElement(N.a.Toggle,{as:y.a.Header,variant:"link",eventKey:n},l.a.createElement(o.a,null,l.a.createElement(m.a,{sm:3},l.a.createElement("b",null,""===c.meta.homepage?n:l.a.createElement("a",{href:c.meta.homepage,rel:"noopener",target:"blank"},n))),l.a.createElement(m.a,null,c.meta.description),l.a.createElement(m.a,{sm:1},t.length),l.a.createElement(m.a,{sm:2},void 0===(null===(r=c.meta.license)||void 0===r?void 0:r.fullName)?void 0:c.meta.license.fullName))),l.a.createElement(N.a.Collapse,{eventKey:n},l.a.createElement(S.a,null,l.a.createElement(N.a,{defaultActiveKey:"".concat(n," v").concat(i," @ ").concat(c.revs[1])},t.map((function(e){var t=e[0],r=e[1],i="".concat(n," v").concat(t," @ ").concat(r.revs[1]);return l.a.createElement(y.a,null,l.a.createElement(N.a.Toggle,{as:y.a.Header,variant:"link",eventKey:i},l.a.createElement("a",{href:a,rel:"noopener",target:"blank"},l.a.createElement("b",null,n," v",t))),l.a.createElement(N.a.Collapse,{eventKey:i},l.a.createElement(y.a.Body,null,l.a.createElement(y.a.Text,null,l.a.createElement(s.a,{fluid:!0},l.a.createElement(o.a,null,l.a.createElement(m.a,null,l.a.createElement("code",null,"$ ",l.a.createElement("b",null,"nix-shell")," -p ",n," -I nixpkgs=","".concat($,"/archive/").concat(r.revs[1],".tar.gz")))),l.a.createElement(o.a,null,l.a.createElement(m.a,null,l.a.createElement("code",null,"$ ",l.a.createElement("b",null,"nix-env")," -i ",n," -f ","".concat($,"/archive/").concat(r.revs[1],".tar.gz")))))))))}))))))},H=function(e){var n=e.pkgs,a=e.revs,r=Object(t.useState)(1),i=Object(x.a)(r,2),c=i[0],s=i[1],u=Object(t.useState)(""),h=Object(x.a)(u,2),d=h[0],E=h[1],g=Object(t.useState)(z(n,"")),b=Object(x.a)(g,2),p=b[0],v=b[1],f=Math.min(1+10*(c-1),p.length),k=Math.min(10*c,p.length);return l.a.createElement(l.a.Fragment,null,l.a.createElement(o.a,null,l.a.createElement(m.a,{sm:6},l.a.createElement(w.a,null,l.a.createElement(w.a.Prepend,null,l.a.createElement(w.a.Text,{id:"pkgName"},"Package name")),l.a.createElement(j.a,{"aria-label":"pkgName","aria-describedby":"pkgName",defaultValue:"",onChange:function(e){E(e.target.value)}}),l.a.createElement(O.a,{onClick:function(){s(1),v(z(n,d))},variant:"outline-primary"},"Search"))),l.a.createElement(m.a,{sm:6},l.a.createElement(C.a,null,l.a.createElement(C.a.Prev,{disabled:1===c,onClick:function(){s(c-1)}}),l.a.createElement(C.a.Item,{disabled:!0},"Showing packages ",f,"-",k," of ",p.length),l.a.createElement(C.a.Next,{disabled:10*c>p.length,onClick:function(){s(c+1)}})))),l.a.createElement(o.a,null,l.a.createElement(m.a,{sm:12},l.a.createElement(N.a,{defaultActiveKey:p[0]},l.a.createElement(y.a,null,l.a.createElement(N.a.Toggle,{as:y.a.Header,variant:"dark"},l.a.createElement(o.a,null,l.a.createElement(m.a,{sm:3},l.a.createElement("b",null,"Attribute")),l.a.createElement(m.a,null,l.a.createElement("b",null,"Description")),l.a.createElement(m.a,{sm:1},l.a.createElement("b",null,"Versions")),l.a.createElement(m.a,{sm:2},l.a.createElement("b",null,"License"))))),p.slice(f-1,k).map((function(e){return l.a.createElement(G,{key:e,pkg:e})}))))),l.a.createElement(o.a,null,l.a.createElement(m.a,{sm:12},l.a.createElement(T.a,{variant:"light"},"A total of ",n.length," packages and ",a.length," commits put in your hands ",l.a.createElement("br",null),"Created and maintained by Kevin Amado"))))},B=function(){var e=P("".concat(L,"/data/pkgs.json"),[]),n=P("".concat(L,"/data/revs.json"),[]);return l.a.createElement(l.a.Fragment,null,0===e.length?l.a.createElement(A,{label:"Loading...",variant:"info"}):l.a.createElement(H,{pkgs:e,revs:n}))},F=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(h.a,null,l.a.createElement(c.a,null,l.a.createElement(c.a.Brand,null,l.a.createElement("h1",null,"Nixpkgs Database!"),l.a.createElement("h5",null,"A database with packages from all versions, all commits and all channels."))),l.a.createElement(s.a,{fluid:!0},l.a.createElement(o.a,null,l.a.createElement(m.a,{sm:12},l.a.createElement(u.a,{variant:"tabs"},l.a.createElement(u.a.Item,null,l.a.createElement(u.a.Link,null,l.a.createElement(h.b,{to:"/search"},"Search"))),l.a.createElement(u.a.Item,null,l.a.createElement(u.a.Link,null,l.a.createElement(h.b,{to:"/about"},"About"))),l.a.createElement(u.a.Item,null,l.a.createElement(u.a.Link,null,l.a.createElement(h.b,{to:"/contributing"},"Contributing")))))),l.a.createElement("br",null),l.a.createElement(d.d,null,l.a.createElement(d.b,{exact:!0,path:"/search",component:B}),l.a.createElement(d.b,{exact:!0,path:"/about",component:k}),l.a.createElement(d.b,{exact:!0,path:"/contributing"},"..."),l.a.createElement(d.a,{to:"/search"})))))};i.a.render(l.a.createElement(F,null),document.getElementById("root"))},71:function(e,n){e.exports='# Searching and installing many versions of Nix packages\n\nOne of the advantages of **Nix** is the ability to install / use packages in\n**isolated environments** from the host system:\n\n```sh\n# Version installed in my host system\n$ python3 --version\n\n  Python 3.8.5\n\n# Launch a Nix Shell with a different version of the package\n$ nix-shell -p python39\n\n  # Version installed in the Nix shell\n  nix-shell $ python3 --version\n\n    Python 3.9.0\n```\n\nSometime ago while migrating an old **Kubernetes** cluster\nI found in the need of having two different versions of **Helm**\nin order to deal with **legacy** and **recent** deployments.\n\nThe solution is trivial: Use **Nix** to install the two versions!\n\nSo let\'s search the versions that Nix offers to us:\n\n```sh\n$ nix-env -q --available --description | grep helm\n\n  helm-3.3.4  A package manager for kubernetes\n```\n\nProblem is that nix-channels usually offer a single version of a package.\n\n\xbfSo what to do?\n\nSadly,\nthere is no native way of searching the Nix history for all versions of a package.\n\nSo the community has come up with initiatives:\n\n- [Nixpkgs Database](/nixpkgs-db)\n- [nix-package-revisions](https://lazamar.github.io/download-specific-package-version-with-nix)\n\nThat index the Nixpkgs history in order to provide versions lookups:\n\n```\nAttribute        Description                       Versions  License\nkubernetes-helm  A package manager for kubernetes  30        Apache License 2.0\n\n  kubernetes-helm v3.4.0\n  kubernetes-helm v3.1.1\n  kubernetes-helm v3.1.0\n  kubernetes-helm v3.0.3\n  kubernetes-helm v3.0.1\n  kubernetes-helm v2.9.1\n  kubernetes-helm v2.6.1\n  ...\n```\n\nThey even give you the commands to install in your system the package!\n\n```sh\n# Version installed in my host system\n$ helm version\n\n  Command \'helm\' not found\n\n# Launch a Nix Shell with a one of the versions found in Nixpkgs Database\n$ nix-shell -p kubernetes-helm -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/0126c86672b7d14843225df16ddfefd7091eabe7.tar.gz\n\n  # Version installed in the Nix shell\n  nix-shell $ helm version\n\n    version.BuildInfo{Version:"v3.4.0", GitCommit:"", GitTreeState:"", GoVersion:"go1.15.3"}\n\n# Launch a Nix Shell with another of the versions found in Nixpkgs Database\n$ nix-shell -p kubernetes-helm -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/01a664e7793158b434fefac9217ec48313b2dd45.tar.gz\n\n  # Version installed in the Nix shell\n  nix-shell $ helm version\n\n    Client: &version.Version{SemVer:"v2.6.1", GitCommit:"bbc1f71dc03afc5f00c6ac84b9308f8ecb4f39ac", GitTreeState:"clean"}\n```\n\nThis project is entirely **Open Source**!\n\nWe welcome [contributions](/nixpkgs-db/#/contributing) :)\n'}},[[159,1,2]]]);
//# sourceMappingURL=main.chunk.js.map