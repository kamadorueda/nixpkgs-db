(this["webpackJsonpnixpkgs-db"]=this["webpackJsonpnixpkgs-db"]||[]).push([[0],{379:function(e,n,t){"use strict";t.r(n);var a=t(0),l=t.n(a),r=t(26),i=t.n(r),c=t(392),o=t(387),s=t(384),m=t(385),u=t(390),h=t(30),d=t(6),p=(t(88),t(74)),g=t.n(p),b=t(75),E=t.n(b),f=t(76),v=t.n(f),k=t(391),x=t(383),y={text:function(e){return l.a.createElement("span",null,e.children)},break:function(){return l.a.createElement("br",null)},heading:function(e){return l.a.createElement("h".concat(e.level+1),{},e.children)},code:function(e){return l.a.createElement(l.a.Fragment,null,l.a.createElement("hr",null),l.a.createElement(k.a,{language:e.language,style:x.a},e.value),l.a.createElement("hr",null))}},w=function(e){return l.a.createElement(v.a,{children:e.content,renderers:y})},N=function(e){return function(){return l.a.createElement(s.a,null,l.a.createElement(m.a,{sm:12},l.a.createElement(w,{content:e})))}},S=t(27),T=t(398),j=t(393),O=t(386),C=t(388),I=t(395),L=t(389),A=t(396),V=t(394),$=t(397),K=function(e){return l.a.createElement($.a,{animated:!0,label:e.label,now:100*Math.random(),variant:e.variant,stripped:!0})},H="https://raw.githubusercontent.com/kamadorueda/nixpkgs-db/latest",P="https://github.com/NixOS/nixpkgs",z=t(52),D=t.n(z),G=t(80),F=function(e,n){var t=Object(a.useState)(n),l=Object(S.a)(t,2),r=l[0],i=l[1],c=function(){var n=Object(G.a)(D.a.mark((function n(){var t;return D.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,fetch(e);case 2:return t=n.sent,n.t0=i,n.next=6,t.json();case 6:n.t1=n.sent,(0,n.t0)(n.t1);case 8:case"end":return n.stop()}}),n)})));return function(){return n.apply(this,arguments)}}();return Object(a.useEffect)((function(){c()}),[]),r},B=function(e,n){return e.filter((function(e){return e.includes(n)})).sort()},M=function(e){var n=e.pkg,t="".concat(H,"/data/pkgs/").concat(n,".json"),a=function(e){var n=Object.entries(e);return n.sort((function(e,n){return e[0]<n[0]?1:-1})),n}(F(t,{}));if(0===a.length)return l.a.createElement(T.a,null,l.a.createElement(j.a.Toggle,{as:T.a.Header,variant:"link",eventKey:n},l.a.createElement(K,{label:"Loading...",variant:"info"})));var r,i=a[0][0],c=a[0][1];return l.a.createElement(T.a,null,l.a.createElement(j.a.Toggle,{as:T.a.Header,variant:"link",eventKey:n},l.a.createElement(s.a,null,l.a.createElement(m.a,{sm:3},l.a.createElement("b",null,""===c.meta.homepage?n:l.a.createElement("a",{href:c.meta.homepage,rel:"noopener",target:"blank"},n))),l.a.createElement(m.a,null,c.meta.description),l.a.createElement(m.a,{sm:1},a.length),l.a.createElement(m.a,{sm:2},void 0===(null===(r=c.meta.license)||void 0===r?void 0:r.fullName)?void 0:c.meta.license.fullName))),l.a.createElement(j.a.Collapse,{eventKey:n},l.a.createElement(O.a,null,l.a.createElement(j.a,{defaultActiveKey:"".concat(n," v").concat(i," @ ").concat(c.revs[1])},a.map((function(e){var a=e[0],r=e[1],i="".concat(n," v").concat(a," @ ").concat(r.revs[1]);return l.a.createElement(T.a,null,l.a.createElement(j.a.Toggle,{as:T.a.Header,variant:"link",eventKey:i},l.a.createElement("a",{href:t,rel:"noopener",target:"blank"},l.a.createElement("b",null,n," v",a))),l.a.createElement(j.a.Collapse,{eventKey:i},l.a.createElement(T.a.Body,null,l.a.createElement(T.a.Text,null,l.a.createElement(o.a,{fluid:!0},l.a.createElement(s.a,null,l.a.createElement(m.a,null,l.a.createElement("code",null,"$ ",l.a.createElement("b",null,"nix-shell")," -p ",n," -I nixpkgs=","".concat(P,"/archive/").concat(r.revs[1],".tar.gz")))),l.a.createElement(s.a,null,l.a.createElement(m.a,null,l.a.createElement("code",null,"$ ",l.a.createElement("b",null,"nix-env")," -i ",n," -f ","".concat(P,"/archive/").concat(r.revs[1],".tar.gz")))))))))}))))))},W=function(e){var n=e.pkgs,t=e.revs,r=Object(a.useState)(1),i=Object(S.a)(r,2),c=i[0],o=i[1],u=Object(a.useState)(""),h=Object(S.a)(u,2),d=h[0],p=h[1],g=Object(a.useState)(B(n,"")),b=Object(S.a)(g,2),E=b[0],f=b[1],v=Math.min(1+10*(c-1),E.length),k=Math.min(10*c,E.length);return l.a.createElement(l.a.Fragment,null,l.a.createElement(s.a,null,l.a.createElement(m.a,{sm:6},l.a.createElement(C.a,null,l.a.createElement(C.a.Prepend,null,l.a.createElement(C.a.Text,{id:"pkgName"},"Package name")),l.a.createElement(I.a,{"aria-label":"pkgName","aria-describedby":"pkgName",defaultValue:"",onChange:function(e){p(e.target.value)}}),l.a.createElement(L.a,{onClick:function(){o(1),f(B(n,d))},variant:"outline-primary"},"Search"))),l.a.createElement(m.a,{sm:6},l.a.createElement(A.a,null,l.a.createElement(A.a.Prev,{disabled:1===c,onClick:function(){o(c-1)}}),l.a.createElement(A.a.Item,{disabled:!0},"Showing packages ",v,"-",k," of ",E.length),l.a.createElement(A.a.Next,{disabled:10*c>E.length,onClick:function(){o(c+1)}})))),l.a.createElement(s.a,null,l.a.createElement(m.a,{sm:12},l.a.createElement(j.a,{defaultActiveKey:E[0]},l.a.createElement(T.a,null,l.a.createElement(j.a.Toggle,{as:T.a.Header,variant:"dark"},l.a.createElement(s.a,null,l.a.createElement(m.a,{sm:3},l.a.createElement("b",null,"Attribute")),l.a.createElement(m.a,null,l.a.createElement("b",null,"Description")),l.a.createElement(m.a,{sm:1},l.a.createElement("b",null,"Versions")),l.a.createElement(m.a,{sm:2},l.a.createElement("b",null,"License"))))),E.slice(v-1,k).map((function(e){return l.a.createElement(M,{key:e,pkg:e})}))))),l.a.createElement(s.a,null,l.a.createElement(m.a,{sm:12},l.a.createElement(V.a,{variant:"light"},"A total of ",n.length," packages and ",t.length," commits put in your hands ",l.a.createElement("br",null),"Created and maintained by Kevin Amado"))))},q=function(){var e=F("".concat(H,"/data/pkgs.json"),[]),n=F("".concat(H,"/data/revs.json"),[]);return l.a.createElement(l.a.Fragment,null,0===e.length?l.a.createElement(K,{label:"Loading...",variant:"info"}):l.a.createElement(W,{pkgs:e,revs:n}))},J=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement(h.a,null,l.a.createElement(c.a,null,l.a.createElement(c.a.Brand,null,l.a.createElement("h1",null,"Nixpkgs Database!"),l.a.createElement("h5",null,"A database with packages from all versions, all commits and all channels."))),l.a.createElement(o.a,{fluid:!0},l.a.createElement(s.a,null,l.a.createElement(m.a,{sm:12},l.a.createElement(u.a,{variant:"tabs"},l.a.createElement(u.a.Item,null,l.a.createElement(u.a.Link,null,l.a.createElement(h.b,{to:"/about"},"About"))),l.a.createElement(u.a.Item,null,l.a.createElement(u.a.Link,null,l.a.createElement(h.b,{to:"/contributing"},"Contributing"))),l.a.createElement(u.a.Item,null,l.a.createElement(u.a.Link,null,l.a.createElement(h.b,{to:"/search"},"Search"))),l.a.createElement(u.a.Item,null,l.a.createElement(u.a.Link,{href:"https://github.com/kamadorueda/nixpkgs-db"},"Source")),l.a.createElement(u.a.Item,null,l.a.createElement(u.a.Link,{href:"https://www.patreon.com/kamadorueda"},"Sponsor"))))),l.a.createElement("br",null),l.a.createElement(d.d,null,l.a.createElement(d.b,{exact:!0,path:"/search",component:q}),l.a.createElement(d.b,{exact:!0,path:"/about",component:N(g.a)}),l.a.createElement(d.b,{exact:!0,path:"/contributing",component:N(E.a)}),l.a.createElement(d.a,{to:"/search"})))))};i.a.render(l.a.createElement(J,null),document.getElementById("root"))},74:function(e,n){e.exports='# Searching and installing many versions of Nix packages\n\nOne of the advantages of **Nix** is the ability to install / use packages in\n**isolated environments** from the host system:\n\n```bash\n# Version installed in my host system\n$ python3 --version\n\n  Python 3.8.5\n\n# Launch a Nix Shell with a different version of the package\n$ nix-shell -p python39\n\n  # Version installed in the Nix shell\n  nix-shell $ python3 --version\n\n    Python 3.9.0\n```\n\nSometime ago while migrating an old **Kubernetes** cluster\nI found in the need of having two different versions of **Helm**\nin order to deal with **legacy** and **recent** deployments.\n\nThe solution is trivial: Use **Nix** to install the two versions!\n\nSo let\'s search the versions that Nix offers to us:\n\n```bash\n# Query the <nixpkgs> set in the host system\n$ nix-env -q --available --description | grep helm\n\n  helm-3.3.4  A package manager for kubernetes\n```\n\nProblem is that nix-channels usually offer a single version of a package,\nso \xbfWhat to do?\n\nSadly,\nthere is no native way of searching the Nix history for all versions of a package.\n\nGood thing is the community has come up with initiatives:\n\n- [Nixpkgs Database](/nixpkgs-db)\n- [Nix-package-revisions](https://lazamar.github.io/download-specific-package-version-with-nix)\n\nThat index the Nixpkgs history in order to provide versions lookups:\n\n```bash\nAttribute        Description                       Versions  License\nkubernetes-helm  A package manager for kubernetes  30        Apache License 2.0\n\n  kubernetes-helm v3.4.0\n  kubernetes-helm v3.1.1\n  kubernetes-helm v3.1.0\n  kubernetes-helm v3.0.3\n  kubernetes-helm v3.0.1\n  kubernetes-helm v2.9.1\n  kubernetes-helm v2.6.1\n  ...\n```\n\nThey even give you the command to install the package in your system!\n\n```bash\n# Helm is not even installed in my host system\n$ helm version\n\n  Command \'helm\' not found\n\n# Launch a Nix Shell with version 3.4.0 found in Nixpkgs Database\n$ nix-shell -p kubernetes-helm -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/0126c86672b7d14843225df16ddfefd7091eabe7.tar.gz\n\n  # Version installed in the Nix shell\n  nix-shell $ helm version\n\n    version.BuildInfo{Version:"v3.4.0", GitCommit:"", GitTreeState:"", GoVersion:"go1.15.3"}\n\n# Launch a Nix Shell with version 2.6.1 found in Nixpkgs Database\n$ nix-shell -p kubernetes-helm -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/01a664e7793158b434fefac9217ec48313b2dd45.tar.gz\n\n  # Version installed in the Nix shell\n  nix-shell $ helm version\n\n    Client: &version.Version{SemVer:"v2.6.1", GitCommit:"bbc1f71dc03afc5f00c6ac84b9308f8ecb4f39ac", GitTreeState:"clean"}\n```\n\nThis project is entirely **Open Source**!\n\nWe welcome [contributions](/nixpkgs-db/#/contributing) :)\n'},75:function(e,n){e.exports="This site is run by the effort of the community,\nyou can be part of it!\n\nWe genuinely appreciate people who are trying to improve this database.\n\n**Contributing examples**\n\nThere are many ways to contribute, not necessarily technical:\n\n- Tell other people of the work being done here.\n- [Sponsor](https://patreon.com/kamadorueda) the project.\n- Star or fork the [repository](https://github.com/kamadorueda/nixpkgs-db) so other people can find us easier.\n- The search engine is naive (currently a `String.contains`).\n  It would be awesome to use a modern algorithm.\n- Expanding the database size:\n\n  There are currently 280k+ commits in the nixpkgs repository,\n  we've only processed ~10k.\n\n  Expanding it is simple, though it consumes a little bit of machine resources:\n\n  - Clone the nixpkgs-db repository.\n  - Execute: `./build/sync.sh`\n  - Commit your `nixpkgs-db/data/` folder and create a PR.\n\n  The process is differential, once a commit is processed it's ignored in future\n  executions.\n- Help us improve the user interface.\n- Fire up an issue! we welcome ideas, feature requests and problems.\n"}},[[379,1,2]]]);
//# sourceMappingURL=main.chunk.js.map