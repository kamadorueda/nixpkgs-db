(this["webpackJsonpnixpkgs-db"]=this["webpackJsonpnixpkgs-db"]||[]).push([[0],{379:function(e,n,t){"use strict";t.r(n);var a=t(0),r=t.n(a),l=t(26),i=t.n(l),c=(t(57),t(390)),s=t(393),o=t(387),m=t(384),u=t(385),h=t(394),p=t(31),d=t(6),g="https://raw.githubusercontent.com/kamadorueda/nixpkgs-db/latest",b="https://github.com/NixOS/nixpkgs",E=t(76),f=t.n(E),v=t(391),k=t(383),x={text:function(e){return r.a.createElement("span",null,e.children)},break:function(){return r.a.createElement("br",null)},heading:function(e){return r.a.createElement("h".concat(e.level+1),{},e.children)},code:function(e){return r.a.createElement(r.a.Fragment,null,r.a.createElement("hr",null),r.a.createElement(v.a,{language:e.language,style:k.a},e.value),r.a.createElement("hr",null))}},y=function(e){return r.a.createElement(f.a,{children:e.content,renderers:x})},w=function(e){return function(){return r.a.createElement(m.a,null,r.a.createElement(u.a,{sm:12},r.a.createElement(y,{content:e})))}},N=t(27),S=t(30),j=t.n(S),T=t(53),O=function(){var e=Object(T.a)(j.a.mark((function e(n){var t;return j.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch(n);case 2:return t=e.sent,e.next=5,t.json();case 5:return e.abrupt("return",e.sent);case 6:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}(),C=function(e,n){var t=Object(a.useState)(n),r=Object(N.a)(t,2),l=r[0],i=r[1];return Object(a.useEffect)((function(){Object(T.a)(j.a.mark((function n(){return j.a.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.t0=i,n.next=3,O(e);case 3:return n.t1=n.sent,n.abrupt("return",(0,n.t0)(n.t1));case 5:case"end":return n.stop()}}),n)})))()}),[e]),l},A=t(80),$=t.n(A),V=t(81),I=t.n(V),K=t(397),L=t(392),H=t(386),P=t(388),z=t(395),D=t(389),G=t(398),F=t(396),B=function(e){return r.a.createElement(F.a,{animated:!0,label:e.label,now:100*Math.random(),variant:e.variant,stripped:!0})},M=function(e,n){return e.filter((function(e){return e.includes(n)})).sort()},W=function(e){var n=e.pkg,t="".concat(g,"/data/pkgs/").concat(n,".json"),a=function(e){var n=Object.entries(e);return n.sort((function(e,n){return e[0]<n[0]?1:-1})),n}(C(t,{}));if(0===a.length)return r.a.createElement(K.a,null,r.a.createElement(L.a.Toggle,{as:K.a.Header,variant:"link",eventKey:n},r.a.createElement(B,{label:"Loading...",variant:"info"})));var l,i=a[0][0],c=a[0][1];return r.a.createElement(K.a,null,r.a.createElement(L.a.Toggle,{as:K.a.Header,variant:"link",eventKey:n},r.a.createElement(m.a,null,r.a.createElement(u.a,{sm:3},r.a.createElement("b",null,""===c.meta.homepage?n:r.a.createElement("a",{href:c.meta.homepage,rel:"noopener",target:"blank"},n))),r.a.createElement(u.a,null,c.meta.description),r.a.createElement(u.a,{sm:1},a.length),r.a.createElement(u.a,{sm:2},void 0===(null===(l=c.meta.license)||void 0===l?void 0:l.fullName)?void 0:c.meta.license.fullName))),r.a.createElement(L.a.Collapse,{eventKey:n},r.a.createElement(H.a,null,r.a.createElement(L.a,{defaultActiveKey:"".concat(n," v").concat(i," @ ").concat(c.revs[1])},a.map((function(e){var a=e[0],l=e[1],i="".concat(n," v").concat(a," @ ").concat(l.revs[1]);return r.a.createElement(K.a,null,r.a.createElement(L.a.Toggle,{as:K.a.Header,variant:"link",eventKey:i},r.a.createElement("a",{href:t,rel:"noopener",target:"blank"},r.a.createElement("b",null,n," v",a))),r.a.createElement(L.a.Collapse,{eventKey:i},r.a.createElement(K.a.Body,null,r.a.createElement(K.a.Text,null,r.a.createElement(o.a,{fluid:!0},r.a.createElement(m.a,null,r.a.createElement(u.a,null,r.a.createElement("code",null,"$ ",r.a.createElement("b",null,"nix-shell")," -p ",n," -I nixpkgs=","".concat(b,"/archive/").concat(l.revs[1],".tar.gz")))),r.a.createElement(m.a,null,r.a.createElement(u.a,null,r.a.createElement("code",null,"$ ",r.a.createElement("b",null,"nix-env")," -i ",n," -f ","".concat(b,"/archive/").concat(l.revs[1],".tar.gz")))))))))}))))))},q=function(e){var n=e.pkgs,t=Object(a.useState)(1),l=Object(N.a)(t,2),i=l[0],c=l[1],s=Object(a.useState)(""),o=Object(N.a)(s,2),h=o[0],p=o[1],d=Object(a.useState)(M(n,"")),g=Object(N.a)(d,2),b=g[0],E=g[1],f=Math.min(1+10*(i-1),b.length),v=Math.min(10*i,b.length);return r.a.createElement(r.a.Fragment,null,r.a.createElement(m.a,null,r.a.createElement(u.a,{sm:6},r.a.createElement(P.a,null,r.a.createElement(P.a.Prepend,null,r.a.createElement(P.a.Text,{id:"pkgName"},"Package name")),r.a.createElement(z.a,{"aria-label":"pkgName","aria-describedby":"pkgName",onChange:function(e){p(e.target.value)}}),r.a.createElement(D.a,{onClick:function(){c(1),E(M(n,h))},variant:"outline-primary"},"Search"))),r.a.createElement(u.a,{sm:6},r.a.createElement(G.a,null,r.a.createElement(G.a.Prev,{disabled:1===i,onClick:function(){c(i-1)}}),r.a.createElement(G.a.Item,{disabled:!0},"Showing packages ",f,"-",v," of ",b.length),r.a.createElement(G.a.Next,{disabled:10*i>b.length,onClick:function(){c(i+1)}})))),r.a.createElement(m.a,null,r.a.createElement(u.a,{sm:12},r.a.createElement(L.a,{defaultActiveKey:b[0]},r.a.createElement(K.a,null,r.a.createElement(L.a.Toggle,{as:K.a.Header,variant:"dark"},r.a.createElement(m.a,null,r.a.createElement(u.a,{sm:3},r.a.createElement("b",null,"Attribute")),r.a.createElement(u.a,null,r.a.createElement("b",null,"Description")),r.a.createElement(u.a,{sm:1},r.a.createElement("b",null,"Versions")),r.a.createElement(u.a,{sm:2},r.a.createElement("b",null,"License"))))),b.slice(f-1,v).map((function(e){return r.a.createElement(W,{key:e,pkg:e})}))))))},J=function(e){var n=e.pkgs,t=e.revs;return r.a.createElement(r.a.Fragment,null,0===n.length?r.a.createElement(B,{label:"Loading...",variant:"info"}):r.a.createElement(q,{pkgs:n,revs:t}))},Q=function(e){return r.a.createElement(c.a.Item,null,r.a.createElement(c.a.Link,{href:e.href},e.children))},R=function(){var e=C("".concat(g,"/data/pkgs.json"),[]),n=C("".concat(g,"/data/revs.json"),[]);return r.a.createElement(r.a.Fragment,null,r.a.createElement(p.a,null,r.a.createElement(s.a,null,r.a.createElement(s.a.Brand,null,r.a.createElement("h1",null,"Nixpkgs Database!"),r.a.createElement("h5",null,"A database with packages from all versions, all commits and all channels."))),r.a.createElement(o.a,{fluid:!0},r.a.createElement(m.a,null,r.a.createElement(u.a,{sm:12},r.a.createElement(c.a,{variant:"tabs"},r.a.createElement(Q,null,r.a.createElement(p.b,{to:"/about"},"About")),r.a.createElement(Q,null,r.a.createElement(p.b,{to:"/contributing"},"Contributing")),r.a.createElement(Q,null,r.a.createElement(p.b,{to:"/search"},"Search")),r.a.createElement(Q,{href:"https://github.com/kamadorueda/nixpkgs-db"},"Source"),r.a.createElement(Q,{href:"https://www.patreon.com/kamadorueda"},"Sponsor")))),r.a.createElement("br",null),r.a.createElement(d.d,null,r.a.createElement(d.b,{exact:!0,path:"/search"},r.a.createElement(J,{pkgs:e,revs:n})),r.a.createElement(d.b,{exact:!0,path:"/about"},w($.a)),r.a.createElement(d.b,{exact:!0,path:"/contributing"},w(I.a)),r.a.createElement(d.a,{to:"/search"})),r.a.createElement("hr",null),r.a.createElement(m.a,null,r.a.createElement(u.a,{sm:12},r.a.createElement(h.a,{variant:"light"},"A total of ",e.length," packages and ",n.length," commits put in your hands ",r.a.createElement("br",null),"Created and maintained by Kevin Amado"))))))};i.a.render(r.a.createElement(R,null),document.getElementById("root"))},80:function(e,n){e.exports='# Searching and installing many versions of Nix packages\n\nOne of the advantages of **Nix** is the ability to install / use packages in\n**isolated environments** from the host system:\n\n```bash\n# Version installed in my host system\n$ python3 --version\n\n  Python 3.8.5\n\n# Launch a Nix Shell with a different version of the package\n$ nix-shell -p python39\n\n  # Version installed in the Nix shell\n  nix-shell $ python3 --version\n\n    Python 3.9.0\n```\n\nSometime ago while migrating an old **Kubernetes** cluster\nI found in the need of having two different versions of **Helm**\nin order to deal with **legacy** and **recent** deployments.\n\nThe solution is trivial: Use **Nix** to install the two versions!\n\nSo let\'s search the versions that Nix offers to us:\n\n```bash\n# Query the <nixpkgs> set in the host system\n$ nix-env -q --available --description | grep helm\n\n  helm-3.3.4  A package manager for kubernetes\n```\n\nProblem is that nix-channels usually offer a single version of a package,\nso \xbfWhat to do?\n\nSadly,\nthere is no native way of searching the Nix history for all versions of a package.\n\nGood thing is the community has come up with initiatives:\n\n- [Nixpkgs Database](/nixpkgs-db)\n- [Nix-package-revisions](https://lazamar.github.io/download-specific-package-version-with-nix)\n\nThat index the Nixpkgs history in order to provide versions lookups:\n\n```bash\nAttribute        Description                       Versions  License\nkubernetes-helm  A package manager for kubernetes  30        Apache License 2.0\n\n  kubernetes-helm v3.4.0\n  kubernetes-helm v3.1.1\n  kubernetes-helm v3.1.0\n  kubernetes-helm v3.0.3\n  kubernetes-helm v3.0.1\n  kubernetes-helm v2.9.1\n  kubernetes-helm v2.6.1\n  ...\n```\n\nThey even give you the command to install the package in your system!\n\n```bash\n# Helm is not even installed in my host system\n$ helm version\n\n  Command \'helm\' not found\n\n# Launch a Nix Shell with version 3.4.0 found in Nixpkgs Database\n$ nix-shell -p kubernetes-helm -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/0126c86672b7d14843225df16ddfefd7091eabe7.tar.gz\n\n  # Version installed in the Nix shell\n  nix-shell $ helm version\n\n    version.BuildInfo{Version:"v3.4.0", GitCommit:"", GitTreeState:"", GoVersion:"go1.15.3"}\n\n# Launch a Nix Shell with version 2.6.1 found in Nixpkgs Database\n$ nix-shell -p kubernetes-helm -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/01a664e7793158b434fefac9217ec48313b2dd45.tar.gz\n\n  # Version installed in the Nix shell\n  nix-shell $ helm version\n\n    Client: &version.Version{SemVer:"v2.6.1", GitCommit:"bbc1f71dc03afc5f00c6ac84b9308f8ecb4f39ac", GitTreeState:"clean"}\n```\n\nThis project is entirely **Open Source**!\n\nWe welcome [contributions](/nixpkgs-db/#/contributing) :)\n'},81:function(e,n){e.exports="This site is run by the effort of the community,\nyou can be part of it!\n\nWe genuinely appreciate people who are trying to improve this database.\n\n**Contributing examples**\n\nThere are many ways to contribute, not necessarily technical:\n\n- Tell other people of the work being done here.\n- [Sponsor](https://patreon.com/kamadorueda) the project.\n- Star or fork the [repository](https://github.com/kamadorueda/nixpkgs-db) so other people can find us easier.\n- The search engine is naive (currently a `String.contains`).\n  It would be awesome to use a modern algorithm.\n- Expanding the database size:\n\n  There are currently 280k+ commits in the nixpkgs repository,\n  we've only processed ~10k.\n\n  Expanding it is simple, though it consumes a little bit of machine resources:\n\n  - Clone the nixpkgs-db repository.\n  - Execute: `./build/sync.sh`\n  - Commit your `nixpkgs-db/data/` folder and create a PR.\n\n  The process is differential, once a commit is processed it's ignored in future\n  executions.\n- Help us improve the user interface.\n- Fire up an issue! we welcome ideas, feature requests and problems.\n"}},[[379,1,2]]]);
//# sourceMappingURL=main.chunk.js.map