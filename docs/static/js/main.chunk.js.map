{"version":3,"sources":["constants.jsx","components/A.jsx","components/Code.jsx","components/Markdown.jsx","hooks/fetch.jsx","components/ErrorBoundary.jsx","components/ProgressBar.jsx","views/Pkg.jsx","components/Pagination.jsx","views/Search.jsx","views/Root.jsx","index.js","views/About.md","views/Contributing.md","views/Source.md","views/Sponsor.md"],"names":["GITHUB_RAW_NIXPKGS_DB","A","props","params","href","undefined","remote","children","Code","content","dedent","lang","CodeBlock","Fragment","Highlight","language","style","renderers","text","break","heading","React","createElement","concat","level","code","value","Markdown","markdownTab","Row","Col","sm","fetchJSON","url","a","fetch","response","ok","status","json","useFetchJSON","defaultData","useState","data","setData","useEffect","ErrorBoundary","state","hasError","error","errorInfo","this","onError","Component","ProgressBar","animated","label","now","Math","random","variant","striped","pkgVersionLink","pkg","version","encodeURIComponent","formatMaintainers","maintainers","formatted","maintainer","push","name","email","sort","formatPlatforms","platforms","platform","Item","title","includes","PkgLoaded","dataJSON","dataSource","useParams","to","versionData","versions","map","nixpkgs","revs","nixEnv","nixShell","nixBuild","pkgName","meta","v","description","long_description","homepage","license","fullName","Pkg","Object","entries","reverse","length","Pagination","renderCaption","resultPerPage","results","setResultsOnPage","page","setPage","min","endPage","startPage","changePage","delta","slice","Prev","disabled","onClick","resultsLength","Next","filterPkgs","pkgs","filter","PkgLoading","lastData","pkgLink","Badge","SearchLoaded","matchingPackages","setMatchingPackages","matchingPackagesOnPage","setMatchingPackagesOnPage","InputGroup","Prepend","Text","id","FormControl","aria-label","aria-describedby","onChange","event","target","key","Search","Tab","Nav","Link","Root","Container","fluid","exact","path","contentAbout","contentContributing","contentSource","contentSponsor","Alert","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["export const GITHUB_RAW_NIXPKGS_DB = 'https://raw.githubusercontent.com/kamadorueda/nixpkgs-db/latest'\nexport const GITHUB_NIXPKGS = 'https://github.com/NixOS/nixpkgs'\n","import React from 'react';\n\nexport const A = (props) => {\n  let params = {\n    href: props.href,\n  };\n\n  const remote = props.remote === undefined ? true : props.remote;\n\n  if (remote) {\n    params[\"rel\"] = \"noopener\";\n    params[\"target\"] = \"_blank\";\n  }\n\n  return (\n    <a {...params}>\n      {props.children === undefined ? props.href : props.children}\n    </a>\n  );\n};\n","import React from 'react';\nimport dedent from 'dedent';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { vs as style } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nexport const Code = (props) => (\n  <Highlight content={dedent(props.content)} lang={props.lang} />\n);\n\nexport const CodeBlock = (props) => (\n  <React.Fragment>\n    <hr />\n    <Code content={props.content} lang={props.lang} />\n    <hr />\n  </React.Fragment>\n);\n\nexport const Highlight = (props) => (\n  <SyntaxHighlighter language={props.lang} style={style}>\n    {props.content}\n  </SyntaxHighlighter>\n);\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Col, Row } from 'react-bootstrap';\n\nimport { CodeBlock } from './Code';\n\nconst renderers = {\n  text: (props) => <span>{props.children}</span>,\n  break: () => <br />,\n  heading: (props) => React.createElement(\"h\".concat(props.level + 1), {}, props.children),\n  code: (props) => <CodeBlock lang={props.language} content={props.value} />,\n  // paragraph: (props) => <p>{props.children}</p>,\n  // emphasis: (props) => <em>{props.children}</em>,\n  // strong: (props) => <strong>{props.children}</strong>,\n  // thematicBreak: (props) => <hr>{props.children}</hr>,\n  // blockquote: (props) => <blockquote>{props.children}</blockquote>,\n  // link: (props) => <a>{props.children}</a>,\n  // image: (props) => <img>{props.children}</img>,\n  // linkReference: (props) => <a>{props.children}</a>,\n  // imageReference: (props) => <img>{props.children}</img>,\n  // listItem: (props) => <li>{props.children}</li>,\n  // inlineCode: (props) => <code>{props.children}</code>,\n  // list: (props) => <ul> or <ol>{props.children}</ul> or <ol>,\n  // {/* heading: (props) => <h1> through <h6>{props.children}</h1> through <h6>, */}\n}\n\nexport const Markdown = (props) => (\n  <ReactMarkdown\n    children={props.content}\n    renderers={renderers}\n  />\n)\n\nexport const markdownTab = (content) => () => {\n  return (\n    <Row>\n      <Col sm={12}>\n        <Markdown content={content} />\n      </Col>\n    </Row>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nconst fetchJSON = async (url) => {\n  let response = await fetch(url);\n\n  while (!response.ok || response.status !== 200) {\n    response = await fetch(url);\n  }\n\n  return await response.json();\n};\n\nexport const useFetchJSON = (url, defaultData) => {\n  const [data, setData] = useState(defaultData);\n\n  useEffect(() => {\n    (async () => setData(await fetchJSON(url)))();\n  }, [url]);\n\n  return data;\n}\n","import React from 'react';\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return this.props.onError;\n    }\n\n    return this.props.children;\n  }\n}\n","import React from 'react';\nimport { ProgressBar as BootstrapProgressBar } from 'react-bootstrap';\n\nexport const ProgressBar = (props) => (\n  <BootstrapProgressBar\n    animated={true}\n    label={props.label}\n    now={100 * Math.random()}\n    variant={props.variant}\n    striped={true}\n  />\n)\n","import React from 'react';\nimport {\n  Col,\n  Row,\n} from 'react-bootstrap';\nimport {\n  RiCpuLine,\n  RiExternalLinkFill,\n  RiUserHeartLine,\n} from 'react-icons/ri';\nimport { useParams, Redirect } from 'react-router-dom';\nimport { A } from '../components/A';\nimport { Code } from '../components/Code';\nimport { ErrorBoundary } from '../components/ErrorBoundary';\nimport { ProgressBar } from '../components/ProgressBar';\nimport { GITHUB_NIXPKGS, GITHUB_RAW_NIXPKGS_DB } from '../constants';\nimport { useFetchJSON } from '../hooks/fetch';\n\nconst pkgVersionLink = (pkg, version) => (\n  `/pkg/${encodeURIComponent(pkg)}/${encodeURIComponent(version)}`\n);\n\nconst formatMaintainers = (maintainers) => {\n  let formatted = [];\n\n  if (maintainers === undefined) {\n    return formatted;\n  }\n\n  for (let maintainer of maintainers) {\n    switch (typeof maintainer) {\n      case \"string\":\n        formatted.push(maintainer);\n        break;\n      case \"object\":\n        formatted.push(`${maintainer.name} <${maintainer.email}>`);\n        break;\n      default:\n    }\n  }\n\n  return formatted.sort();\n}\n\nconst formatPlatforms = (platforms) => {\n  let formatted = [];\n\n  if (platforms === undefined) {\n    return formatted;\n  }\n\n  for (let platform of platforms) {\n    switch (typeof platform) {\n      case \"string\":\n        formatted.push(platform);\n        break;\n      default:\n    }\n  }\n\n  return formatted.sort();\n}\n\nconst Item = (props) => (\n  <React.Fragment>\n    <Row>\n      <Col sm={2}><b>{props.title}</b></Col>\n      <Col sm={10}>\n      <ErrorBoundary onError=\"Not specified\">\n        {[null, undefined, \"\"].includes(props.content)\n          ? \"-\"\n          : props.content}\n      </ErrorBoundary>\n      </Col>\n    </Row>\n    <hr />\n  </React.Fragment>\n);\n\nconst PkgLoaded = (props) => {\n  const { data, dataJSON, dataSource } = props;\n  const { pkg, version } = useParams();\n\n  if (version === undefined) {\n    return <Redirect to={pkgVersionLink(pkg, data[0][0])} />;\n  }\n\n  const versionData = dataJSON[version];\n  const versions = data.map(([version, _]) => version);\n\n  const nixpkgs = `${GITHUB_NIXPKGS}/archive/${versionData?.revs[1]}.tar.gz`;\n  const nixEnv = `\n    # Version: ${version}\n    nix-env -i ${pkg} -f ${nixpkgs}\n  `;\n  const nixShell = `\n    # Version: ${version}\n    nix-env -i ${pkg} -I nixpkgs=${nixpkgs}\n  `;\n  const nixBuild = `\n    let\n      pkgs = import <nixpkgs> { };\n\n      # Version: ${version}\n      ${pkg} = (import (pkgs.fetchzip {\n        url = \"https://github.com/nixos/nixpkgs/archive/${versionData.revs[1]}.zip\";\n        # Please update this hash with the one nix says on the first build attempt\n        sha256 = \"0000000000000000000000000000000000000000000000000000000000000000\";\n      }) { }).${pkg};\n    in\n      ...\n  `;\n\n  const pkgName = versionData?.meta?.name === undefined ? \"\" : `(${versionData?.meta?.name})`;\n  return (\n    <Row>\n      <Col sm={12}>\n        <Item\n          title=\"Package\"\n          content={`${pkg} ${pkgName}`}\n        />\n        <Item\n          title=\"This page version\"\n          content={version}\n        />\n        <Item\n          title=\"All versions\"\n          content={\n            <Row>\n              {versions.map((v) => (\n                <Col sm={2}>\n                  <A href={`/nixpkgs-db/#${pkgVersionLink(pkg, v)}`}>\n                    <RiExternalLinkFill /> {v}\n                  </A>\n                </Col>\n              ))}\n            </Row>\n          }\n        />\n\n        <Item\n          title=\"Description\"\n          content={versionData?.meta?.description}\n        />\n        <Item\n          title=\"Long description\"\n          content={versionData?.meta?.long_description}\n        />\n        <Item\n          title=\"Homepage\"\n          content={<A href={versionData?.meta?.homepage} />}\n        />\n        <Item\n          title=\"License\"\n          content={versionData?.meta?.license?.fullName}\n        />\n        <Item\n          title=\"Maintainers\"\n          content={\n            <Row>\n              {formatMaintainers(versionData?.meta?.maintainers).map((maintainer) => (\n                <Col sm={6}> <RiUserHeartLine /> {maintainer}</Col>\n              ))}\n            </Row>\n          }\n        />\n        <Item\n          title=\"Interactive shell\"\n          content={<Code content={nixShell} lang=\"bash\" />}\n        />\n        <Item\n          title=\"Install in your system\"\n          content={<Code content={nixEnv} lang=\"bash\" />}\n        />\n        <Item\n          title=\"Use in an expression\"\n          content={<Code content={nixBuild} lang=\"nix\" />}\n        />\n        <Item\n          title=\"Commits range\"\n          content={\n            `${versionData?.revs[0]} -> ${versionData?.revs[1]}\n          `}\n        />\n        <Item\n          title=\"Raw data\"\n          content={<A href={dataSource} />}\n        />\n        <Item\n          title=\"Available platforms\"\n          content={\n            <Row>\n              {formatPlatforms(versionData?.meta?.platforms).map((platform) => (\n                <Col sm={2}> <RiCpuLine /> {platform}</Col>\n              ))}\n            </Row>\n          }\n        />\n      </Col>\n    </Row>\n  );\n};\n\nexport const Pkg = () => {\n  const { pkg } = useParams();\n\n  const dataSource = `${GITHUB_RAW_NIXPKGS_DB}/data/pkgs/${pkg}.json`;\n  const dataJSON = useFetchJSON(dataSource, {});\n  const data =  Object.entries(dataJSON).reverse();\n\n  if (data.length === 0) {\n    return <ProgressBar label=\"Loading...\" variant=\"info\" />;;\n  }\n\n  return <PkgLoaded data={data} dataJSON={dataJSON} dataSource={dataSource} />;\n};\n","import React, { useEffect, useState } from 'react';\nimport { Pagination as BootstrapPagination } from 'react-bootstrap';\n\nexport const Pagination = (props) => {\n  const { renderCaption, resultPerPage, results, setResultsOnPage, } = props;\n\n  const [page, setPage] = useState(1);\n\n  const [endPage, startPage] = [\n    Math.min((page - 1) * resultPerPage + 1, results.length),\n    Math.min((page - 0) * resultPerPage + 0, results.length),\n  ];\n\n  const changePage = (delta) => () => {\n    setPage(page + delta);\n  };\n\n  useEffect(() => {\n    setPage(1);\n  }, [results]);\n\n  useEffect(() => {\n    setResultsOnPage(results.slice(startPage - 1, endPage));\n  }, [endPage, results, setResultsOnPage, startPage]);\n\n  return (\n    <BootstrapPagination>\n      <BootstrapPagination.Prev\n        disabled={page === 1}\n        onClick={changePage(-1)}\n      />\n      <BootstrapPagination.Item disabled={true}>\n        {renderCaption({\n          endPage,\n          startPage,\n          resultsLength: results.length,\n        })}\n      </BootstrapPagination.Item>\n      <BootstrapPagination.Next\n        disabled={page * resultPerPage > results.length}\n        onClick={changePage(+1)}\n      />\n    </BootstrapPagination>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Badge,\n  Col,\n  FormControl,\n  InputGroup,\n  Row,\n} from 'react-bootstrap';\nimport { RiExternalLinkFill } from 'react-icons/ri';\nimport { Link } from 'react-router-dom';\nimport { Pagination } from '../components/Pagination';\nimport { ProgressBar } from '../components/ProgressBar';\nimport { GITHUB_RAW_NIXPKGS_DB } from '../constants';\nimport { useFetchJSON } from '../hooks/fetch';\n\nconst RESULTS_PER_PAGE = 5;\n\nconst filterPkgs = (pkgs, pkgName) => (\n  pkgs.filter((pkg) => pkg.includes(pkgName)).sort()\n);\n\nconst PkgLoading = () => (\n  <React.Fragment>\n    <Row>\n      <Col sm={12}>\n        <ProgressBar label=\"Loading...\" variant=\"info\" />\n      </Col>\n    </Row>\n    <hr />\n  </React.Fragment>\n);\n\nconst PkgLoaded = (props) => {\n  const { data, pkg } = props;\n  const lastData = props.data[0][1];\n  const pkgLink = `/pkg/${encodeURIComponent(pkg)}`;\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Col sm={12}>\n          <Link to={pkgLink}>\n            <RiExternalLinkFill /> {pkg}\n            {pkg === lastData.meta.name ? \"\" : ` (${lastData.meta.name})`}\n          </Link>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm={12}>\n          {lastData.meta.description}\n        </Col>\n      </Row>\n      <Row>\n        <Col sm={12}>\n          <Badge variant=\"info\">\n            {data.length} version{data.length >= 2 ? \"s\" : \"\"} available\n          </Badge>\n        </Col>\n      </Row>\n      <hr />\n    </React.Fragment>\n  );\n};\n\nconst Pkg = (props) => {\n  const pkg = props.pkg;\n\n  const dataSource = `${GITHUB_RAW_NIXPKGS_DB}/data/pkgs/${pkg}.json`;\n  const dataJSON = useFetchJSON(dataSource, {});\n  const data =  Object.entries(dataJSON).reverse();\n\n  if (data.length === 0) {\n    return <PkgLoading />;\n  }\n\n  return <PkgLoaded data={data} pkg={pkg} />;\n};\n\nconst SearchLoaded = (props) => {\n  const pkgs = props.pkgs;\n\n  const [matchingPackages, setMatchingPackages] = useState(filterPkgs(pkgs, \"\"));\n  const [matchingPackagesOnPage, setMatchingPackagesOnPage] = useState([]);\n\n  const onPkgNameChange = (event) => {\n    setMatchingPackages(filterPkgs(pkgs, event.target.value));\n  };\n  const renderCaption = ({ endPage, startPage, resultsLength }) => (\n    `Showing packages ${startPage}-${endPage} of ${resultsLength}`\n  );\n\n  return (\n    <React.Fragment>\n      {/* Search box */}\n      <Row>\n        <Col sm={12}>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"pkgName\">Package name</InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              aria-label=\"pkgName\"\n              aria-describedby=\"pkgName\"\n              onChange={onPkgNameChange}\n            />\n          </InputGroup>\n        </Col>\n      </Row>\n\n      {/* Pagination */}\n      <br />\n      <Row>\n        <Col sm={12}>\n          <Pagination\n            renderCaption={renderCaption}\n            resultPerPage={RESULTS_PER_PAGE}\n            results={matchingPackages}\n            setResultsOnPage={setMatchingPackagesOnPage}\n          />\n        </Col>\n      </Row>\n\n      {/* Results table */}\n      <Row>\n        <Col sm={12}>\n          <hr />\n          {matchingPackagesOnPage.map((pkg) => <Pkg key={pkg} pkg={pkg} />)}\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n}\n\nexport const Search = (props) => {\n  if (props.pkgs.length === 0) {\n    return <ProgressBar label=\"Loading...\" variant=\"info\" />;\n  }\n\n  return <SearchLoaded pkgs={props.pkgs} revs={props.revs} />;\n}\n","import React from 'react';\nimport {\n  Alert,\n  Col,\n  Container,\n  Nav,\n  Row,\n} from 'react-bootstrap';\nimport {\n  HashRouter,\n  Link,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport {\n  RiBrushLine,\n  RiCodeSSlashLine,\n  RiHeart3Line,\n  RiInformationLine,\n  RiSearchLine,\n} from 'react-icons/ri';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { GITHUB_RAW_NIXPKGS_DB } from '../constants';\nimport { A } from '../components/A';\nimport { markdownTab } from '../components/Markdown';\nimport { useFetchJSON } from '../hooks/fetch';\nimport contentAbout from './About.md';\nimport contentContributing from './Contributing.md';\nimport contentSource from './Source.md';\nimport contentSponsor from './Sponsor.md';\nimport { Pkg } from './Pkg';\nimport { Search } from './Search';\n\nconst Tab = (props) => (\n  <Nav.Item>\n    <Nav.Link href={props.href}>\n      {props.children}\n    </Nav.Link>\n  </Nav.Item>\n);\n\nexport const Root = () => {\n  const pkgs = useFetchJSON(`${GITHUB_RAW_NIXPKGS_DB}/data/pkgs.json`, []);\n  const revs = useFetchJSON(`${GITHUB_RAW_NIXPKGS_DB}/data/revs.json`, []);\n\n  return (\n    <Container fluid={true}>\n      {/* Header */}\n      <Row>\n        <Col sm={12}>\n          <A href=\"/nixpkgs-db\" remote={false}>\n            <h1>Nixpkgs Database!</h1>\n          </A>\n        </Col>\n      </Row>\n      <Row>\n        <Col sm={12}>\n          <h5>A database with packages at all versions, from all channels.</h5>\n        </Col>\n      </Row>\n\n      {/* Content */}\n      <HashRouter>\n        {/* Navigation tabs */}\n        <Row>\n          <Col sm={12}>\n            <Nav variant=\"tabs\">\n              <Tab>\n                <Link to=\"/about\"><RiInformationLine /> About</Link>\n              </Tab>\n              <Tab>\n                <Link to=\"/contributing\"><RiBrushLine /> Contributing</Link>\n              </Tab>\n              <Tab>\n                <Link to=\"/search\"><RiSearchLine /> Search</Link>\n              </Tab>\n              <Tab>\n                <Link to=\"/source\"><RiCodeSSlashLine /> Source</Link>\n              </Tab>\n              <Tab>\n                <Link to=\"/sponsor\"><RiHeart3Line /> Sponsor</Link>\n              </Tab>\n            </Nav>\n          </Col>\n        </Row>\n        <br />\n\n        {/* Dynamic page body */}\n        <Switch>\n          <Route exact={true} path=\"/about\">\n            {markdownTab(contentAbout)}\n          </Route>\n          <Route exact={true} path=\"/contributing\">\n            {markdownTab(contentContributing)}\n          </Route>\n          <Route exact={true} path=\"/pkg/:pkg\">\n            <Pkg />\n          </Route>\n          <Route exact={true} path=\"/pkg/:pkg/:version\">\n            <Pkg />\n          </Route>\n          <Route exact={true} path=\"/search\">\n            <Search pkgs={pkgs} revs={revs} />\n          </Route>\n          <Route exact={true} path=\"/source\">\n            {markdownTab(contentSource)}\n          </Route>\n          <Route exact={true} path=\"/sponsor\">\n            {markdownTab(contentSponsor)}\n          </Route>\n          <Redirect to=\"/search\" />\n        </Switch>\n      </HashRouter>\n\n      {/* Footer */}\n      <hr />\n      <Row>\n        <Col sm={12}>\n          <Alert variant=\"light\">\n            A total of {pkgs.length} packages and {revs.length} commits put in your hands <br />\n            Created and maintained by Kevin Amado\n          </Alert>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Root } from './views/Root';\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root'),\n);\n","module.exports = \"One of the advantages of **Nix** is the ability to install / use packages in\\n**isolated environments** from the host system:\\n\\n```bash\\n# Version installed in my host system\\n$ python3 --version\\n\\n  Python 3.8.5\\n\\n# Launch a Nix Shell with a different version of the package\\n$ nix-shell -p python39\\n\\n  # Version installed in the Nix shell\\n  nix-shell $ python3 --version\\n\\n    Python 3.9.0\\n```\\n\\nSometime ago while migrating an old **Kubernetes** cluster\\nI found in the need of having two different versions of **Helm**\\nin order to deal with **legacy** and **recent** deployments.\\n\\nThe solution is trivial: Use **Nix** to install the two versions!\\n\\nSo let's search the versions that Nix offers to us:\\n\\n```bash\\n# Query the <nixpkgs> set in the host system\\n$ nix-env -q --available --description | grep helm\\n\\n  helm-3.3.4  A package manager for kubernetes\\n```\\n\\nProblem is that nix-channels usually offer a single version of a package,\\nso ¿What to do?\\n\\nSadly,\\nthere is no native way of searching the Nix history for all versions of a package.\\n\\nGood thing is the community has come up with initiatives:\\n\\n- [Nixpkgs Database](/nixpkgs-db)\\n- [Nix-package-revisions](https://lazamar.github.io/download-specific-package-version-with-nix)\\n\\nThat index the Nixpkgs history in order to provide versions lookups:\\n\\n```bash\\nAttribute        Description                       Versions  License\\nkubernetes-helm  A package manager for kubernetes  30        Apache License 2.0\\n\\n  kubernetes-helm v3.4.0\\n  kubernetes-helm v3.1.1\\n  kubernetes-helm v3.1.0\\n  kubernetes-helm v3.0.3\\n  kubernetes-helm v3.0.1\\n  kubernetes-helm v2.9.1\\n  kubernetes-helm v2.6.1\\n  ...\\n```\\n\\nThey even give you the command to install the package in your system!\\n\\n```bash\\n# Helm is not even installed in my host system\\n$ helm version\\n\\n  Command 'helm' not found\\n\\n# Launch a Nix Shell with version 3.4.0 found in Nixpkgs Database\\n$ nix-shell -p kubernetes-helm -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/0126c86672b7d14843225df16ddfefd7091eabe7.tar.gz\\n\\n  # Version installed in the Nix shell\\n  nix-shell $ helm version\\n\\n    version.BuildInfo{Version:\\\"v3.4.0\\\", GitCommit:\\\"\\\", GitTreeState:\\\"\\\", GoVersion:\\\"go1.15.3\\\"}\\n\\n# Launch a Nix Shell with version 2.6.1 found in Nixpkgs Database\\n$ nix-shell -p kubernetes-helm -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/01a664e7793158b434fefac9217ec48313b2dd45.tar.gz\\n\\n  # Version installed in the Nix shell\\n  nix-shell $ helm version\\n\\n    Client: &version.Version{SemVer:\\\"v2.6.1\\\", GitCommit:\\\"bbc1f71dc03afc5f00c6ac84b9308f8ecb4f39ac\\\", GitTreeState:\\\"clean\\\"}\\n```\\n\\nThis project is entirely **Free and Open Source Software**!\\n\\nYou can read more about the technical details [here](https://www.patreon.com/posts/creating-zero-43586691).\\n\\nAnd by the way, we welcome [contributions](/nixpkgs-db/#/contributing) :)\\n\";","module.exports = \"This site is run by the effort of the community,\\nyou can be part of it!\\n\\nWe genuinely appreciate people who are trying to improve this database.\\n\\n**Contributing examples**\\n\\nThere are many ways to contribute, not necessarily technical:\\n\\n- Tell other people of the work being done here.\\n- Star or fork the [repository](https://github.com/kamadorueda/nixpkgs-db),\\n  this help us with funding and popularity.\\n- The search engine is naive (currently a `String.contains`).\\n  It would be awesome to use a modern algorithm.\\n- Expanding the database size:\\n\\n  There are currently 280k+ commits in the nixpkgs repository,\\n  we've only processed ~100k.\\n\\n  Expanding it is simple, though it consumes a little bit of machine resources:\\n\\n  - Clone the nixpkgs-db repository.\\n  - Execute: `nixpkgs-db $ ./build/sync.sh`\\n  - Commit your data folder and create a PR: `nixpkgs-db $ git add data/`\\n\\n  The process is differential, once a commit is processed it's ignored in future\\n  executions.\\n- Help us improve the user interface.\\n- Fire up an issue! we welcome ideas, feature requests and problems.\\n- [Become a sponsor of the project](/nixpkgs-db/#/sponsor).\\n\";","module.exports = \"This service is [Free and Open Source Software](https://en.wikipedia.org/wiki/FOSS)!\\n\\nThe source code is hosted at [Nixpkgs-db](https://github.com/kamadorueda/nixpkgs-db)  on GitHub.\\n\";","module.exports = \"This service was written with love!\\n\\nOne of the best ways to help me do more things like this is\\n[sponsoring me on Patreon](https://www.patreon.com/kamadorueda).\\n\\nEvery penny you contribute goes to support more\\n[FOSS](https://en.wikipedia.org/wiki/FOSS)\\ncontributions and cool stuff for the community.\\n\\nYou'll get my eternal gratitude for it!\\nand even if you do not, relax! there are other ways of [contributing](/nixpkgs-db/#/contributing).\\n\";"],"sourceRoot":""}