{"version":3,"sources":["constants.jsx","components/Markdown.jsx","hooks/fetch.jsx","components/A.jsx","components/Code.jsx","components/ErrorBoundary.jsx","components/ProgressBar.jsx","views/Pkg.jsx","views/Search.jsx","views/Root.jsx","index.js","views/About.md","views/Contributing.md","views/Source.md","views/Sponsor.md"],"names":["GITHUB_RAW_NIXPKGS_DB","renderers","text","props","children","break","heading","React","createElement","concat","level","code","Fragment","language","style","value","Markdown","content","markdownTab","Row","Col","sm","fetchJSON","url","a","fetch","response","json","useFetchJSON","defaultData","useState","data","setData","useEffect","A","href","rel","target","undefined","Code","ErrorBoundary","state","hasError","error","errorInfo","this","onError","Component","ProgressBar","animated","label","now","Math","random","variant","stripped","pkgVersionLink","pkg","version","encodeURIComponent","Item","title","includes","PkgLoaded","dataJSON","dataSource","useParams","to","versionData","versions","map","nixpkgs","revs","nixEnv","nixShell","meta","name","description","long_description","homepage","license","fullName","platforms","sort","platform","v","Pkg","Object","entries","reverse","length","filterPkgs","pkgs","pkgName","filter","PkgLoading","lastData","pkgLink","SearchLoaded","page","setPage","setPkgName","matchingPackages","setMatchingPackages","startPage","min","endPage","matchingPackagesOnPage","slice","InputGroup","Prepend","Text","id","FormControl","aria-label","aria-describedby","onChange","event","Button","onClick","Pagination","Prev","disabled","Next","Search","Tab","Nav","Link","Root","Container","fluid","Navbar","Brand","exact","path","contentAbout","contentContributing","contentSource","contentSponsor","Alert","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["export const GITHUB_RAW_NIXPKGS_DB = 'https://raw.githubusercontent.com/kamadorueda/nixpkgs-db/latest'\nexport const GITHUB_NIXPKGS = 'https://github.com/NixOS/nixpkgs'\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { Col, Row } from 'react-bootstrap';\nimport { vs as style } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nconst renderers = {\n  text: (props) => <span>{props.children}</span>,\n  break: () => <br />,\n  heading: (props) => React.createElement(\"h\".concat(props.level + 1), {}, props.children),\n  code: (props) => (\n    <React.Fragment>\n      <hr />\n      <SyntaxHighlighter language={props.language} style={style}>\n        {props.value}\n      </SyntaxHighlighter>\n      <hr />\n    </React.Fragment>\n  )\n  // paragraph: (props) => <p>{props.children}</p>,\n  // emphasis: (props) => <em>{props.children}</em>,\n  // strong: (props) => <strong>{props.children}</strong>,\n  // thematicBreak: (props) => <hr>{props.children}</hr>,\n  // blockquote: (props) => <blockquote>{props.children}</blockquote>,\n  // link: (props) => <a>{props.children}</a>,\n  // image: (props) => <img>{props.children}</img>,\n  // linkReference: (props) => <a>{props.children}</a>,\n  // imageReference: (props) => <img>{props.children}</img>,\n  // listItem: (props) => <li>{props.children}</li>,\n  // inlineCode: (props) => <code>{props.children}</code>,\n  // list: (props) => <ul> or <ol>{props.children}</ul> or <ol>,\n  // {/* heading: (props) => <h1> through <h6>{props.children}</h1> through <h6>, */}\n}\n\nexport const Markdown = (props) => (\n  <ReactMarkdown\n    children={props.content}\n    renderers={renderers}\n  />\n)\n\nexport const markdownTab = (content) => () => {\n  return (\n    <Row>\n      <Col sm={12}>\n        <Markdown content={content} />\n      </Col>\n    </Row>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nconst fetchJSON = async (url) => {\n  const response = await fetch(url);\n\n  return await response.json();\n};\n\nexport const useFetchJSON = (url, defaultData) => {\n  const [data, setData] = useState(defaultData);\n\n  useEffect(() => {\n    (async () => setData(await fetchJSON(url)))();\n  }, [url]);\n\n  return data;\n}\n","import React from 'react';\n\nexport const A = (props) => (\n  <a\n    href={props.href}\n    rel=\"noopener\"\n    target=\"_blank\"\n  >\n    {props.children === undefined ? props.href : props.children}\n  </a>\n)\n","import React from 'react';\n\nexport const Code = (props) => (\n  <code>\n    $ {props.content}\n  </code>\n)\n","import React from 'react';\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return this.props.onError;\n    }\n\n    return this.props.children;\n  }\n}\n","import React from 'react';\nimport { ProgressBar as BootstrapProgressBar } from 'react-bootstrap';\n\nexport const ProgressBar = (props) => (\n  <BootstrapProgressBar\n    animated={true}\n    label={props.label}\n    now={100 * Math.random()}\n    variant={props.variant}\n    stripped={true}\n  />\n)\n","import React, { useState } from 'react';\nimport {\n  Col,\n  Row,\n} from 'react-bootstrap';\nimport {\n  RiCpuLine,\n  RiExternalLinkFill,\n} from 'react-icons/ri';\nimport { Link, useParams, Redirect } from 'react-router-dom';\nimport { A } from '../components/A';\nimport { Code } from '../components/Code';\nimport { ErrorBoundary } from '../components/ErrorBoundary';\nimport { ProgressBar } from '../components/ProgressBar';\nimport { GITHUB_NIXPKGS, GITHUB_RAW_NIXPKGS_DB } from '../constants';\nimport { useFetchJSON } from '../hooks/fetch';\n\nconst pkgVersionLink = (pkg, version) => (\n  `/pkg/${encodeURIComponent(pkg)}/${encodeURIComponent(version)}`\n);\n\nconst Item = (props) => (\n  <React.Fragment>\n    <Row>\n      <Col sm={2}><b>{props.title}</b></Col>\n      <Col sm={10}>\n      <ErrorBoundary onError=\"Not specified\">\n        {[null, undefined, \"\"].includes(props.content)\n          ? \"-\"\n          : props.content}\n      </ErrorBoundary>\n      </Col>\n    </Row>\n    <hr />\n  </React.Fragment>\n);\n\nconst PkgLoaded = (props) => {\n  const { data, dataJSON, dataSource } = props;\n  const { pkg, version } = useParams();\n\n  if (version === undefined) {\n    return <Redirect to={pkgVersionLink(pkg, data[0][0])} />;\n  }\n\n  const versionData = dataJSON[version];\n  const versions = data.map(([version, _]) => version);\n\n  const nixpkgs = `${GITHUB_NIXPKGS}/archive/${versionData?.revs[1]}.tar.gz`;\n  const nixEnv = `nix-env -i '${pkg}' -f '${nixpkgs}'`;\n  const nixShell = `nix-env -i '${pkg}' -I 'nixpkgs=${nixpkgs}'`;\n\n  return (\n    <Row>\n      <Col sm={12}>\n        <Item\n          title=\"Package\"\n          content={pkg}\n        />\n        <Item\n          title=\"Name\"\n          content={versionData?.meta?.name}\n        />\n        <Item\n          title=\"Version\"\n          content={version}\n        />\n        <Item\n          title=\"Description\"\n          content={versionData?.meta?.description}\n        />\n        <Item\n          title=\"Long description\"\n          content={versionData?.meta?.long_description}\n        />\n        <Item\n          title=\"Homepage\"\n          content={<A href={versionData?.meta?.homepage} />}\n        />\n        <Item\n          title=\"License\"\n          content={versionData?.meta?.license?.fullName}\n        />\n        <Item\n          title=\"Platforms\"\n          content={\n            <Row>\n              {versionData?.meta?.platforms?.sort()?.map((platform) => (\n                <Col sm={2}><RiCpuLine /> {platform}</Col>\n              ))}\n            </Row>\n          }\n        />\n        {/* Add Maintainers */}\n        <Item\n          title=\"Interactive shell\"\n          content={<Code content={nixShell} />}\n        />\n        <Item\n          title=\"Install in your system\"\n          content={<Code content={nixEnv} />}\n        />\n        <Item\n          title=\"Commits range\"\n          content={\n            `${versionData?.revs[0]} -> ${versionData?.revs[1]}\n          `}\n        />\n        <Item\n          title=\"Versions\"\n          content={\n            <Row>\n              {versions.map((v) => (\n                <Col sm={2}>\n                  <Link to={pkgVersionLink(pkg, v)}>\n                    <RiExternalLinkFill /> {v}\n                  </Link>\n                </Col>\n              ))}\n            </Row>\n          }\n        />\n        <Item\n          title=\"Raw\"\n          content={<A href={dataSource} />}\n        />\n      </Col>\n    </Row>\n  );\n};\n\nexport const Pkg = () => {\n  const { pkg } = useParams();\n\n  const dataSource = `${GITHUB_RAW_NIXPKGS_DB}/data/pkgs/${pkg}.json`;\n  const dataJSON = useFetchJSON(dataSource, {});\n  const data =  Object.entries(dataJSON).reverse();\n\n  if (data.length === 0) {\n    return <ProgressBar label=\"Loading...\" variant=\"info\" />;;\n  }\n\n  return <PkgLoaded data={data} dataJSON={dataJSON} dataSource={dataSource} />;\n};\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Col,\n  FormControl,\n  InputGroup,\n  Pagination,\n  Row,\n} from 'react-bootstrap';\nimport { RiExternalLinkFill } from 'react-icons/ri';\nimport { Link } from 'react-router-dom';\nimport { ProgressBar } from '../components/ProgressBar';\nimport { GITHUB_RAW_NIXPKGS_DB } from '../constants';\nimport { useFetchJSON } from '../hooks/fetch';\n\nconst RESULTS_PER_PAGE = 10;\n\nconst filterPkgs = (pkgs, pkgName) => (\n  pkgs.filter((pkg) => pkg.includes(pkgName)).sort()\n);\n\nconst PkgLoading = () => (\n  <React.Fragment>\n    <Row>\n      <Col sm={12}>\n        <ProgressBar label=\"Loading...\" variant=\"info\" />\n      </Col>\n    </Row>\n    <hr />\n  </React.Fragment>\n);\n\nconst PkgLoaded = (props) => {\n  const { data, pkg } = props;\n  const lastData = props.data[0][1];\n  const pkgLink = `/pkg/${encodeURIComponent(pkg)}`;\n\n  return (\n    <React.Fragment>\n      <Row>\n        <Col sm={3}><Link to={pkgLink}><RiExternalLinkFill /> {pkg}</Link></Col>\n        <Col sm={3}>{lastData.meta.name}</Col>\n        <Col sm={5}>{lastData.meta.description}</Col>\n        <Col sm={1}>{data.length}</Col>\n      </Row>\n      <hr />\n    </React.Fragment>\n  );\n};\n\nconst Pkg = (props) => {\n  const pkg = props.pkg;\n\n  const dataSource = `${GITHUB_RAW_NIXPKGS_DB}/data/pkgs/${pkg}.json`;\n  const dataJSON = useFetchJSON(dataSource, {});\n  const data =  Object.entries(dataJSON).reverse();\n\n  if (data.length === 0) {\n    return <PkgLoading />;\n  }\n\n  return <PkgLoaded data={data} pkg={pkg} />;\n};\n\nconst SearchLoaded = (props) => {\n  const pkgs = props.pkgs;\n\n  const [page, setPage] = useState(1);\n  const [pkgName, setPkgName] = useState(\"\");\n  const [matchingPackages, setMatchingPackages] = useState(filterPkgs(pkgs, \"\"));\n\n  const startPage = Math.min(\n    1 + (page - 1) * RESULTS_PER_PAGE,\n    matchingPackages.length,\n  );\n  const endPage = Math.min(\n    page * RESULTS_PER_PAGE,\n    matchingPackages.length,\n  );\n\n  const matchingPackagesOnPage = matchingPackages.slice(startPage - 1, endPage);\n\n  const onPkgNameChange = (event) => {\n    setPkgName(event.target.value);\n  };\n  const onSearchButtonClick = () => {\n    setPage(1);\n    setMatchingPackages(filterPkgs(pkgs, pkgName));\n  };\n  const onPreviousButtonClick = () => {\n    setPage(page - 1);\n  };\n  const onNextButtonClick = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <React.Fragment>\n      {/* Search box and pagination */}\n      <Row>\n        <Col sm={6}>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"pkgName\">Package name</InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              aria-label=\"pkgName\"\n              aria-describedby=\"pkgName\"\n              onChange={onPkgNameChange}\n            />\n            <Button onClick={onSearchButtonClick} variant=\"outline-primary\" >\n              Search\n            </Button>\n          </InputGroup>\n        </Col>\n        <Col sm={6}>\n          <Pagination>\n            <Pagination.Prev\n              disabled={page === 1}\n              onClick={onPreviousButtonClick}\n            />\n            <Pagination.Item disabled={true}>\n              Showing packages {startPage}-{endPage} of {matchingPackages.length}\n            </Pagination.Item>\n            <Pagination.Next\n              disabled={page * RESULTS_PER_PAGE > matchingPackages.length}\n              onClick={onNextButtonClick}\n            />\n          </Pagination>\n        </Col>\n      </Row>\n\n      {/* Results table */}\n      <Row>\n        <Col sm={12}>\n          <hr />\n          <Row>\n            <Col sm={3}><b>Attribute</b></Col>\n            <Col sm={3}><b>Name</b></Col>\n            <Col sm={5}><b>Description</b></Col>\n            <Col sm={1}><b>Versions</b></Col>\n          </Row>\n          <hr />\n          {matchingPackagesOnPage.map((pkg) => <Pkg pkg={pkg} />)}\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n}\n\nexport const Search = (props) => {\n  if (props.pkgs.length === 0) {\n    return <ProgressBar label=\"Loading...\" variant=\"info\" />;\n  }\n\n  return <SearchLoaded pkgs={props.pkgs} revs={props.revs} />;\n}\n","import React from 'react';\nimport {\n  Alert,\n  Col,\n  Container,\n  Nav,\n  Navbar,\n  Row,\n} from 'react-bootstrap';\nimport {\n  HashRouter,\n  Link,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport {\n  RiBrushLine,\n  RiCodeSSlashLine,\n  RiHeart3Line,\n  RiInformationLine,\n  RiSearchLine,\n} from 'react-icons/ri';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { GITHUB_RAW_NIXPKGS_DB } from '../constants';\nimport { markdownTab } from '../components/Markdown';\nimport { useFetchJSON } from '../hooks/fetch';\nimport contentAbout from './About.md';\nimport contentContributing from './Contributing.md';\nimport contentSource from './Source.md';\nimport contentSponsor from './Sponsor.md';\nimport { Pkg } from './Pkg';\nimport { Search } from './Search';\n\nconst Tab = (props) => (\n  <Nav.Item>\n    <Nav.Link href={props.href}>\n      {props.children}\n    </Nav.Link>\n  </Nav.Item>\n);\n\nexport const Root = () => {\n  const pkgs = useFetchJSON(`${GITHUB_RAW_NIXPKGS_DB}/data/pkgs.json`, []);\n  const revs = useFetchJSON(`${GITHUB_RAW_NIXPKGS_DB}/data/revs.json`, []);\n\n  return (\n    <Container fluid={true}>\n      {/* Header */}\n      <Navbar>\n        <Navbar.Brand>\n          <h1>Nixpkgs Database!</h1>\n          <h5>A database with packages from all versions, all commits and all channels.</h5>\n        </Navbar.Brand>\n      </Navbar>\n\n      {/* Content */}\n      <HashRouter>\n        {/* Navigation tabs */}\n        <Row>\n          <Col sm={12}>\n            <Nav variant=\"tabs\">\n              <Tab>\n                <Link to=\"/about\"><RiInformationLine /> About</Link>\n              </Tab>\n              <Tab>\n                <Link to=\"/contributing\"><RiBrushLine /> Contributing</Link>\n              </Tab>\n              <Tab>\n                <Link to=\"/search\"><RiSearchLine /> Search</Link>\n              </Tab>\n              <Tab>\n                <Link to=\"/source\"><RiCodeSSlashLine /> Source</Link>\n              </Tab>\n              <Tab>\n                <Link to=\"/sponsor\"><RiHeart3Line /> Sponsor</Link>\n              </Tab>\n            </Nav>\n          </Col>\n        </Row>\n        <br />\n\n        {/* Dynamic page body */}\n        <Switch>\n          <Route exact={true} path=\"/about\">\n            {markdownTab(contentAbout)}\n          </Route>\n          <Route exact={true} path=\"/contributing\">\n            {markdownTab(contentContributing)}\n          </Route>\n          <Route exact={true} path=\"/pkg/:pkg\">\n            <Pkg />\n          </Route>\n          <Route exact={true} path=\"/pkg/:pkg/:version\">\n            <Pkg />\n          </Route>\n          <Route exact={true} path=\"/search\">\n            <Search pkgs={pkgs} revs={revs} />\n          </Route>\n          <Route exact={true} path=\"/source\">\n            {markdownTab(contentSource)}\n          </Route>\n          <Route exact={true} path=\"/sponsor\">\n            {markdownTab(contentSponsor)}\n          </Route>\n          <Redirect to=\"/search\" />\n        </Switch>\n      </HashRouter>\n\n      {/* Footer */}\n      <hr />\n      <Row>\n        <Col sm={12}>\n          <Alert variant=\"light\">\n            A total of {pkgs.length} packages and {revs.length} commits put in your hands <br />\n            Created and maintained by Kevin Amado\n          </Alert>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Root } from './views/Root';\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root'),\n);\n","module.exports = \"One of the advantages of **Nix** is the ability to install / use packages in\\n**isolated environments** from the host system:\\n\\n```bash\\n# Version installed in my host system\\n$ python3 --version\\n\\n  Python 3.8.5\\n\\n# Launch a Nix Shell with a different version of the package\\n$ nix-shell -p python39\\n\\n  # Version installed in the Nix shell\\n  nix-shell $ python3 --version\\n\\n    Python 3.9.0\\n```\\n\\nSometime ago while migrating an old **Kubernetes** cluster\\nI found in the need of having two different versions of **Helm**\\nin order to deal with **legacy** and **recent** deployments.\\n\\nThe solution is trivial: Use **Nix** to install the two versions!\\n\\nSo let's search the versions that Nix offers to us:\\n\\n```bash\\n# Query the <nixpkgs> set in the host system\\n$ nix-env -q --available --description | grep helm\\n\\n  helm-3.3.4  A package manager for kubernetes\\n```\\n\\nProblem is that nix-channels usually offer a single version of a package,\\nso ¿What to do?\\n\\nSadly,\\nthere is no native way of searching the Nix history for all versions of a package.\\n\\nGood thing is the community has come up with initiatives:\\n\\n- [Nixpkgs Database](/nixpkgs-db)\\n- [Nix-package-revisions](https://lazamar.github.io/download-specific-package-version-with-nix)\\n\\nThat index the Nixpkgs history in order to provide versions lookups:\\n\\n```bash\\nAttribute        Description                       Versions  License\\nkubernetes-helm  A package manager for kubernetes  30        Apache License 2.0\\n\\n  kubernetes-helm v3.4.0\\n  kubernetes-helm v3.1.1\\n  kubernetes-helm v3.1.0\\n  kubernetes-helm v3.0.3\\n  kubernetes-helm v3.0.1\\n  kubernetes-helm v2.9.1\\n  kubernetes-helm v2.6.1\\n  ...\\n```\\n\\nThey even give you the command to install the package in your system!\\n\\n```bash\\n# Helm is not even installed in my host system\\n$ helm version\\n\\n  Command 'helm' not found\\n\\n# Launch a Nix Shell with version 3.4.0 found in Nixpkgs Database\\n$ nix-shell -p kubernetes-helm -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/0126c86672b7d14843225df16ddfefd7091eabe7.tar.gz\\n\\n  # Version installed in the Nix shell\\n  nix-shell $ helm version\\n\\n    version.BuildInfo{Version:\\\"v3.4.0\\\", GitCommit:\\\"\\\", GitTreeState:\\\"\\\", GoVersion:\\\"go1.15.3\\\"}\\n\\n# Launch a Nix Shell with version 2.6.1 found in Nixpkgs Database\\n$ nix-shell -p kubernetes-helm -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/01a664e7793158b434fefac9217ec48313b2dd45.tar.gz\\n\\n  # Version installed in the Nix shell\\n  nix-shell $ helm version\\n\\n    Client: &version.Version{SemVer:\\\"v2.6.1\\\", GitCommit:\\\"bbc1f71dc03afc5f00c6ac84b9308f8ecb4f39ac\\\", GitTreeState:\\\"clean\\\"}\\n```\\n\\nThis project is entirely **Open Source**!\\n\\nWe welcome [contributions](/nixpkgs-db/#/contributing) :)\\n\";","module.exports = \"This site is run by the effort of the community,\\nyou can be part of it!\\n\\nWe genuinely appreciate people who are trying to improve this database.\\n\\n**Contributing examples**\\n\\nThere are many ways to contribute, not necessarily technical:\\n\\n- Tell other people of the work being done here.\\n- Star or fork the [repository](https://github.com/kamadorueda/nixpkgs-db) so other people can find us easier.\\n- The search engine is naive (currently a `String.contains`).\\n  It would be awesome to use a modern algorithm.\\n- Expanding the database size:\\n\\n  There are currently 280k+ commits in the nixpkgs repository,\\n  we've only processed ~20k.\\n\\n  Expanding it is simple, though it consumes a little bit of machine resources:\\n\\n  - Clone the nixpkgs-db repository.\\n  - Execute: `$ nixpkgs-db/build/sync.sh`\\n  - Commit your `nixpkgs-db/data/` folder and create a PR.\\n\\n  The process is differential, once a commit is processed it's ignored in future\\n  executions.\\n- Help us improve the user interface.\\n- Fire up an issue! we welcome ideas, feature requests and problems.\\n\";","module.exports = \"This service is [Free and Open Source Software](https://en.wikipedia.org/wiki/FOSS)!\\n\\nThe source code is hosted at [Nixpkgs-db](https://github.com/kamadorueda/nixpkgs-db)  on GitHub.\\n\";","module.exports = \"Running the infrastructure for this website is almost free:\\n- It's hosted on GitHub Pages as static content.\\n- The database is served as JSON documents from the very same GitHub repository.\\n\\nSome things are not:\\n- The developer's stack (laptop, internet).\\n- The developer's live costs (rent, food, clothes, bills).\\n- The developer's time!\\n\\nSo one of the best ways to ensure work like this is pushed forward and kept free is [sponsoring the author](https://www.patreon.com/kamadorueda) :)\\n\\nYou'll get my eternal gratitude for it,\\nand even if you do not: relax! there are other ways of [contributing](http://localhost:3000/nixpkgs-db/#/contributing).\\n\";"],"sourceRoot":""}