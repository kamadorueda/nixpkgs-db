{"version":3,"sources":["constants.jsx","components/A.jsx","components/Code.jsx","components/Markdown.jsx","hooks/fetch.jsx","utils/badges.jsx","views/Badge.jsx","components/ErrorBoundary.jsx","components/ProgressBar.jsx","views/Pkg.jsx","utils/strings.jsx","views/Search.jsx","views/Root.jsx","index.js","views/About.md","views/Contributing.md","views/Source.md","views/Sponsor.md"],"names":["GITHUB_RAW_NIXPKGS_DB","A","props","params","href","undefined","remote","children","CopyButton","onCopy","alert","text","content","style","color","Code","dedent","lang","CodeBlock","Fragment","Highlight","language","renderers","break","heading","React","createElement","concat","level","code","value","Markdown","plugins","gfm","markdownTab","Row","Col","sm","fetchJSON","url","a","fetch","response","ok","status","json","useFetchJSON","defaultData","useState","data","setData","useEffect","COLORS","STYLES","FORMATS_FUNCTIONS","imageURL","linkURL","FORMATS","Object","keys","Badge","pkg","useParams","format","setFormat","label","setLabel","encodeURIComponent","InputGroup","Prepend","Text","Form","Control","as","onChange","event","target","map","id","defaultValue","labelColor","logo","logoColor","URL","searchParams","set","toString","badge","xs","md","alt","src","ErrorBoundary","state","hasError","error","errorInfo","this","onError","Component","ProgressBar","animated","now","Math","random","variant","striped","pkgVersionLink","version","formatMaintainers","maintainers","formatted","maintainer","push","name","email","sort","formatPlatforms","platforms","includes","platform","Item","title","PkgLoaded","dataJSON","dataSource","to","versionData","versionDataLastRev","revs","versions","nixpkgs","nixEnv","nixShell","nixBuild","pkgName","meta","v","description","long_description","homepage","license","fullName","Pkg","entries","reverse","length","searchString","item","list","itemLower","toLowerCase","elem","distance","b","elemLower","Levenshtein","x","PkgLoading","lastData","pkgLink","lg","SearchLoaded","pkgs","page","setPage","matchingPackages","setMatchingPackages","min","endPage","startPage","changePage","delta","matchingPackagesOnPage","slice","FormControl","ButtonGroup","size","Button","disabled","onClick","key","Search","Tab","Nav","Link","Root","Container","fluid","fontSize","exact","path","contentAbout","contentContributing","contentSource","contentSponsor","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["export const GITHUB_RAW_NIXPKGS_DB = 'https://raw.githubusercontent.com/kamadorueda/nixpkgs-db/latest'\nexport const GITHUB_NIXPKGS = 'https://github.com/NixOS/nixpkgs'\n","import React from 'react';\n\nexport const A = (props) => {\n  let params = {\n    href: props.href,\n  };\n\n  const remote = props.remote === undefined ? true : props.remote;\n\n  if (remote) {\n    params[\"rel\"] = \"noopener\";\n    params[\"target\"] = \"_blank\";\n  }\n\n  return (\n    <a {...params}>\n      {props.children === undefined ? props.href : props.children}\n    </a>\n  );\n};\n","import React from 'react';\nimport dedent from 'dedent';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { RiFileCopyLine } from 'react-icons/ri';\nimport { vs as style } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nexport const CopyButton = (props) => (\n  <CopyToClipboard onCopy={() => alert('Copied!')} text={props.content}>\n    <RiFileCopyLine style={{ color: \"#007bff\" }} />\n  </CopyToClipboard>\n);\n\nexport const Code = (props) => (\n  <Highlight content={dedent(props.content)} lang={props.lang} />\n);\n\nexport const CodeBlock = (props) => (\n  <React.Fragment>\n    <hr />\n    <Code content={props.content} lang={props.lang} />\n    <hr />\n  </React.Fragment>\n);\n\nexport const Highlight = (props) => (\n  <SyntaxHighlighter language={props.lang} style={style}>\n    {props.content}\n  </SyntaxHighlighter>\n);\n","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport { Col, Row } from 'react-bootstrap';\n\nimport { CodeBlock } from './Code';\n\nconst renderers = {\n  text: (props) => <span>{props.children}</span>,\n  break: () => <br />,\n  heading: (props) => React.createElement(\"h\".concat(props.level + 1), {}, props.children),\n  code: (props) => <CodeBlock lang={props.language} content={props.value} />,\n  // paragraph: (props) => <p>{props.children}</p>,\n  // emphasis: (props) => <em>{props.children}</em>,\n  // strong: (props) => <strong>{props.children}</strong>,\n  // thematicBreak: (props) => <hr>{props.children}</hr>,\n  // blockquote: (props) => <blockquote>{props.children}</blockquote>,\n  // link: (props) => <a>{props.children}</a>,\n  // image: (props) => <img>{props.children}</img>,\n  // linkReference: (props) => <a>{props.children}</a>,\n  // imageReference: (props) => <img>{props.children}</img>,\n  // listItem: (props) => <li>{props.children}</li>,\n  // inlineCode: (props) => <code>{props.children}</code>,\n  // list: (props) => <ul> or <ol>{props.children}</ul> or <ol>,\n  // {/* heading: (props) => <h1> through <h6>{props.children}</h1> through <h6>, */}\n}\n\nexport const Markdown = (props) => (\n  <ReactMarkdown\n    children={props.content}\n    plugins={[gfm]}\n    renderers={renderers}\n  />\n)\n\nexport const markdownTab = (content) => () => {\n  return (\n    <Row>\n      <Col sm={12}>\n        <Markdown content={content} />\n      </Col>\n    </Row>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nconst fetchJSON = async (url) => {\n  let response = await fetch(url);\n\n  while (!response.ok || response.status !== 200) {\n    response = await fetch(url);\n  }\n\n  return await response.json();\n};\n\nexport const useFetchJSON = (url, defaultData) => {\n  const [data, setData] = useState(defaultData);\n\n  useEffect(() => {\n    (async () => setData(await fetchJSON(url)))();\n  }, [url]);\n\n  return data;\n}\n","export const COLORS = [\n  \"blue\",\n  \"blueviolet\",\n  \"brightgreen\",\n  \"green\",\n  \"lightgrey\",\n  \"orange\",\n  \"red\",\n  \"yellow\",\n  \"yellowgreen\",\n];\n\nexport const STYLES = [\n  \"flat\",\n  \"flat-square\",\n  \"for-the-badge\",\n  \"plastic\",\n];\n\nexport const badge = ({\n  color = \"green\",\n  label,\n  labelColor = \"grey\",\n  logo = \"NixOS\",\n  logoColor = \"white\",\n  pkg,\n  style = \"flat\",\n}) => {\n  const url = new URL(\"https://img.shields.io/endpoint\");\n\n// https://img.shields.io/endpoint?color=success&logo=NixOS&logoColor=%23FFF&style=for-the-badge&url=https%3A%2F%2Fraw.githubusercontent.com%2Fkamadorueda%2Fnixpkgs-db%2Flatest%2Fdata%2Fbadges%2Ffoo.json\n\n  url.searchParams.set(\"color\", color);\n  url.searchParams.set(\"label\", label);\n  url.searchParams.set(\"labelColor\", labelColor);\n  url.searchParams.set(\"logo\", logo);\n  url.searchParams.set(\"logoColor\", logoColor);\n  url.searchParams.set(\"style\", style);\n  url.searchParams.set(\"url\", `https://raw.githubusercontent.com/kamadorueda/nixpkgs-db/latest/data/badges/${pkg}.json`);\n\n  return url.toString();\n}\n","import React, { useState } from 'react';\nimport {\n  Col,\n  Form,\n  InputGroup,\n  Row,\n} from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { A } from '../components/A';\nimport { CopyButton } from '../components/Code';\nimport {\n  badge,\n  COLORS,\n  STYLES,\n} from '../utils/badges';\n\nconst FORMATS_FUNCTIONS = {\n  \"AsciiDoc\": (imageURL, linkURL) => `\n    image:${imageURL}[link=\"${linkURL}\"]\n  `,\n  \"HTML\": (imageURL, linkURL) => `\n    <a href=\"${linkURL}\">\n      <img src=\"${imageURL}\">\n    </a>\n  `,\n  \"Markdown\": (imageURL, linkURL) => `\n    [![](${imageURL})](${linkURL})\n  `,\n  \"ReStructuredText\": (imageURL, linkURL) => `\n    .. image:: ${imageURL}\n      :target: ${linkURL}\n  `,\n};\nconst FORMATS = Object.keys(FORMATS_FUNCTIONS);\n\nexport const Badge = () => {\n  const { pkg } = useParams();\n\n  const [format, setFormat] = useState(FORMATS[2]);\n  const [label, setLabel] = useState(pkg);\n\n  const onChangeFormat = (event) => {\n    setFormat(event.target.value);\n  };\n  const onChangeLabel = (event) => {\n    setLabel(event.target.value);\n  };\n\n  const linkURL = `https://kamadorueda.github.io/nixpkgs-db/#/pkg/${encodeURIComponent(pkg)}`;\n\n  return (\n    <React.Fragment>\n      <InputGroup>\n        <InputGroup.Prepend>\n          <InputGroup.Text>Copy Format</InputGroup.Text>\n        </InputGroup.Prepend>\n        <Form.Control\n          as=\"select\"\n          value={format}\n          onChange={onChangeFormat}\n        >\n          {FORMATS.map((format) => <option id={format}>{format}</option>)}\n        </Form.Control>\n      </InputGroup>\n      <br />\n      <InputGroup>\n        <InputGroup.Prepend>\n          <InputGroup.Text>Custom label</InputGroup.Text>\n        </InputGroup.Prepend>\n        <Form.Control\n          defaultValue={pkg}\n          onChange={onChangeLabel}\n          value={label}\n        />\n      </InputGroup>\n      <br />\n      {STYLES.map((style) => (\n        <React.Fragment>\n          <Row>\n            {COLORS.map((color) => {\n              const imageURL = badge({\n                color,\n                label,\n                pkg,\n                style,\n              });\n              const content = FORMATS_FUNCTIONS[format](imageURL, linkURL);\n\n              return (\n                <Col xs={12} sm={6} md={4}>\n                  <Row>\n                    <Col xs={12}>\n                      <CopyButton content={content} /> <A href={linkURL}>\n                        <img alt=\"badge\" src={imageURL} />\n                      </A>\n                    </Col>\n                  </Row>\n                </Col>\n              );\n            })}\n          </Row>\n          <br />\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  );\n};\n","import React from 'react';\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return this.props.onError;\n    }\n\n    return this.props.children;\n  }\n}\n","import React from 'react';\nimport { ProgressBar as BootstrapProgressBar } from 'react-bootstrap';\n\nexport const ProgressBar = (props) => (\n  <BootstrapProgressBar\n    animated={true}\n    label={props.label}\n    now={100 * Math.random()}\n    variant={props.variant}\n    striped={true}\n  />\n)\n","import React from 'react';\nimport {\n  Col,\n  Row,\n} from 'react-bootstrap';\nimport {\n  RiCpuLine,\n  RiExternalLinkFill,\n  RiUserHeartLine,\n} from 'react-icons/ri';\nimport { useParams, Redirect } from 'react-router-dom';\nimport { A } from '../components/A';\nimport { Code } from '../components/Code';\nimport { ErrorBoundary } from '../components/ErrorBoundary';\nimport { ProgressBar } from '../components/ProgressBar';\nimport { GITHUB_NIXPKGS, GITHUB_RAW_NIXPKGS_DB } from '../constants';\nimport { useFetchJSON } from '../hooks/fetch';\n\nconst pkgVersionLink = (pkg, version) => (\n  `/pkg/${encodeURIComponent(pkg)}/${encodeURIComponent(version)}`\n);\n\nconst formatMaintainers = (maintainers) => {\n  let formatted = [];\n\n  if (maintainers === undefined) {\n    return formatted;\n  }\n\n  for (let maintainer of maintainers) {\n    switch (typeof maintainer) {\n      case \"string\":\n        formatted.push(maintainer);\n        break;\n      case \"object\":\n        formatted.push(`${maintainer.name} <${maintainer.email}>`);\n        break;\n      default:\n    }\n  }\n\n  return formatted.sort();\n}\n\nconst formatPlatforms = (platforms) => {\n  let formatted = [];\n\n  if ([null, undefined].includes(platforms)) {\n    return formatted;\n  }\n\n  for (let platform of platforms) {\n    switch (typeof platform) {\n      case \"string\":\n        formatted.push(platform);\n        break;\n      default:\n    }\n  }\n\n  return formatted.sort();\n}\n\nconst Item = (props) => (\n  <React.Fragment>\n    <Row>\n      <Col sm={2}><b>{props.title}</b></Col>\n      <Col sm={10}>\n      <ErrorBoundary onError=\"Not specified\">\n        {[null, undefined, \"\"].includes(props.content)\n          ? \"-\"\n          : props.content}\n      </ErrorBoundary>\n      </Col>\n    </Row>\n    <hr />\n  </React.Fragment>\n);\n\nconst PkgLoaded = (props) => {\n  const { data, dataJSON, dataSource } = props;\n  const { pkg, version } = useParams();\n\n  if (version === undefined) {\n    return <Redirect to={pkgVersionLink(pkg, data[0][0])} />;\n  }\n\n  const versionData = dataJSON[version];\n  const versionDataLastRev = versionData?.revs[1];\n  const versions = data.map(([version, _]) => version);\n\n  const nixpkgs = `${GITHUB_NIXPKGS}/archive/${versionDataLastRev}.tar.gz`;\n  const nixEnv = `\n    # Version: ${version}\n    nix-env -i ${pkg} -f ${nixpkgs}\n  `;\n  const nixShell = `\n    # Version: ${version}\n    nix-env -i ${pkg} -I nixpkgs=${nixpkgs}\n  `;\n  const nixBuild = `\n    let\n      pkgs = import <nixpkgs> { };\n\n      # Version: ${version}\n      ${pkg} = (import (pkgs.fetchzip {\n        url = \"https://github.com/nixos/nixpkgs/archive/${versionDataLastRev}.zip\";\n        # Please update this hash with the one nix says on the first build attempt\n        sha256 = \"0000000000000000000000000000000000000000000000000000000000000000\";\n      }) { }).${pkg};\n    in\n      ...\n  `;\n\n  const pkgName = versionData?.meta?.name === undefined ? \"\" : `(${versionData?.meta?.name})`;\n\n  return (\n    <Row>\n      <Col sm={12}>\n        <Item\n          title=\"Package\"\n          content={`${pkg} ${pkgName}`}\n        />\n        <Item\n          title=\"Badges\"\n          content={\n            <A href={`/nixpkgs-db/#/badge/${encodeURIComponent(pkg)}`}>\n              <RiExternalLinkFill /> Explore\n            </A>\n          }\n        />\n        <Item\n          title=\"This page version\"\n          content={version}\n        />\n        <Item\n          title=\"All versions\"\n          content={\n            <Row>\n              {versions.map((v) => (\n                <Col xs={12} sm={6} md={3}>\n                  <A href={`/nixpkgs-db/#${pkgVersionLink(pkg, v)}`}>\n                    <RiExternalLinkFill /> {v}\n                  </A>\n                </Col>\n              ))}\n            </Row>\n          }\n        />\n        <Item\n          title=\"Description\"\n          content={versionData?.meta?.description}\n        />\n        <Item\n          title=\"Long description\"\n          content={versionData?.meta?.long_description}\n        />\n        <Item\n          title=\"Homepage\"\n          content={<A href={versionData?.meta?.homepage} />}\n        />\n        <Item\n          title=\"License\"\n          content={versionData?.meta?.license?.fullName}\n        />\n        <Item\n          title=\"Maintainers\"\n          content={\n            <Row>\n              {formatMaintainers(versionData?.meta?.maintainers).map((maintainer) => (\n                <Col sm={6}> <RiUserHeartLine /> {maintainer}</Col>\n              ))}\n            </Row>\n          }\n        />\n        <Item\n          title=\"Interactive shell\"\n          content={<Code content={nixShell} lang=\"bash\" />}\n        />\n        <Item\n          title=\"Install in your system\"\n          content={<Code content={nixEnv} lang=\"bash\" />}\n        />\n        <Item\n          title=\"Use in an expression\"\n          content={<Code content={nixBuild} lang=\"nix\" />}\n        />\n        <Item\n          title=\"Commits range\"\n          content={\n            `${versionData?.revs[0]} -> ${versionData?.revs[1]}\n          `}\n        />\n        <Item\n          title=\"Raw data\"\n          content={<A href={dataSource} />}\n        />\n        <Item\n          title=\"Available platforms\"\n          content={\n            <Row>\n              {formatPlatforms(versionData?.meta?.platforms).map((platform) => (\n                <Col sm={2}> <RiCpuLine /> {platform}</Col>\n              ))}\n            </Row>\n          }\n        />\n      </Col>\n    </Row>\n  );\n};\n\nexport const Pkg = () => {\n  const { pkg } = useParams();\n\n  const dataSource = `${GITHUB_RAW_NIXPKGS_DB}/data/pkgs/${pkg}.json`;\n  const dataJSON = useFetchJSON(dataSource, {});\n  const data =  Object.entries(dataJSON).reverse();\n\n  if (data.length === 0) {\n    return <ProgressBar label=\"Loading...\" variant=\"info\" />;;\n  }\n\n  return <PkgLoaded data={data} dataJSON={dataJSON} dataSource={dataSource} />;\n};\n","import Levenshtein from 'levenshtein';\n\nexport const levenshtein = (a, b) => (\n  new Levenshtein(a, b).distance\n);\n\nexport const searchString = (item, list) => {\n  // Use a mix of Levenshtein distance + grep to offer human-expectable results\n  const itemLower = item.toLowerCase();\n\n  const distances = list.map((elem) => {\n    const elemLower = elem.toLowerCase();\n\n    let distance;\n\n    if (elemLower === itemLower) {\n      distance = 0;\n    } else if (elemLower.includes(itemLower)) {\n      distance = 1;\n    } else {\n      distance = levenshtein(itemLower, elemLower);\n    }\n\n    return [distance, elem];\n  });\n\n  return distances\n    // Sort by Levenshtein distance\n    .sort((a, b) => a[0] - b[0])\n    // Extract the original item\n    .map((x) => x[1]);\n}\n","import React, { useState } from 'react';\nimport {\n  Badge,\n  Button,\n  ButtonGroup,\n  Col,\n  FormControl,\n  InputGroup,\n  Row,\n} from 'react-bootstrap';\nimport {\n  RiExternalLinkFill,\n} from 'react-icons/ri';\nimport { Link } from 'react-router-dom';\nimport { ProgressBar } from '../components/ProgressBar';\nimport { GITHUB_RAW_NIXPKGS_DB } from '../constants';\nimport { useFetchJSON } from '../hooks/fetch';\nimport { searchString } from '../utils/strings';\n\nconst DEFAULT_PKG_NAME = \"nix\";\nconst RESULTS_PER_PAGE = 12;\n\nconst PkgLoading = () => (\n  <React.Fragment>\n    <Row>\n      <Col sm={12}>\n        <ProgressBar label=\"Loading...\" variant=\"info\" />\n      </Col>\n    </Row>\n    <hr />\n  </React.Fragment>\n);\n\nconst PkgLoaded = (props) => {\n  const { data, pkg } = props;\n  const lastData = props.data[0][1];\n  const pkgLink = `/pkg/${encodeURIComponent(pkg)}`;\n\n  return (\n    <React.Fragment>\n      <Col xs={12} sm={6} md={4} lg={3}>\n        <Row>\n          <Col sm={12}>\n            <Link to={pkgLink}>\n              <RiExternalLinkFill /> {pkg}\n              {pkg === lastData.meta.name ? \"\" : ` (${lastData.meta.name})`}\n            </Link>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            {lastData.meta.description}\n          </Col>\n        </Row>\n        <Row>\n          <Col sm={12}>\n            <Badge variant=\"info\">\n              {data.length} version{data.length >= 2 ? \"s\" : \"\"} available\n            </Badge>\n          </Col>\n        </Row>\n        <br />\n      </Col>\n    </React.Fragment>\n  );\n};\n\nconst Pkg = (props) => {\n  const pkg = props.pkg;\n\n  const dataSource = `${GITHUB_RAW_NIXPKGS_DB}/data/pkgs/${pkg}.json`;\n  const dataJSON = useFetchJSON(dataSource, {});\n  const data =  Object.entries(dataJSON).reverse();\n\n  if (data.length === 0) {\n    return <PkgLoading />;\n  }\n\n  return <PkgLoaded data={data} pkg={pkg} />;\n};\n\nconst SearchLoaded = (props) => {\n  const { pkgs } = props;\n\n  const [page, setPage] = useState(1);\n  const [matchingPackages, setMatchingPackages] = useState(searchString(DEFAULT_PKG_NAME, pkgs));\n  const [endPage, startPage] = [\n    Math.min((page - 0) * RESULTS_PER_PAGE + 0, matchingPackages.length),\n    Math.min((page - 1) * RESULTS_PER_PAGE + 1, matchingPackages.length),\n  ];\n\n  const changePage = (delta) => () => {\n    setPage(page + delta);\n  };\n  const onPkgNameChange = (event) => {\n    setPage(1);\n    setMatchingPackages(searchString(event.target.value, pkgs));\n  };\n\n  const matchingPackagesOnPage = matchingPackages.slice(startPage - 1, endPage);\n\n  return (\n    <React.Fragment>\n      {/* Search box */}\n      <Row>\n        <Col sm={12}>\n          <InputGroup>\n            <InputGroup.Prepend>\n              <InputGroup.Text>Package name</InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl\n              defaultValue={DEFAULT_PKG_NAME}\n              onChange={onPkgNameChange}\n            />\n          </InputGroup>\n        </Col>\n      </Row>\n\n      {/* Pagination */}\n      <br />\n      <Row>\n        <Col xs={12} sm={6} md={4}>\n          <ButtonGroup size=\"md\">\n            <Button\n              disabled={page === 1}\n              onClick={changePage(-1)}\n              variant=\"outline-primary\"\n            >\n              &lt; Previous\n            </Button>\n            <Button\n              disabled={true}\n              variant=\"outline-primary\"\n            >\n              Page {page}\n            </Button>\n            <Button\n              disabled={page * RESULTS_PER_PAGE > matchingPackages.length}\n              onClick={changePage(+1)}\n              variant=\"outline-primary\"\n            >\n              Next &gt;\n            </Button>\n          </ButtonGroup>\n        </Col>\n      </Row>\n\n      {/* Results table */}\n      <hr />\n      <Row>\n        {matchingPackagesOnPage.map((pkg) => <Pkg key={pkg} pkg={pkg} />)}\n      </Row>\n    </React.Fragment>\n  );\n}\n\nexport const Search = (props) => {\n  if (props.pkgs.length === 0) {\n    return <ProgressBar label=\"Loading...\" variant=\"info\" />;\n  }\n\n  return <SearchLoaded pkgs={props.pkgs} revs={props.revs} />;\n}\n","import React from 'react';\nimport {\n  Col,\n  Container,\n  Nav,\n  Row,\n} from 'react-bootstrap';\nimport {\n  HashRouter,\n  Link,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport {\n  RiBrushLine,\n  RiCodeSSlashLine,\n  RiHeart3Line,\n  RiInformationLine,\n  RiSearchLine,\n} from 'react-icons/ri';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport contentAbout from './About.md';\nimport contentContributing from './Contributing.md';\nimport contentSource from './Source.md';\nimport contentSponsor from './Sponsor.md';\nimport { GITHUB_RAW_NIXPKGS_DB } from '../constants';\nimport { A } from '../components/A';\nimport { markdownTab } from '../components/Markdown';\nimport { useFetchJSON } from '../hooks/fetch';\nimport { Badge } from './Badge';\nimport { Pkg } from './Pkg';\nimport { Search } from './Search';\n\nconst Tab = (props) => (\n  <Nav.Item>\n    <Nav.Link href={props.href}>\n      {props.children}\n    </Nav.Link>\n  </Nav.Item>\n);\n\nexport const Root = () => {\n  const pkgs = useFetchJSON(`${GITHUB_RAW_NIXPKGS_DB}/data/pkgs.json`, []);\n  const revs = useFetchJSON(`${GITHUB_RAW_NIXPKGS_DB}/data/revs.json`, []);\n\n  return (\n    <Container fluid={true}>\n      {/* Header */}\n      <Row>\n        <Col sm={12}>\n          <A href=\"/nixpkgs-db\" remote={false}>\n            <h1>Nixpkgs Database!</h1>\n            <h2 style={{ fontSize: \"1rem\" }}>\n              A database with packages at all versions, from all channels.\n            </h2>\n          </A>\n        </Col>\n      </Row>\n\n      {/* Content */}\n      <HashRouter>\n        {/* Navigation tabs */}\n        <Row>\n          <Col sm={12}>\n            <Nav variant=\"tabs\">\n              <Tab>\n                <Link to=\"/about\"><RiInformationLine /> About</Link>\n              </Tab>\n              <Tab>\n                <Link to=\"/contributing\"><RiBrushLine /> Contributing</Link>\n              </Tab>\n              <Tab>\n                <Link to=\"/search\"><RiSearchLine /> Search</Link>\n              </Tab>\n              <Tab>\n                <Link to=\"/source\"><RiCodeSSlashLine /> Source</Link>\n              </Tab>\n              <Tab>\n                <Link to=\"/sponsor\"><RiHeart3Line /> Sponsor</Link>\n              </Tab>\n            </Nav>\n          </Col>\n        </Row>\n        <br />\n\n        {/* Dynamic page body */}\n        <Switch>\n          <Route exact={true} path=\"/about\">\n            {markdownTab(contentAbout)}\n          </Route>\n          <Route exact={true} path=\"/badge/:pkg\">\n            <Badge />\n          </Route>\n          <Route exact={true} path=\"/contributing\">\n            {markdownTab(contentContributing)}\n          </Route>\n          <Route exact={true} path=\"/pkg/:pkg\">\n            <Pkg />\n          </Route>\n          <Route exact={true} path=\"/pkg/:pkg/:version\">\n            <Pkg />\n          </Route>\n          <Route exact={true} path=\"/search\">\n            <Search pkgs={pkgs} revs={revs} />\n          </Route>\n          <Route exact={true} path=\"/source\">\n            {markdownTab(contentSource)}\n          </Route>\n          <Route exact={true} path=\"/sponsor\">\n            {markdownTab(contentSponsor)}\n          </Route>\n          <Redirect to=\"/search\" />\n        </Switch>\n      </HashRouter>\n\n      {/* Footer */}\n      <hr />\n      <Row>\n        <Col sm={12}>\n          <div style={{ color: \"grey\" }}>\n            A total of {pkgs.length} packages and {revs.length} commits put in your hands! <br />\n            Please help us improve by <A href=\"https://github.com/kamadorueda/nixpkgs-db/issues\">reporting issues</A> <RiHeart3Line />\n          </div>\n        </Col>\n      </Row>\n      <hr />\n    </Container>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Root } from './views/Root';\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root'),\n);\n","module.exports = \"One of the advantages of **Nix** is the ability to install / use packages in\\n**isolated environments** from the host system:\\n\\n```bash\\n# Version installed in my host system\\n$ python3 --version\\n\\n  Python 3.8.5\\n\\n# Launch a Nix Shell with a different version of the package\\n$ nix-shell -p python39\\n\\n  # Version installed in the Nix shell\\n  nix-shell $ python3 --version\\n\\n    Python 3.9.0\\n```\\n\\nSometime ago while migrating an old **Kubernetes** cluster\\nI found in the need of having two different versions of **Helm**\\nin order to deal with **legacy** and **recent** deployments.\\n\\nThe solution is trivial: Use **Nix** to install the two versions!\\n\\nSo let's search the versions that Nix offers to us:\\n\\n```bash\\n# Query the <nixpkgs> set in the host system\\n$ nix-env -q --available --description | grep helm\\n\\n  helm-3.3.4  A package manager for kubernetes\\n```\\n\\nProblem is that nix-channels usually offer a single version of a package,\\nso ¿What to do?\\n\\nSadly,\\nthere is no native way of searching the Nix history for all versions of a package.\\n\\nGood thing is the community has come up with initiatives:\\n\\n- [Nixpkgs Database](/nixpkgs-db)\\n- [Nix-package-revisions](https://lazamar.github.io/download-specific-package-version-with-nix)\\n\\nThat index the Nixpkgs history in order to provide versions lookups:\\n\\n```bash\\nAttribute        Description                       Versions  License\\nkubernetes-helm  A package manager for kubernetes  30        Apache License 2.0\\n\\n  kubernetes-helm v3.4.0\\n  kubernetes-helm v3.1.1\\n  kubernetes-helm v3.1.0\\n  kubernetes-helm v3.0.3\\n  kubernetes-helm v3.0.1\\n  kubernetes-helm v2.9.1\\n  kubernetes-helm v2.6.1\\n  ...\\n```\\n\\nThey even give you the command to install the package in your system!\\n\\n```bash\\n# Helm is not even installed in my host system\\n$ helm version\\n\\n  Command 'helm' not found\\n\\n# Launch a Nix Shell with version 3.4.0 found in Nixpkgs Database\\n$ nix-shell -p kubernetes-helm -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/0126c86672b7d14843225df16ddfefd7091eabe7.tar.gz\\n\\n  # Version installed in the Nix shell\\n  nix-shell $ helm version\\n\\n    version.BuildInfo{Version:\\\"v3.4.0\\\", GitCommit:\\\"\\\", GitTreeState:\\\"\\\", GoVersion:\\\"go1.15.3\\\"}\\n\\n# Launch a Nix Shell with version 2.6.1 found in Nixpkgs Database\\n$ nix-shell -p kubernetes-helm -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/01a664e7793158b434fefac9217ec48313b2dd45.tar.gz\\n\\n  # Version installed in the Nix shell\\n  nix-shell $ helm version\\n\\n    Client: &version.Version{SemVer:\\\"v2.6.1\\\", GitCommit:\\\"bbc1f71dc03afc5f00c6ac84b9308f8ecb4f39ac\\\", GitTreeState:\\\"clean\\\"}\\n```\\n\\nThis project is entirely **Free and Open Source Software**!\\n\\nYou can read more about the technical details [here](https://www.patreon.com/posts/creating-zero-43586691).\\n\\nAnd by the way, we welcome [contributions](/nixpkgs-db/#/contributing) :)\\n\";","module.exports = \"This site is run by the effort of the community,\\nyou can be part of it!\\n\\nWe genuinely appreciate people who are trying to improve this database.\\n\\n**Contributing examples**\\n\\nThere are many ways to contribute, not necessarily technical:\\n\\n- Tell other people of the work being done here.\\n- Star or fork the [repository](https://github.com/kamadorueda/nixpkgs-db),\\n  this help us with funding and popularity.\\n- ~~The search engine is naive (currently a `String.contains`).\\n  It would be awesome to use a modern algorithm.~~.\\n\\n  Now we use a mix of Levenshtein distance with grep behavior!\\n- Expanding the database size:\\n\\n  There are currently 280k+ commits in the nixpkgs repository,\\n  we've only processed ~100k.\\n\\n  Expanding it is simple, though it consumes a little bit of machine resources:\\n\\n  - Clone the nixpkgs-db repository.\\n  - Execute: `nixpkgs-db $ ./build/sync.sh`\\n  - Commit your data folder and create a PR: `nixpkgs-db $ git add data/`\\n\\n  The process is differential, once a commit is processed it's ignored in future\\n  executions.\\n- Help us improve the user interface.\\n- Help us write the [CLI](https://github.com/kamadorueda/nixpkgs-db/tree/latest/cli).\\n- Fire up an issue! we welcome ideas, feature requests and problems.\\n- [Become a sponsor of the project](/nixpkgs-db/#/sponsor).\\n\";","module.exports = \"This service is [Free and Open Source Software](https://en.wikipedia.org/wiki/FOSS)!\\n\\nThe source code is hosted at [Nixpkgs-db](https://github.com/kamadorueda/nixpkgs-db)  on GitHub.\\n\";","module.exports = \"This service was written with love!\\n\\nOne of the best ways to help me do more things like this is\\n[sponsoring me on Patreon](https://www.patreon.com/kamadorueda).\\n\\nEvery penny you contribute goes to support more\\n[FOSS](https://en.wikipedia.org/wiki/FOSS)\\ncontributions and cool stuff for the community.\\n\\nYou'll get my eternal gratitude for it!\\nand even if you do not, relax! there are other ways of [contributing](/nixpkgs-db/#/contributing).\\n\";"],"sourceRoot":""}