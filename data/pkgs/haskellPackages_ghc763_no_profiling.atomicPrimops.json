{
 "0.1.0.2": {
  "meta": {
   "description": "A safe approach to CAS and other atomic ops in Haskell",
   "homepage": "https://github.com/rrnewton/haskell-lockfree-queue/wiki",
   "license": {
    "fullName": "BSD license (3 clause)",
    "shortName": "BSD-3",
    "url": "http://opensource.org/licenses/BSD-3-Clause"
   },
   "long_description": "",
   "maintainers": [],
   "name": "haskell-atomic-primops-ghc7.6.3",
   "platforms": [
    "x86_64-linux",
    "i686-linux",
    "i686-darwin",
    "x86_64-darwin"
   ],
   "position": ""
  },
  "revs": [
   "00df29c471d12b625f533e0adfafb17ea72432cc",
   "114b961b8c08d167ab9416bc7c252324996f6eba"
  ]
 },
 "0.2.2": {
  "meta": {
   "description": "A safe approach to CAS and other atomic ops in Haskell",
   "homepage": "https://github.com/rrnewton/haskell-lockfree-queue/wiki",
   "license": {
    "fullName": "BSD license (3 clause)",
    "shortName": "BSD-3",
    "url": "http://opensource.org/licenses/BSD-3-Clause"
   },
   "long_description": "",
   "maintainers": [],
   "name": "haskell-atomic-primops-ghc7.6.3",
   "platforms": [
    "x86_64-linux",
    "i686-linux",
    "i686-darwin",
    "x86_64-darwin"
   ],
   "position": ""
  },
  "revs": [
   "0024926701875c6cac245281f07d899f2ee14d92",
   "0685198b536d2e388cbde857d8b98c2807bb97c4"
  ]
 },
 "0.4": {
  "meta": {
   "description": "A safe approach to CAS and other atomic ops in Haskell",
   "homepage": "https://github.com/rrnewton/haskell-lockfree-queue/wiki",
   "license": {
    "fullName": "BSD license (3 clause)",
    "shortName": "BSD-3",
    "url": "http://opensource.org/licenses/BSD-3-Clause"
   },
   "long_description": "",
   "maintainers": [],
   "name": "haskell-atomic-primops-ghc7.6.3",
   "platforms": [
    "x86_64-linux",
    "i686-linux",
    "i686-darwin",
    "x86_64-darwin"
   ],
   "position": ""
  },
  "revs": [
   "00081d1873148a8ec642d5c912d04875c4ee4a66",
   "0c8372d9c7374eafc035718749d81b8e8317f62e"
  ]
 },
 "0.5": {
  "meta": {
   "description": "A safe approach to CAS and other atomic ops in Haskell",
   "homepage": "https://github.com/rrnewton/haskell-lockfree-queue/wiki",
   "license": {
    "fullName": "BSD license (3 clause)",
    "shortName": "BSD-3",
    "url": "http://opensource.org/licenses/BSD-3-Clause"
   },
   "long_description": "",
   "maintainers": [],
   "name": "haskell-atomic-primops-ghc7.6.3",
   "platforms": [
    "x86_64-linux",
    "i686-linux",
    "i686-darwin",
    "x86_64-darwin"
   ],
   "position": "pkgs/development/libraries/haskell/atomic-primops/default.nix:10"
  },
  "revs": [
   "00765dccd832cb78f970d6aa53e94ba76a290805",
   "0a230b852d56c6ff8fe9eb6b0ab16aab47f0e48d"
  ]
 },
 "0.6": {
  "meta": {
   "description": "A safe approach to CAS and other atomic ops in Haskell",
   "homepage": "https://github.com/rrnewton/haskell-lockfree/wiki",
   "license": {
    "fullName": "BSD license (3 clause)",
    "shortName": "BSD-3",
    "url": "http://opensource.org/licenses/BSD-3-Clause"
   },
   "long_description": "",
   "maintainers": [],
   "name": "haskell-atomic-primops-ghc7.6.3",
   "platforms": [
    "x86_64-linux",
    "i686-linux",
    "i686-darwin",
    "x86_64-darwin"
   ],
   "position": "pkgs/development/libraries/haskell/atomic-primops/default.nix:10"
  },
  "revs": [
   "00372ca63890ed25543ffea2c4e625d365beff03",
   "086d6c802b26c11ff7b01b4733de0e3b1b2c1c8d"
  ]
 },
 "0.6.0.5": {
  "meta": {
   "description": "A safe approach to CAS and other atomic ops in Haskell",
   "homepage": "https://github.com/rrnewton/haskell-lockfree/wiki",
   "license": {
    "fullName": "BSD license (3 clause)",
    "shortName": "BSD-3",
    "url": "http://opensource.org/licenses/BSD-3-Clause"
   },
   "long_description": "",
   "maintainers": [],
   "name": "haskell-atomic-primops-ghc7.6.3",
   "platforms": [
    "x86_64-linux",
    "i686-linux",
    "i686-darwin",
    "x86_64-darwin"
   ],
   "position": "pkgs/development/libraries/haskell/atomic-primops/default.nix:10"
  },
  "revs": [
   "0008a4b6c467977469b9b3bdec15fcc580204145",
   "11ba869ae7871ebfc7d7df081f7e5ac8e05fb3e7"
  ]
 }
}