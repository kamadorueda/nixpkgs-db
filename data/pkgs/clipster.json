{
 "1.2.5": {
  "meta": {
   "description": "lightweight python clipboard manager",
   "homepage": "https://github.com/mrichar1/clipster",
   "license": {
    "fullName": "GNU Affero General Public License v3.0",
    "shortName": "agpl3",
    "spdxId": "AGPL-3.0",
    "url": "http://spdx.org/licenses/AGPL-3.0"
   },
   "long_description": "Clipster was designed to try to add a good selection of useful features, while avoiding bad design decisions or becoming excessively large.\nIts feature list includes:\n- Event driven, rather than polling. More efficient, helps with power management.\n- Control over when it write to disk, for similar reasons.\n- Command-line options/config for everything.\n- No global keybindings - that's the job of a Window Manager\n- Sensible handling of unusual clipboard events. Some apps (Chrome, Emacs) trigger a clipboard 'update event' for every character you select, rather than just one event when you stop selecting.\n- Preserves the last item in clipboard after an application closes. (Many apps clear the clipboard on exit).\n- Minimal dependencies, no complicated build/install requirements.\n- utf-8 support\n- Proper handling of embedded newlines and control codes.\n- Smart matching of urls, emails, regexes. (extract_*)\n- Option to synchronise the SELECTION and CLIPBOARD clipboards. (sync_selections)\n- Option to track one or both clipboards. (active_selections)\n- Option to ignore clipboard updates form certain applications. (filter_classes)\n- Ability to delete items in clipboard history.\n",
   "maintainers": [
    "Bart Brouns <bart@magnetophon.nl>"
   ],
   "name": "clipster",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "i686-linux",
    "x86_64-linux"
   ],
   "position": "pkgs/tools/misc/clipster/default.nix:28"
  },
  "revs": [
   "00056e76d0a5c1c05d7ad1064702b3d121cd1b98",
   "003102c41127dabf90349235964b6e4714114ae7"
  ]
 },
 "1.5.0": {
  "meta": {
   "description": "lightweight python clipboard manager",
   "homepage": "https://github.com/mrichar1/clipster",
   "license": {
    "fullName": "GNU Affero General Public License v3.0",
    "shortName": "agpl3",
    "spdxId": "AGPL-3.0",
    "url": "http://spdx.org/licenses/AGPL-3.0.html"
   },
   "long_description": "Clipster was designed to try to add a good selection of useful features, while avoiding bad design decisions or becoming excessively large.\nIts feature list includes:\n- Event driven, rather than polling. More efficient, helps with power management.\n- Control over when it write to disk, for similar reasons.\n- Command-line options/config for everything.\n- No global keybindings - that's the job of a Window Manager\n- Sensible handling of unusual clipboard events. Some apps (Chrome, Emacs) trigger a clipboard 'update event' for every character you select, rather than just one event when you stop selecting.\n- Preserves the last item in clipboard after an application closes. (Many apps clear the clipboard on exit).\n- Minimal dependencies, no complicated build/install requirements.\n- utf-8 support\n- Proper handling of embedded newlines and control codes.\n- Smart matching of urls, emails, regexes. (extract_*)\n- Option to synchronise the SELECTION and CLIPBOARD clipboards. (sync_selections)\n- Option to track one or both clipboards. (active_selections)\n- Option to ignore clipboard updates form certain applications. (filter_classes)\n- Ability to delete items in clipboard history.\n",
   "maintainers": [
    {
     "email": "bart@magnetophon.nl",
     "github": "magnetophon",
     "name": "Bart Brouns"
    }
   ],
   "name": "clipster",
   "platforms": [
    {
     "kernel": {
      "_type": "kernel",
      "execFormat": {
       "_type": "exec-format",
       "name": "elf"
      },
      "families": {},
      "name": "linux"
     }
    }
   ],
   "position": "pkgs/tools/misc/clipster/default.nix:26"
  },
  "revs": [
   "000482ffc470f798fb3aa1673b39a38680cbb567",
   "003af0c6d300ac515658b25a9210d3689ecce554"
  ]
 },
 "2.0.0": {
  "meta": {
   "description": "lightweight python clipboard manager",
   "homepage": "https://github.com/mrichar1/clipster",
   "license": {
    "fullName": "GNU Affero General Public License v3.0",
    "shortName": "agpl3",
    "spdxId": "AGPL-3.0",
    "url": "http://spdx.org/licenses/AGPL-3.0.html"
   },
   "long_description": "Clipster was designed to try to add a good selection of useful features, while avoiding bad design decisions or becoming excessively large.\nIts feature list includes:\n- Event driven, rather than polling. More efficient, helps with power management.\n- Control over when it write to disk, for similar reasons.\n- Command-line options/config for everything.\n- No global keybindings - that's the job of a Window Manager\n- Sensible handling of unusual clipboard events. Some apps (Chrome, Emacs) trigger a clipboard 'update event' for every character you select, rather than just one event when you stop selecting.\n- Preserves the last item in clipboard after an application closes. (Many apps clear the clipboard on exit).\n- Minimal dependencies, no complicated build/install requirements.\n- utf-8 support\n- Proper handling of embedded newlines and control codes.\n- Smart matching of urls, emails, regexes. (extract_*)\n- Option to synchronise the SELECTION and CLIPBOARD clipboards. (sync_selections)\n- Option to track one or both clipboards. (active_selections)\n- Option to ignore clipboard updates form certain applications. (filter_classes)\n- Ability to delete items in clipboard history.\n",
   "maintainers": [
    {
     "email": "bart@magnetophon.nl",
     "github": "magnetophon",
     "name": "Bart Brouns"
    }
   ],
   "name": "clipster",
   "platforms": [
    {
     "kernel": {
      "_type": "kernel",
      "execFormat": {
       "_type": "exec-format",
       "name": "elf"
      },
      "families": {},
      "name": "linux"
     }
    }
   ],
   "position": "pkgs/tools/misc/clipster/default.nix:26"
  },
  "revs": [
   "000b9ce78d66ad9cabe17a4670ffacf9d35a6d05",
   "004e7fb6fd112ec29446312a89f7b1b265164127"
  ]
 },
 "2.0.1": {
  "meta": {
   "description": "lightweight python clipboard manager",
   "homepage": "https://github.com/mrichar1/clipster",
   "license": {
    "fullName": "GNU Affero General Public License v3.0",
    "shortName": "agpl3",
    "spdxId": "AGPL-3.0",
    "url": "http://spdx.org/licenses/AGPL-3.0.html"
   },
   "long_description": "Clipster was designed to try to add a good selection of useful features, while avoiding bad design decisions or becoming excessively large.\nIts feature list includes:\n- Event driven, rather than polling. More efficient, helps with power management.\n- Control over when it write to disk, for similar reasons.\n- Command-line options/config for everything.\n- No global keybindings - that's the job of a Window Manager\n- Sensible handling of unusual clipboard events. Some apps (Chrome, Emacs) trigger a clipboard 'update event' for every character you select, rather than just one event when you stop selecting.\n- Preserves the last item in clipboard after an application closes. (Many apps clear the clipboard on exit).\n- Minimal dependencies, no complicated build/install requirements.\n- utf-8 support\n- Proper handling of embedded newlines and control codes.\n- Smart matching of urls, emails, regexes. (extract_*)\n- Option to synchronise the SELECTION and CLIPBOARD clipboards. (sync_selections)\n- Option to track one or both clipboards. (active_selections)\n- Option to ignore clipboard updates form certain applications. (filter_classes)\n- Ability to delete items in clipboard history.\n",
   "maintainers": [
    {
     "email": "bart@magnetophon.nl",
     "github": "magnetophon",
     "name": "Bart Brouns"
    }
   ],
   "name": "clipster",
   "platforms": [
    {
     "kernel": {
      "_type": "kernel",
      "execFormat": {
       "_type": "exec-format",
       "name": "elf"
      },
      "families": {},
      "name": "linux"
     }
    }
   ],
   "position": "pkgs/tools/misc/clipster/default.nix:26"
  },
  "revs": [
   "00005ce0bdbc3c13804adc9a7fd71a02cc0b8db2",
   "000463186d471107324c67faecb5c85e9f06521a"
  ]
 },
 "2.0.2": {
  "meta": {
   "description": "lightweight python clipboard manager",
   "homepage": "https://github.com/mrichar1/clipster",
   "license": {
    "fullName": "GNU Affero General Public License v3.0 only",
    "shortName": "agpl3Only",
    "spdxId": "AGPL-3.0-only",
    "url": "https://spdx.org/licenses/AGPL-3.0-only.html"
   },
   "long_description": "Clipster was designed to try to add a good selection of useful features, while avoiding bad design decisions or becoming excessively large.\nIts feature list includes:\n- Event driven, rather than polling. More efficient, helps with power management.\n- Control over when it write to disk, for similar reasons.\n- Command-line options/config for everything.\n- No global keybindings - that's the job of a Window Manager\n- Sensible handling of unusual clipboard events. Some apps (Chrome, Emacs) trigger a clipboard 'update event' for every character you select, rather than just one event when you stop selecting.\n- Preserves the last item in clipboard after an application closes. (Many apps clear the clipboard on exit).\n- Minimal dependencies, no complicated build/install requirements.\n- utf-8 support\n- Proper handling of embedded newlines and control codes.\n- Smart matching of urls, emails, regexes. (extract_*)\n- Option to synchronise the SELECTION and CLIPBOARD clipboards. (sync_selections)\n- Option to track one or both clipboards. (active_selections)\n- Option to ignore clipboard updates form certain applications. (filter_classes)\n- Ability to delete items in clipboard history.\n",
   "maintainers": [
    {
     "email": "bart@magnetophon.nl",
     "github": "magnetophon",
     "githubId": 7645711,
     "name": "Bart Brouns"
    }
   ],
   "name": "clipster",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-linux",
    "x86_64-linux",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux"
   ],
   "position": "pkgs/tools/misc/clipster/default.nix:26"
  },
  "revs": [
   "00022fbeda385d7b6ae2eee44f07eecfc6d92015",
   "0056f627a0203501c82a74a59c7553b158cc9642"
  ]
 },
 "2016-09-12": {
  "meta": {
   "description": "lightweight python clipboard manager",
   "homepage": "https://github.com/mrichar1/clipster",
   "license": {
    "fullName": "GNU Affero General Public License v3.0",
    "shortName": "agpl3",
    "spdxId": "AGPL-3.0",
    "url": "http://spdx.org/licenses/AGPL-3.0"
   },
   "long_description": "Clipster was designed to try to add a good selection of useful features, while avoiding bad design decisions or becoming excessively large.\nIts feature list includes:\n- Event driven, rather than polling. More efficient, helps with power management.\n- Control over when it write to disk, for similar reasons.\n- Command-line options/config for everything.\n- No global keybindings - that's the job of a Window Manager\n- Sensible handling of unusual clipboard events. Some apps (Chrome, Emacs) trigger a clipboard 'update event' for every character you select, rather than just one event when you stop selecting.\n- Preserves the last item in clipboard after an application closes. (Many apps clear the clipboard on exit).\n- Minimal dependencies, no complicated build/install requirements.\n- utf-8 support\n- Proper handling of embedded newlines and control codes.\n- Smart matching of urls, emails, regexes. (extract_*)\n- Option to synchronise the SELECTION and CLIPBOARD clipboards. (sync_selections)\n- Option to track one or both clipboards. (active_selections)\n- Option to ignore clipboard updates form certain applications. (filter_classes)\n- Ability to delete items in clipboard history.\n",
   "maintainers": [
    "Bart Brouns <bart@magnetophon.nl>"
   ],
   "name": "clipster-unstable",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux"
   ],
   "position": "pkgs/tools/misc/clipster/default.nix:26"
  },
  "revs": [
   "000fb9be33528f867e2355ddedde0836ba7f7a3a",
   "000fb9be33528f867e2355ddedde0836ba7f7a3a"
  ]
 },
 "2017-01-12": {
  "meta": {
   "description": "lightweight python clipboard manager",
   "homepage": "https://github.com/mrichar1/clipster",
   "license": {
    "fullName": "GNU Affero General Public License v3.0",
    "shortName": "agpl3",
    "spdxId": "AGPL-3.0",
    "url": "http://spdx.org/licenses/AGPL-3.0"
   },
   "long_description": "Clipster was designed to try to add a good selection of useful features, while avoiding bad design decisions or becoming excessively large.\nIts feature list includes:\n- Event driven, rather than polling. More efficient, helps with power management.\n- Control over when it write to disk, for similar reasons.\n- Command-line options/config for everything.\n- No global keybindings - that's the job of a Window Manager\n- Sensible handling of unusual clipboard events. Some apps (Chrome, Emacs) trigger a clipboard 'update event' for every character you select, rather than just one event when you stop selecting.\n- Preserves the last item in clipboard after an application closes. (Many apps clear the clipboard on exit).\n- Minimal dependencies, no complicated build/install requirements.\n- utf-8 support\n- Proper handling of embedded newlines and control codes.\n- Smart matching of urls, emails, regexes. (extract_*)\n- Option to synchronise the SELECTION and CLIPBOARD clipboards. (sync_selections)\n- Option to track one or both clipboards. (active_selections)\n- Option to ignore clipboard updates form certain applications. (filter_classes)\n- Ability to delete items in clipboard history.\n",
   "maintainers": [
    "Bart Brouns <bart@magnetophon.nl>"
   ],
   "name": "clipster-unstable",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "aarch64-linux",
    "mips64el-linux"
   ],
   "position": "pkgs/tools/misc/clipster/default.nix:27"
  },
  "revs": [
   "00105162f413ea8e8a419da0fc5b556e3737e82f",
   "003fa8fed5480d3e22d518aeeba1d62809809279"
  ]
 },
 "2017-02-17": {
  "meta": {
   "description": "lightweight python clipboard manager",
   "homepage": "https://github.com/mrichar1/clipster",
   "license": {
    "fullName": "GNU Affero General Public License v3.0",
    "shortName": "agpl3",
    "spdxId": "AGPL-3.0",
    "url": "http://spdx.org/licenses/AGPL-3.0"
   },
   "long_description": "Clipster was designed to try to add a good selection of useful features, while avoiding bad design decisions or becoming excessively large.\nIts feature list includes:\n- Event driven, rather than polling. More efficient, helps with power management.\n- Control over when it write to disk, for similar reasons.\n- Command-line options/config for everything.\n- No global keybindings - that's the job of a Window Manager\n- Sensible handling of unusual clipboard events. Some apps (Chrome, Emacs) trigger a clipboard 'update event' for every character you select, rather than just one event when you stop selecting.\n- Preserves the last item in clipboard after an application closes. (Many apps clear the clipboard on exit).\n- Minimal dependencies, no complicated build/install requirements.\n- utf-8 support\n- Proper handling of embedded newlines and control codes.\n- Smart matching of urls, emails, regexes. (extract_*)\n- Option to synchronise the SELECTION and CLIPBOARD clipboards. (sync_selections)\n- Option to track one or both clipboards. (active_selections)\n- Option to ignore clipboard updates form certain applications. (filter_classes)\n- Ability to delete items in clipboard history.\n",
   "maintainers": [
    "Bart Brouns <bart@magnetophon.nl>"
   ],
   "name": "clipster-unstable",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "aarch64-linux",
    "mips64el-linux"
   ],
   "position": "pkgs/tools/misc/clipster/default.nix:27"
  },
  "revs": [
   "0018cd5a2ddd858f78cffd0bd8a2412d5b507088",
   "0018cd5a2ddd858f78cffd0bd8a2412d5b507088"
  ]
 },
 "2017-02-27": {
  "meta": {
   "description": "lightweight python clipboard manager",
   "homepage": "https://github.com/mrichar1/clipster",
   "license": {
    "fullName": "GNU Affero General Public License v3.0",
    "shortName": "agpl3",
    "spdxId": "AGPL-3.0",
    "url": "http://spdx.org/licenses/AGPL-3.0"
   },
   "long_description": "Clipster was designed to try to add a good selection of useful features, while avoiding bad design decisions or becoming excessively large.\nIts feature list includes:\n- Event driven, rather than polling. More efficient, helps with power management.\n- Control over when it write to disk, for similar reasons.\n- Command-line options/config for everything.\n- No global keybindings - that's the job of a Window Manager\n- Sensible handling of unusual clipboard events. Some apps (Chrome, Emacs) trigger a clipboard 'update event' for every character you select, rather than just one event when you stop selecting.\n- Preserves the last item in clipboard after an application closes. (Many apps clear the clipboard on exit).\n- Minimal dependencies, no complicated build/install requirements.\n- utf-8 support\n- Proper handling of embedded newlines and control codes.\n- Smart matching of urls, emails, regexes. (extract_*)\n- Option to synchronise the SELECTION and CLIPBOARD clipboards. (sync_selections)\n- Option to track one or both clipboards. (active_selections)\n- Option to ignore clipboard updates form certain applications. (filter_classes)\n- Ability to delete items in clipboard history.\n",
   "maintainers": [
    "Bart Brouns <bart@magnetophon.nl>"
   ],
   "name": "clipster-unstable",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "i686-linux",
    "x86_64-linux"
   ],
   "position": "pkgs/tools/misc/clipster/default.nix:28"
  },
  "revs": [
   "0011f9065a1ad1da4db67bec8d535d91b0a78fba",
   "003710748f1fab5dd407258cee5f9db7b705c67e"
  ]
 }
}