{
 "3.0.2": {
  "meta": {
   "description": "",
   "homepage": "",
   "license": null,
   "long_description": "",
   "maintainers": [],
   "name": "gperf",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "0a05618f11ffd4a59a4b406bf82a868b7c4fae93",
   "109a74d558bebb9bc4d3fc1e3397e92962c8372a"
  ]
 },
 "3.0.3": {
  "meta": {
   "description": "",
   "homepage": "",
   "license": null,
   "long_description": "",
   "maintainers": [],
   "name": "gperf",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "000ba6536350b58079484fc64b467ec227e73e26",
   "3a9bfe866c7220490f27fd1689730b837cdcf395"
  ]
 },
 "3.0.4": {
  "meta": {
   "description": "GNU gperf, a perfect hash function generator",
   "homepage": "http://www.gnu.org/software/gperf/",
   "license": "GPLv3+",
   "long_description": "GNU gperf is a perfect hash function generator.  For a given\nlist of strings, it produces a hash function and hash table, in\nform of C or C++ code, for looking up a value depending on the\ninput string.  The hash function is perfect, which means that\nthe hash table has no collisions, and the hash table lookup\nneeds a single string comparison only.\n\nGNU gperf is highly customizable.  There are options for\ngenerating C or C++ code, for emitting switch statements or\nnested ifs instead of a hash table, and for tuning the algorithm\nemployed by gperf.\n",
   "maintainers": [],
   "name": "gperf",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "000051b196b82d30d1008c8999502c484ea5bd7d",
   "044ceae2806480555a44c91c386546cffb46ba74"
  ]
 },
 "3.1": {
  "meta": {
   "description": "Perfect hash function generator",
   "homepage": "https://www.gnu.org/software/gperf/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+.html"
   },
   "long_description": "GNU gperf is a perfect hash function generator.  For a given\nlist of strings, it produces a hash function and hash table, in\nform of C or C++ code, for looking up a value depending on the\ninput string.  The hash function is perfect, which means that\nthe hash table has no collisions, and the hash table lookup\nneeds a single string comparison only.\n\nGNU gperf is highly customizable.  There are options for\ngenerating C or C++ code, for emitting switch statements or\nnested ifs instead of a hash table, and for tuning the algorithm\nemployed by gperf.\n",
   "maintainers": [],
   "name": "gperf",
   "platforms": [
    {
     "kernel": {
      "families": {
       "bsd": {
        "_type": "exec-format",
        "name": "bsd"
       }
      }
     }
    },
    {
     "kernel": {
      "families": {
       "darwin": {
        "_type": "exec-format",
        "name": "darwin"
       }
      }
     }
    },
    {
     "kernel": {
      "_type": "kernel",
      "execFormat": {
       "_type": "exec-format",
       "name": "elf"
      },
      "families": {},
      "name": "linux"
     }
    },
    {
     "kernel": {
      "_type": "kernel",
      "execFormat": {
       "_type": "exec-format",
       "name": "elf"
      },
      "families": {},
      "name": "solaris"
     }
    },
    {
     "abi": {
      "_type": "abi",
      "name": "cygnus"
     },
     "kernel": {
      "_type": "kernel",
      "execFormat": {
       "_type": "exec-format",
       "name": "pe"
      },
      "families": {},
      "name": "windows"
     }
    }
   ],
   "position": "pkgs/development/tools/misc/gperf/default.nix:12"
  },
  "revs": [
   "00005ce0bdbc3c13804adc9a7fd71a02cc0b8db2",
   "01229007553d9322c473c0fa36e3d6c644147e7d"
  ]
 }
}