{
 "0.42.2": {
  "meta": {
   "description": "C and C++ binding generator",
   "homepage": "https://github.com/rust-lang-nursery/rust-bindgen",
   "license": [
    {
     "fullName": "BSD 3-clause \"New\" or \"Revised\" License",
     "shortName": "bsd3",
     "spdxId": "BSD-3-Clause",
     "url": "http://spdx.org/licenses/BSD-3-Clause.html"
    }
   ],
   "long_description": "Bindgen takes a c or c++ header file and turns them into\nrust ffi declarations.\nAs with most compiler related software, this will only work\ninside a nix-shell with the required libraries as buildInputs.\n",
   "maintainers": [
    {
     "email": "ben.e.saunders@gmail.com",
     "github": "ralith",
     "name": "Benjamin Saunders"
    }
   ],
   "name": "rust-bindgen",
   "platforms": null,
   "position": "pkgs/development/tools/rust/bindgen/default.nix:47"
  },
  "revs": [
   "00005ce0bdbc3c13804adc9a7fd71a02cc0b8db2",
   "000463186d471107324c67faecb5c85e9f06521a"
  ]
 },
 "0.53.2": {
  "meta": {
   "description": "C and C++ binding generator",
   "homepage": "https://github.com/rust-lang/rust-bindgen",
   "license": [
    {
     "fullName": "BSD 3-clause \"New\" or \"Revised\" License",
     "shortName": "bsd3",
     "spdxId": "BSD-3-Clause",
     "url": "https://spdx.org/licenses/BSD-3-Clause.html"
    }
   ],
   "long_description": "Bindgen takes a c or c++ header file and turns them into\nrust ffi declarations.\nAs with most compiler related software, this will only work\ninside a nix-shell with the required libraries as buildInputs.\n",
   "maintainers": [
    {
     "email": "ben.e.saunders@gmail.com",
     "github": "ralith",
     "githubId": 104558,
     "name": "Benjamin Saunders"
    }
   ],
   "name": "rust-bindgen",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux"
   ],
   "position": "pkgs/development/tools/rust/bindgen/default.nix:54"
  },
  "revs": [
   "00022fbeda385d7b6ae2eee44f07eecfc6d92015",
   "00022fbeda385d7b6ae2eee44f07eecfc6d92015"
  ]
 },
 "0.54.1": {
  "meta": {
   "description": "Automatically generates Rust FFI bindings to C (and some C++) libraries.",
   "homepage": "https://github.com/rust-lang/rust-bindgen",
   "license": [
    {
     "fullName": "BSD 3-clause \"New\" or \"Revised\" License",
     "shortName": "bsd3",
     "spdxId": "BSD-3-Clause",
     "url": "https://spdx.org/licenses/BSD-3-Clause.html"
    }
   ],
   "long_description": "Bindgen takes a c or c++ header file and turns them into\nrust ffi declarations.\nAs with most compiler related software, this will only work\ninside a nix-shell with the required libraries as buildInputs.\n",
   "maintainers": [
    {
     "email": "huyuumi.dev@gmail.com",
     "github": "JohnTitor",
     "githubId": 25030997,
     "name": "Yuki Okushi"
    },
    {
     "email": "ben.e.saunders@gmail.com",
     "github": "ralith",
     "githubId": 104558,
     "name": "Benjamin Saunders"
    }
   ],
   "name": "rust-bindgen",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-redox",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux"
   ],
   "position": "pkgs/development/tools/rust/bindgen/default.nix:54"
  },
  "revs": [
   "000404944c6da404f013111563bcc0084b270e28",
   "000404944c6da404f013111563bcc0084b270e28"
  ]
 }
}