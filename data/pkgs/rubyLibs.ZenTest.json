{
 "4.10.1": {
  "meta": {
   "description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and multiruby",
   "homepage": "https://github.com/seattlerb/zentest",
   "license": null,
   "long_description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and\nmultiruby.\n\nzentest scans your target and unit-test code and writes your missing\ncode based on simple naming rules, enabling XP at a much quicker pace.\nzentest only works with Ruby and Minitest or Test::Unit. There is\nenough evidence to show that this is still proving useful to users, so\nit stays.\n\nunit_diff is a command-line filter to diff expected results from\nactual results and allow you to quickly see exactly what is wrong.\nDo note that minitest 2.2+ provides an enhanced assert_equal obviating\nthe need for unit_diff\n\nautotest is a continous testing facility meant to be used during\ndevelopment. As soon as you save a file, autotest will run the\ncorresponding dependent tests.\n\nmultiruby runs anything you want on multiple versions of ruby. Great\nfor compatibility checking! Use multiruby_setup to manage your\ninstalled versions.",
   "maintainers": [],
   "name": "ruby-ZenTest",
   "platforms": null,
   "position": "pkgs/development/interpreters/ruby/generated.nix:143"
  },
  "revs": [
   "0005e1896d9bdef48aedcff9e86843351ac024e9",
   "01886aef225a5fb03dc1ee08fb606899d87f6dcf"
  ]
 },
 "4.11.0": {
  "meta": {
   "description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and multiruby",
   "homepage": "https://github.com/seattlerb/zentest",
   "license": null,
   "long_description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and\nmultiruby.\n\nzentest scans your target and unit-test code and writes your missing\ncode based on simple naming rules, enabling XP at a much quicker pace.\nzentest only works with Ruby and Minitest or Test::Unit. There is\nenough evidence to show that this is still proving useful to users, so\nit stays.\n\nunit_diff is a command-line filter to diff expected results from\nactual results and allow you to quickly see exactly what is wrong.\nDo note that minitest 2.2+ provides an enhanced assert_equal obviating\nthe need for unit_diff\n\nautotest is a continous testing facility meant to be used during\ndevelopment. As soon as you save a file, autotest will run the\ncorresponding dependent tests.\n\nmultiruby runs anything you want on multiple versions of ruby. Great\nfor compatibility checking! Use multiruby_setup to manage your\ninstalled versions.",
   "maintainers": [],
   "name": "ruby-ZenTest",
   "platforms": null,
   "position": "pkgs/development/interpreters/ruby/generated.nix:181"
  },
  "revs": [
   "000c24a43fef598f04cc9435de09a818dfedfdba",
   "02016e90266424e7a39c635af45b80e80d4d4dd3"
  ]
 },
 "4.6.2": {
  "meta": {
   "description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and multiruby",
   "homepage": "https://github.com/seattlerb/zentest",
   "license": null,
   "long_description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and\nmultiruby.\n\nZenTest scans your target and unit-test code and writes your missing\ncode based on simple naming rules, enabling XP at a much quicker\npace. ZenTest only works with Ruby and Test::Unit. Nobody uses this\ntool anymore but it is the package namesake, so it stays.\n\nunit_diff is a command-line filter to diff expected results from\nactual results and allow you to quickly see exactly what is wrong.\nDo note that minitest 2.2+ provides an enhanced assert_equal obviating\nthe need for unit_diff\n\nautotest is a continous testing facility meant to be used during\ndevelopment. As soon as you save a file, autotest will run the\ncorresponding dependent tests.\n\nmultiruby runs anything you want on multiple versions of ruby. Great\nfor compatibility checking! Use multiruby_setup to manage your\ninstalled versions.",
   "maintainers": [],
   "name": "ruby-ZenTest",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "000051b196b82d30d1008c8999502c484ea5bd7d",
   "01b850670899799f1395cd1a68f30f76d9fb96b5"
  ]
 },
 "4.7.0": {
  "meta": {
   "description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and multiruby",
   "homepage": "https://github.com/seattlerb/zentest",
   "license": null,
   "long_description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and\nmultiruby.\n\nZenTest scans your target and unit-test code and writes your missing\ncode based on simple naming rules, enabling XP at a much quicker\npace. ZenTest only works with Ruby and Test::Unit. Nobody uses this\ntool anymore but it is the package namesake, so it stays.\n\nunit_diff is a command-line filter to diff expected results from\nactual results and allow you to quickly see exactly what is wrong.\nDo note that minitest 2.2+ provides an enhanced assert_equal obviating\nthe need for unit_diff\n\nautotest is a continous testing facility meant to be used during\ndevelopment. As soon as you save a file, autotest will run the\ncorresponding dependent tests.\n\nmultiruby runs anything you want on multiple versions of ruby. Great\nfor compatibility checking! Use multiruby_setup to manage your\ninstalled versions.",
   "maintainers": [],
   "name": "ruby-ZenTest",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "00cd8c4235e853cb9cbbf4c981d6c02ac7607e71",
   "023cd3b7bdfbd77a89d87d55fb5b54e7a0d1a8f5"
  ]
 },
 "4.8.0": {
  "meta": {
   "description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and multiruby",
   "homepage": "https://github.com/seattlerb/zentest",
   "license": null,
   "long_description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and\nmultiruby.\n\nzentest scans your target and unit-test code and writes your missing\ncode based on simple naming rules, enabling XP at a much quicker pace.\nzentest only works with Ruby and Minitest or Test::Unit. There is\nenough evidence to show that this is still proving useful to users, so\nit stays.\n\nunit_diff is a command-line filter to diff expected results from\nactual results and allow you to quickly see exactly what is wrong.\nDo note that minitest 2.2+ provides an enhanced assert_equal obviating\nthe need for unit_diff\n\nautotest is a continous testing facility meant to be used during\ndevelopment. As soon as you save a file, autotest will run the\ncorresponding dependent tests.\n\nmultiruby runs anything you want on multiple versions of ruby. Great\nfor compatibility checking! Use multiruby_setup to manage your\ninstalled versions.",
   "maintainers": [],
   "name": "ruby-ZenTest",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "002ffde4a48ccd69fa0ab0c03fda04557b70789e",
   "015e7594d0d7fe91296df94641f2d9a2a9047219"
  ]
 },
 "4.8.1": {
  "meta": {
   "description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and multiruby",
   "homepage": "https://github.com/seattlerb/zentest",
   "license": null,
   "long_description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and\nmultiruby.\n\nzentest scans your target and unit-test code and writes your missing\ncode based on simple naming rules, enabling XP at a much quicker pace.\nzentest only works with Ruby and Minitest or Test::Unit. There is\nenough evidence to show that this is still proving useful to users, so\nit stays.\n\nunit_diff is a command-line filter to diff expected results from\nactual results and allow you to quickly see exactly what is wrong.\nDo note that minitest 2.2+ provides an enhanced assert_equal obviating\nthe need for unit_diff\n\nautotest is a continous testing facility meant to be used during\ndevelopment. As soon as you save a file, autotest will run the\ncorresponding dependent tests.\n\nmultiruby runs anything you want on multiple versions of ruby. Great\nfor compatibility checking! Use multiruby_setup to manage your\ninstalled versions.",
   "maintainers": [],
   "name": "ruby-ZenTest",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "000791e74a511f862081aff90ab27304c88f0aba",
   "0072c442557b4d57fe128bf75775b2912f94b313"
  ]
 },
 "4.8.4": {
  "meta": {
   "description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and multiruby",
   "homepage": "https://github.com/seattlerb/zentest",
   "license": null,
   "long_description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and\nmultiruby.\n\nzentest scans your target and unit-test code and writes your missing\ncode based on simple naming rules, enabling XP at a much quicker pace.\nzentest only works with Ruby and Minitest or Test::Unit. There is\nenough evidence to show that this is still proving useful to users, so\nit stays.\n\nunit_diff is a command-line filter to diff expected results from\nactual results and allow you to quickly see exactly what is wrong.\nDo note that minitest 2.2+ provides an enhanced assert_equal obviating\nthe need for unit_diff\n\nautotest is a continous testing facility meant to be used during\ndevelopment. As soon as you save a file, autotest will run the\ncorresponding dependent tests.\n\nmultiruby runs anything you want on multiple versions of ruby. Great\nfor compatibility checking! Use multiruby_setup to manage your\ninstalled versions.",
   "maintainers": [],
   "name": "ruby-ZenTest",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "00258a362d6d9571d1e16524c5ee17fe0ef824a2",
   "01cbb17c12cee32d90ea17dd901284498c6f30e4"
  ]
 },
 "4.9.0": {
  "meta": {
   "description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and multiruby",
   "homepage": "https://github.com/seattlerb/zentest",
   "license": null,
   "long_description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and\nmultiruby.\n\nzentest scans your target and unit-test code and writes your missing\ncode based on simple naming rules, enabling XP at a much quicker pace.\nzentest only works with Ruby and Minitest or Test::Unit. There is\nenough evidence to show that this is still proving useful to users, so\nit stays.\n\nunit_diff is a command-line filter to diff expected results from\nactual results and allow you to quickly see exactly what is wrong.\nDo note that minitest 2.2+ provides an enhanced assert_equal obviating\nthe need for unit_diff\n\nautotest is a continous testing facility meant to be used during\ndevelopment. As soon as you save a file, autotest will run the\ncorresponding dependent tests.\n\nmultiruby runs anything you want on multiple versions of ruby. Great\nfor compatibility checking! Use multiruby_setup to manage your\ninstalled versions.",
   "maintainers": [],
   "name": "ruby-ZenTest",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "000fddd10e079f147769f686e5661bd6d7c1db5a",
   "00df29c471d12b625f533e0adfafb17ea72432cc"
  ]
 },
 "4.9.2": {
  "meta": {
   "description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and multiruby",
   "homepage": "https://github.com/seattlerb/zentest",
   "license": null,
   "long_description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and\nmultiruby.\n\nzentest scans your target and unit-test code and writes your missing\ncode based on simple naming rules, enabling XP at a much quicker pace.\nzentest only works with Ruby and Minitest or Test::Unit. There is\nenough evidence to show that this is still proving useful to users, so\nit stays.\n\nunit_diff is a command-line filter to diff expected results from\nactual results and allow you to quickly see exactly what is wrong.\nDo note that minitest 2.2+ provides an enhanced assert_equal obviating\nthe need for unit_diff\n\nautotest is a continous testing facility meant to be used during\ndevelopment. As soon as you save a file, autotest will run the\ncorresponding dependent tests.\n\nmultiruby runs anything you want on multiple versions of ruby. Great\nfor compatibility checking! Use multiruby_setup to manage your\ninstalled versions.",
   "maintainers": [],
   "name": "ruby-ZenTest",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "0024926701875c6cac245281f07d899f2ee14d92",
   "026f444450dff90dbbafe72db3672c64d6a13b0e"
  ]
 },
 "4.9.3": {
  "meta": {
   "description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and multiruby",
   "homepage": "https://github.com/seattlerb/zentest",
   "license": null,
   "long_description": "ZenTest provides 4 different tools: zentest, unit_diff, autotest, and\nmultiruby.\n\nzentest scans your target and unit-test code and writes your missing\ncode based on simple naming rules, enabling XP at a much quicker pace.\nzentest only works with Ruby and Minitest or Test::Unit. There is\nenough evidence to show that this is still proving useful to users, so\nit stays.\n\nunit_diff is a command-line filter to diff expected results from\nactual results and allow you to quickly see exactly what is wrong.\nDo note that minitest 2.2+ provides an enhanced assert_equal obviating\nthe need for unit_diff\n\nautotest is a continous testing facility meant to be used during\ndevelopment. As soon as you save a file, autotest will run the\ncorresponding dependent tests.\n\nmultiruby runs anything you want on multiple versions of ruby. Great\nfor compatibility checking! Use multiruby_setup to manage your\ninstalled versions.",
   "maintainers": [],
   "name": "ruby-ZenTest",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "00081d1873148a8ec642d5c912d04875c4ee4a66",
   "01dfd5a44a1e787ed3b1deafef482376141c27df"
  ]
 }
}