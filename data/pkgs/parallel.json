{
 "20100424": {
  "meta": {
   "description": "GNU Parallel, a shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": "GPLv3+",
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Ludovic Court\u00e8s <ludo@gnu.org>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "powerpc-linux",
    "i686-darwin",
    "powerpc-darwin",
    "x86_64-darwin",
    "i686-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "powerpc-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": ""
  },
  "revs": [
   "000c2c51fdfffcd0b0cc91011d53080bf1f6513c",
   "000c2c51fdfffcd0b0cc91011d53080bf1f6513c"
  ]
 },
 "20110125": {
  "meta": {
   "description": "GNU Parallel, a shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": "GPLv3+",
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Ludovic Court\u00e8s <ludo@gnu.org>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "powerpc-linux",
    "armv5tel-linux",
    "mips64-linux",
    "i686-darwin",
    "powerpc-darwin",
    "x86_64-darwin",
    "i686-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "powerpc-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": ""
  },
  "revs": [
   "0003f76f9b29d92ce7acb8e3f35f3805c91687d6",
   "0003f76f9b29d92ce7acb8e3f35f3805c91687d6"
  ]
 },
 "20110622": {
  "meta": {
   "description": "GNU Parallel, a shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": "GPLv3+",
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Ludovic Court\u00e8s <ludo@gnu.org>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "powerpc-linux",
    "armv5tel-linux",
    "mips64-linux",
    "i686-darwin",
    "powerpc-darwin",
    "x86_64-darwin",
    "i686-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "powerpc-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": ""
  },
  "revs": [
   "0026458089ed4a754f75b182b5e903f2242127cc",
   "0026458089ed4a754f75b182b5e903f2242127cc"
  ]
 },
 "20111122": {
  "meta": {
   "description": "GNU Parallel, a shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": "GPLv3+",
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Ludovic Court\u00e8s <ludo@gnu.org>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "powerpc-linux",
    "armv5tel-linux",
    "mips64-linux",
    "i686-darwin",
    "powerpc-darwin",
    "x86_64-darwin",
    "i686-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "powerpc-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": ""
  },
  "revs": [
   "0009c1f650ba619de97df36322fbd0346db0c099",
   "0009c1f650ba619de97df36322fbd0346db0c099"
  ]
 },
 "20111222": {
  "meta": {
   "description": "GNU Parallel, a shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": "GPLv3+",
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Ludovic Court\u00e8s <ludo@gnu.org>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "powerpc-linux",
    "armv5tel-linux",
    "mips64el-linux",
    "i686-darwin",
    "powerpc-darwin",
    "x86_64-darwin",
    "i686-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "powerpc-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": ""
  },
  "revs": [
   "000051b196b82d30d1008c8999502c484ea5bd7d",
   "0017d80aa50f8729b5a1e6c65c2f08971cafe526"
  ]
 },
 "20120322": {
  "meta": {
   "description": "GNU Parallel, a shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": "GPLv3+",
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Ludovic Court\u00e8s <ludo@gnu.org>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "powerpc-linux",
    "armv5tel-linux",
    "armv7l-linux",
    "mips64el-linux",
    "i686-darwin",
    "powerpc-darwin",
    "x86_64-darwin",
    "i686-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "powerpc-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": ""
  },
  "revs": [
   "000791e74a511f862081aff90ab27304c88f0aba",
   "00101b66fed722abeda8af0a4f15383115df30c9"
  ]
 },
 "20130422": {
  "meta": {
   "description": "GNU Parallel, a shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": "GPLv3+",
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "powerpc-linux",
    "armv5tel-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "powerpc-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": ""
  },
  "revs": [
   "00081d1873148a8ec642d5c912d04875c4ee4a66",
   "00081d1873148a8ec642d5c912d04875c4ee4a66"
  ]
 },
 "20140222": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "0005e1896d9bdef48aedcff9e86843351ac024e9",
   "00312d90b9ae42ae383174fcb6b4760d009606ed"
  ]
 },
 "20140822": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "00298c7bba49c3f81be4d748f5f3c903d69e0b9c",
   "002d771763e9b05cb91ab752829a90e3008451e6"
  ]
 },
 "20141122": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "000c24a43fef598f04cc9435de09a818dfedfdba",
   "001befaa6fb54b780254e7a7a6a5fc38051ccda0"
  ]
 },
 "20150122": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "001d4d07cd51ac2ba7b1f4658c3c37b7da2579e4",
   "001d4d07cd51ac2ba7b1f4658c3c37b7da2579e4"
  ]
 },
 "20150322": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "001ea3b455c9c1eca44210dac25eb09ca4b7f908",
   "002c687edf9a7aca64660f3ef67db88b0ad46c85"
  ]
 },
 "20150522": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "000162daed5e6a854d1e034409002aee80e6d8ac",
   "000162daed5e6a854d1e034409002aee80e6d8ac"
  ]
 },
 "20150622": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "00111ad79d7e58149141311628a602190fd69233",
   "0015a47229b681a0beeddf1e340d32aaf4831cbe"
  ]
 },
 "20150722": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "00137438459949bfbd2c0311e8664a9da8bb1e53",
   "00137438459949bfbd2c0311e8664a9da8bb1e53"
  ]
 },
 "20150822": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "000a2108ba10df725065004e1f3d2fb793078f71",
   "002da098e1e44f8150034af7d87b7e751cd476f8"
  ]
 },
 "20151122": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd",
    "i686-netbsd",
    "x86_64-netbsd",
    "x86_64-solaris"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "000fe587692e2db8829ebd0894e7204f12a86859",
   "000fe587692e2db8829ebd0894e7204f12a86859"
  ]
 },
 "20151222": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd",
    "i686-netbsd",
    "x86_64-netbsd",
    "x86_64-solaris"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "001341f8c98af998da57d5b15a279b64efff4689",
   "001341f8c98af998da57d5b15a279b64efff4689"
  ]
 },
 "20160122": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd",
    "i686-netbsd",
    "x86_64-netbsd",
    "x86_64-solaris"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "0022f639f31161766b8f2604388015e8b05c4a0d",
   "002d151ebe258a92e44e0a947b493105295b7e7f"
  ]
 },
 "20160222": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd",
    "i686-netbsd",
    "x86_64-netbsd",
    "x86_64-solaris"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "00078e317e63d1d934806efd62f56e48150a4f64",
   "00078e317e63d1d934806efd62f56e48150a4f64"
  ]
 },
 "20160322": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd",
    "i686-netbsd",
    "x86_64-netbsd",
    "x86_64-solaris"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "001c28b63ccb4a0f7ec169645a4acf42239b8768",
   "002f5e24b48d047e67a79470b777bd10fa64a6c7"
  ]
 },
 "20160422": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd",
    "i686-netbsd",
    "x86_64-netbsd",
    "x86_64-solaris"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "0000d4029e264262dcf45a822ccf3b48bcacf209",
   "0000d4029e264262dcf45a822ccf3b48bcacf209"
  ]
 },
 "20160722": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>",
    "Rahul Gopinath <rahul@gopinath.org>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd",
    "i686-netbsd",
    "x86_64-netbsd",
    "x86_64-solaris"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "0016d362fa9455e7a5ee03e7e4d374de477a18dc",
   "0016d362fa9455e7a5ee03e7e4d374de477a18dc"
  ]
 },
 "20161022": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>",
    "Rahul Gopinath <rahul@gopinath.org>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd",
    "i686-netbsd",
    "x86_64-netbsd",
    "x86_64-solaris"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "0028abeb4ed1432b99c0b977825c577b3baff3d1",
   "0028abeb4ed1432b99c0b977825c577b3baff3d1"
  ]
 },
 "20161222": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>",
    "Rahul Gopinath <rahul@gopinath.org>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd",
    "i686-netbsd",
    "x86_64-netbsd",
    "x86_64-solaris"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "000fb9be33528f867e2355ddedde0836ba7f7a3a",
   "000fb9be33528f867e2355ddedde0836ba7f7a3a"
  ]
 },
 "20170122": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>",
    "Rahul Gopinath <rahul@gopinath.org>"
   ],
   "name": "parallel",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "aarch64-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd",
    "i686-netbsd",
    "x86_64-netbsd",
    "x86_64-solaris"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "00105162f413ea8e8a419da0fc5b556e3737e82f",
   "002a2b479a245d10691a394454f29e27d95de719"
  ]
 },
 "20170422": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>",
    "Rahul Gopinath <rahul@gopinath.org>"
   ],
   "name": "parallel",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-darwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "0011f9065a1ad1da4db67bec8d535d91b0a78fba",
   "0011f9065a1ad1da4db67bec8d535d91b0a78fba"
  ]
 },
 "20170722": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>",
    "Rahul Gopinath <rahul@gopinath.org>"
   ],
   "name": "parallel",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-darwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "00078afb1f6c383405fa4bef9646d575f70b092f",
   "003102c41127dabf90349235964b6e4714114ae7"
  ]
 },
 "20171022": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    "Pascal Wittmann <mail@pascal-wittmann.de>",
    "Rahul Gopinath <rahul@gopinath.org>"
   ],
   "name": "parallel",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-darwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "00056e76d0a5c1c05d7ad1064702b3d121cd1b98",
   "0017479abbe15c7d472b8c7563e5353608e67e5d"
  ]
 },
 "20180122": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    {}
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "000c7800a1030a61677b64e9edb1670d3d940194",
   "000c7800a1030a61677b64e9edb1670d3d940194"
  ]
 },
 "20180222": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-darwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "0008b5c2324b7dfc9420bdec9c8068f0755bf54f",
   "001db3951d2817af4707bb87eef2536bd445cfd4"
  ]
 },
 "20180322": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    {}
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "000482ffc470f798fb3aa1673b39a38680cbb567",
   "00349e27e5449e3243ba7525446900a16e1f4c2b"
  ]
 },
 "20180422": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    {}
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "001a84f22adb50971c5d3898012eb92a5c90d503",
   "001a84f22adb50971c5d3898012eb92a5c90d503"
  ]
 },
 "20180522": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    {}
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "00156c3caea9c651d5d1d3dcafa2a9729dcdbd81",
   "00156c3caea9c651d5d1d3dcafa2a9729dcdbd81"
  ]
 },
 "20180622": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    {}
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "000b9ce78d66ad9cabe17a4670ffacf9d35a6d05",
   "000b9ce78d66ad9cabe17a4670ffacf9d35a6d05"
  ]
 },
 "20180722": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    {}
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "002ae44fa1ef54363a1f16974117dc7f87136549",
   "002ae44fa1ef54363a1f16974117dc7f87136549"
  ]
 },
 "20180822": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    {}
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "00064c21cc328fb96b631917220acbc26f232f96",
   "00242aa4da43e7e0ba7051d50f700af70f37c952"
  ]
 },
 "20180922": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    {}
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "0013bc3056604b25299e8601caf4f99cc1f4a910",
   "00209911b0cdb76b8ec53c4be595e5a0349ba472"
  ]
 },
 "20181022": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "http://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    {}
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "001b7a66111b8e1ad3a8f6051a3f8f8d5000706b",
   "0023e1d0de7c0a61f884f286a1a25326f0c0a568"
  ]
 },
 "20181122": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "https://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0+",
    "url": "http://spdx.org/licenses/GPL-3.0+.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    {}
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "00005ce0bdbc3c13804adc9a7fd71a02cc0b8db2",
   "00005ce0bdbc3c13804adc9a7fd71a02cc0b8db2"
  ]
 },
 "20181222": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "https://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0-or-later",
    "url": "http://spdx.org/licenses/GPL-3.0-or-later.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    {}
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "0008aa73eb0dec898c4e2e6913af645abd253c35",
   "00349e3fdad9b7feb0e836e96c3d6fb1e0d4557e"
  ]
 },
 "20190122": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "https://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0-or-later",
    "url": "http://spdx.org/licenses/GPL-3.0-or-later.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    {}
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "0028bad962d0184f190474244b9e51d4b840443d",
   "0028bad962d0184f190474244b9e51d4b840443d"
  ]
 },
 "20190222": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "https://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0-or-later",
    "url": "http://spdx.org/licenses/GPL-3.0-or-later.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    {}
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "0000a86d7cd47005096a292a797d2e02ce29e8d8",
   "000463186d471107324c67faecb5c85e9f06521a"
  ]
 },
 "20190322": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "https://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0-or-later",
    "url": "http://spdx.org/licenses/GPL-3.0-or-later.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    {}
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "0017a06717bb18706ac3cb99432034caad0c8b91",
   "0017a06717bb18706ac3cb99432034caad0c8b91"
  ]
 },
 "20190422": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "https://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0-or-later",
    "url": "http://spdx.org/licenses/GPL-3.0-or-later.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    {}
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "0015e885ce6c6bac448b639191123fb39a94aa92",
   "00263c9306107f3ff79ecd185d7e0712fb0560d8"
  ]
 },
 "20190522": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "https://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0-or-later",
    "url": "http://spdx.org/licenses/GPL-3.0-or-later.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-darwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "aarch64-none",
    "avr-none",
    "arm-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "00078b99ee8baded7fc89e9e1e3501068a2c7fff",
   "0024cfcc49560645359f1a709a2f2af625962d3c"
  ]
 },
 "20190622": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "https://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0-or-later",
    "url": "http://spdx.org/licenses/GPL-3.0-or-later.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "aarch64-none",
    "avr-none",
    "arm-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none",
    "riscv64-none",
    "riscv32-none"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "002b853782e939c50da3fa7d424b08346f39eb6f",
   "002b853782e939c50da3fa7d424b08346f39eb6f"
  ]
 },
 "20191122": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "https://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0-or-later",
    "url": "http://spdx.org/licenses/GPL-3.0-or-later.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "githubId": 83842,
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "githubId": 70410,
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "aarch64-none",
    "avr-none",
    "arm-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none",
    "riscv64-none",
    "riscv32-none",
    "vc4-none"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "000f19ff08cfaf6ce89b136ea986fde64f750555",
   "001999e25b746f2ce8e23fc2010f8bb25d10810e"
  ]
 },
 "20191222": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "https://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0-or-later",
    "url": "http://spdx.org/licenses/GPL-3.0-or-later.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "githubId": 83842,
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "githubId": 70410,
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "aarch64-none",
    "avr-none",
    "arm-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none",
    "riscv64-none",
    "riscv32-none",
    "vc4-none",
    "js-ghcjs"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "002fc5fa06868521e7bf134ca45d679cb21cae9a",
   "002fc5fa06868521e7bf134ca45d679cb21cae9a"
  ]
 },
 "20200122": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "https://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0-or-later",
    "url": "http://spdx.org/licenses/GPL-3.0-or-later.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "githubId": 83842,
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "githubId": 70410,
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "arm-none",
    "armv6l-none",
    "aarch64-none",
    "avr-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none",
    "riscv64-none",
    "riscv32-none",
    "vc4-none",
    "js-ghcjs"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "0023aaef48e31444eeb22fc7c982c43b9782eef9",
   "0023aaef48e31444eeb22fc7c982c43b9782eef9"
  ]
 },
 "20200222": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "https://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0-or-later",
    "url": "http://spdx.org/licenses/GPL-3.0-or-later.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "githubId": 83842,
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "githubId": 70410,
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "aarch64-none",
    "avr-none",
    "arm-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none",
    "riscv64-none",
    "riscv32-none",
    "vc4-none",
    "js-ghcjs"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:22"
  },
  "revs": [
   "001be890f78f04df86938f44c0761676e299ceac",
   "001be890f78f04df86938f44c0761676e299ceac"
  ]
 },
 "20200322": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "https://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0-or-later",
    "url": "http://spdx.org/licenses/GPL-3.0-or-later.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "githubId": 83842,
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "githubId": 70410,
     "name": "Rahul Gopinath"
    }
   ],
   "name": "parallel",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "arm-none",
    "armv6l-none",
    "aarch64-none",
    "avr-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none",
    "riscv64-none",
    "riscv32-none",
    "vc4-none",
    "js-ghcjs"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "0005b13fc5f3c4c3bf3d0bb5f7ea4330b36c0bcc",
   "00215e5bc0f046b0da8af5f5955b13ee8d915d51"
  ]
 },
 "20200422": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "https://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0-or-later",
    "url": "https://spdx.org/licenses/GPL-3.0-or-later.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "githubId": 83842,
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "githubId": 70410,
     "name": "Rahul Gopinath"
    },
    {
     "email": "tomberek@gmail.com",
     "github": "tomberek",
     "githubId": 178444,
     "name": "Thomas Bereknyei"
    }
   ],
   "name": "parallel",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "arm-none",
    "armv6l-none",
    "aarch64-none",
    "avr-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none",
    "riscv64-none",
    "riscv32-none",
    "vc4-none",
    "js-ghcjs",
    "aarch64-genode",
    "x86_64-genode"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "0010ae4960d35243e7abb046cd26ddda904a4c63",
   "002d38783ab0b570b296dadd4ee1ecfad21a9367"
  ]
 },
 "20200522": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "https://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0-or-later",
    "url": "https://spdx.org/licenses/GPL-3.0-or-later.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "githubId": 83842,
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "githubId": 70410,
     "name": "Rahul Gopinath"
    },
    {
     "email": "tomberek@gmail.com",
     "github": "tomberek",
     "githubId": 178444,
     "name": "Thomas Bereknyei"
    }
   ],
   "name": "parallel",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "arm-none",
    "armv6l-none",
    "aarch64-none",
    "avr-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none",
    "riscv64-none",
    "riscv32-none",
    "vc4-none",
    "js-ghcjs",
    "aarch64-genode",
    "x86_64-genode"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "00022fbeda385d7b6ae2eee44f07eecfc6d92015",
   "0006326d35ed4774d7936aea721ce1a5c8f0b775"
  ]
 },
 "20200722": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "https://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0-or-later",
    "url": "https://spdx.org/licenses/GPL-3.0-or-later.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "githubId": 83842,
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "githubId": 70410,
     "name": "Rahul Gopinath"
    },
    {
     "email": "tomberek@gmail.com",
     "github": "tomberek",
     "githubId": 178444,
     "name": "Thomas Bereknyei"
    }
   ],
   "name": "parallel",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "x86_64-redox",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "arm-none",
    "armv6l-none",
    "aarch64-none",
    "avr-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none",
    "riscv64-none",
    "riscv32-none",
    "vc4-none",
    "js-ghcjs",
    "aarch64-genode",
    "i686-genode",
    "x86_64-genode"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "000bb5ee45e3fa0339ccf64f33a2959c553aeab1",
   "00347e9537d6e6ddef599094429a1ac5392d6f28"
  ]
 },
 "20200822": {
  "meta": {
   "description": "Shell tool for executing jobs in parallel",
   "homepage": "https://www.gnu.org/software/parallel/",
   "license": {
    "fullName": "GNU General Public License v3.0 or later",
    "shortName": "gpl3Plus",
    "spdxId": "GPL-3.0-or-later",
    "url": "https://spdx.org/licenses/GPL-3.0-or-later.html"
   },
   "long_description": "GNU Parallel is a shell tool for executing jobs in parallel.  A job\n        is typically a single command or a small script that has to be run\n        for each of the lines in the input.  The typical input is a list of\n        files, a list of hosts, a list of users, or a list of tables.\n\n        If you use xargs today you will find GNU Parallel very easy to use.\n        If you write loops in shell, you will find GNU Parallel may be able\n        to replace most of the loops and make them run faster by running\n        jobs in parallel.  If you use ppss or pexec you will find GNU\n        Parallel will often make the command easier to read.\n\n        GNU Parallel makes sure output from the commands is the same output\n        as you would get had you run the commands sequentially.  This makes\n        it possible to use output from GNU Parallel as input for other\n        programs.\n",
   "maintainers": [
    {
     "email": "mail@pascal-wittmann.de",
     "github": "pSub",
     "githubId": 83842,
     "name": "Pascal Wittmann"
    },
    {
     "email": "rahul@gopinath.org",
     "github": "vrthra",
     "githubId": 70410,
     "name": "Rahul Gopinath"
    },
    {
     "email": "tomberek@gmail.com",
     "github": "tomberek",
     "githubId": 178444,
     "name": "Thomas Bereknyei"
    }
   ],
   "name": "parallel",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "x86_64-redox",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "arm-none",
    "armv6l-none",
    "aarch64-none",
    "avr-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none",
    "riscv64-none",
    "riscv32-none",
    "vc4-none",
    "js-ghcjs",
    "aarch64-genode",
    "i686-genode",
    "x86_64-genode"
   ],
   "position": "pkgs/tools/misc/parallel/default.nix:24"
  },
  "revs": [
   "000404944c6da404f013111563bcc0084b270e28",
   "001334b47c6cdfc35e94805380484e75004cdbf5"
  ]
 }
}