{
 "2.3": {
  "meta": {
   "description": "Automate interactive console applications such as ssh, ftp, etc.",
   "homepage": "http://www.noah.org/wiki/Pexpect",
   "license": "MIT",
   "long_description": "Pexpect is similar to the Don Libes \"Expect\" system, but Pexpect\nas a different interface that is easier to understand. Pexpect\nis basically a pattern matching system. It runs programs and\nwatches output. When output matches a given pattern Pexpect can\nrespond as if a human were typing responses. Pexpect can be used\nfor automation, testing, and screen scraping. Pexpect can be\nused for automating interactive console applications such as\nssh, ftp, passwd, telnet, etc. It can also be used to control\nweb applications via \"lynx\", \"w3m\", or some other text-based web\nbrowser. Pexpect is pure Python. Unlike other Expect-like\nmodules for Python Pexpect does not require TCL or Expect nor\ndoes it require C extensions to be compiled. It should work on\nany platform that supports the standard Python pty module.\n",
   "maintainers": [
    "Peter Simons <simons@cryp.to>"
   ],
   "name": "python-pexpect",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "powerpc-linux",
    "armv5tel-linux",
    "mips64el-linux",
    "i686-darwin",
    "powerpc-darwin",
    "x86_64-darwin",
    "i686-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "powerpc-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": ""
  },
  "revs": [
   "000051b196b82d30d1008c8999502c484ea5bd7d",
   "000162daed5e6a854d1e034409002aee80e6d8ac"
  ]
 },
 "3.3": {
  "meta": {
   "description": "Automate interactive console applications such as ssh, ftp, etc",
   "homepage": "http://www.noah.org/wiki/Pexpect",
   "license": {
    "fullName": "MIT License",
    "shortName": "mit",
    "spdxId": "MIT",
    "url": "http://spdx.org/licenses/MIT"
   },
   "long_description": "Pexpect is similar to the Don Libes \"Expect\" system, but Pexpect\nas a different interface that is easier to understand. Pexpect\nis basically a pattern matching system. It runs programs and\nwatches output. When output matches a given pattern Pexpect can\nrespond as if a human were typing responses. Pexpect can be used\nfor automation, testing, and screen scraping. Pexpect can be\nused for automating interactive console applications such as\nssh, ftp, passwd, telnet, etc. It can also be used to control\nweb applications via \"lynx\", \"w3m\", or some other text-based web\nbrowser. Pexpect is pure Python. Unlike other Expect-like\nmodules for Python Pexpect does not require TCL or Expect nor\ndoes it require C extensions to be compiled. It should work on\nany platform that supports the standard Python pty module.\n",
   "maintainers": [
    "Florian Friesdorf <flo@chaoflow.net>",
    "Domen Kozar <domen@dev.si>"
   ],
   "name": "python2.7-pexpect",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd",
    "i686-netbsd",
    "x86_64-netbsd",
    "x86_64-solaris"
   ],
   "position": "pkgs/top-level/python-packages.nix:16150"
  },
  "revs": [
   "0000d4029e264262dcf45a822ccf3b48bcacf209",
   "0000d4029e264262dcf45a822ccf3b48bcacf209"
  ]
 },
 "4.6.0": {
  "meta": {
   "description": "Automate interactive console applications such as ssh, ftp, etc",
   "homepage": "http://www.noah.org/wiki/Pexpect",
   "license": {
    "fullName": "MIT License",
    "shortName": "mit",
    "spdxId": "MIT",
    "url": "http://spdx.org/licenses/MIT.html"
   },
   "long_description": "Pexpect is similar to the Don Libes \"Expect\" system, but Pexpect\nas a different interface that is easier to understand. Pexpect\nis basically a pattern matching system. It runs programs and\nwatches output. When output matches a given pattern Pexpect can\nrespond as if a human were typing responses. Pexpect can be used\nfor automation, testing, and screen scraping. Pexpect can be\nused for automating interactive console applications such as\nssh, ftp, passwd, telnet, etc. It can also be used to control\nweb applications via \"lynx\", \"w3m\", or some other text-based web\nbrowser. Pexpect is pure Python. Unlike other Expect-like\nmodules for Python Pexpect does not require TCL or Expect nor\ndoes it require C extensions to be compiled. It should work on\nany platform that supports the standard Python pty module.\n",
   "maintainers": [
    {
     "email": "zimbatm@zimbatm.com",
     "github": "zimbatm",
     "name": "zimbatm"
    }
   ],
   "name": "python2.7-pexpect",
   "platforms": [
    {}
   ],
   "position": "pkgs/development/python-modules/pexpect/default.nix:23"
  },
  "revs": [
   "00005ce0bdbc3c13804adc9a7fd71a02cc0b8db2",
   "000463186d471107324c67faecb5c85e9f06521a"
  ]
 },
 "4.8.0": {
  "meta": {
   "description": "Automate interactive console applications such as ssh, ftp, etc",
   "homepage": "http://www.noah.org/wiki/Pexpect",
   "license": {
    "fullName": "MIT License",
    "shortName": "mit",
    "spdxId": "MIT",
    "url": "https://spdx.org/licenses/MIT.html"
   },
   "long_description": "Pexpect is similar to the Don Libes \"Expect\" system, but Pexpect\nas a different interface that is easier to understand. Pexpect\nis basically a pattern matching system. It runs programs and\nwatches output. When output matches a given pattern Pexpect can\nrespond as if a human were typing responses. Pexpect can be used\nfor automation, testing, and screen scraping. Pexpect can be\nused for automating interactive console applications such as\nssh, ftp, passwd, telnet, etc. It can also be used to control\nweb applications via \"lynx\", \"w3m\", or some other text-based web\nbrowser. Pexpect is pure Python. Unlike other Expect-like\nmodules for Python Pexpect does not require TCL or Expect nor\ndoes it require C extensions to be compiled. It should work on\nany platform that supports the standard Python pty module.\n",
   "maintainers": [
    {
     "email": "zimbatm@zimbatm.com",
     "github": "zimbatm",
     "githubId": 3248,
     "name": "zimbatm"
    }
   ],
   "name": "python2.7-pexpect",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "arm-none",
    "armv6l-none",
    "aarch64-none",
    "avr-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none",
    "riscv64-none",
    "riscv32-none",
    "vc4-none",
    "js-ghcjs",
    "aarch64-genode",
    "x86_64-genode"
   ],
   "position": "pkgs/development/python-modules/pexpect/default.nix:24"
  },
  "revs": [
   "00022fbeda385d7b6ae2eee44f07eecfc6d92015",
   "000404944c6da404f013111563bcc0084b270e28"
  ]
 }
}