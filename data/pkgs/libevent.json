{
 "1.1b": {
  "meta": {
   "description": "",
   "homepage": "",
   "license": null,
   "long_description": "",
   "maintainers": [],
   "name": "libevent",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "000ba6536350b58079484fc64b467ec227e73e26",
   "0f4673788ef286ab623d95f407d08eb38d97f057"
  ]
 },
 "1.4.14b": {
  "meta": {
   "description": "libevent, an event notification library",
   "homepage": "",
   "license": "mBSD",
   "long_description": "The libevent API provides a mechanism to execute a callback function\n        when a specific event occurs on a file descriptor or after a timeout\n        has been reached.  Furthermore, libevent also support callbacks due\n        to signals or regular timeouts.\n\n        libevent is meant to replace the event loop found in event driven\n        network servers.  An application just needs to call event_dispatch()\n        and then add or remove events dynamically without having to change\n        the event loop.\n",
   "maintainers": [],
   "name": "libevent",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "0003f76f9b29d92ce7acb8e3f35f3805c91687d6",
   "05a530fd10d7b846a47e8bc4b9a4d21fef20e3e8"
  ]
 },
 "2.0.12": {
  "meta": {
   "description": "libevent, an event notification library",
   "homepage": "",
   "license": "mBSD",
   "long_description": "The libevent API provides a mechanism to execute a callback function\n        when a specific event occurs on a file descriptor or after a timeout\n        has been reached.  Furthermore, libevent also support callbacks due\n        to signals or regular timeouts.\n\n        libevent is meant to replace the event loop found in event driven\n        network servers.  An application just needs to call event_dispatch()\n        and then add or remove events dynamically without having to change\n        the event loop.\n",
   "maintainers": [],
   "name": "libevent",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "000051b196b82d30d1008c8999502c484ea5bd7d",
   "115b3d943afb3f6640e4365b2f9ea59a9cda9561"
  ]
 },
 "2.0.17": {
  "meta": {
   "description": "libevent, an event notification library",
   "homepage": "",
   "license": "mBSD",
   "long_description": "The libevent API provides a mechanism to execute a callback function\n        when a specific event occurs on a file descriptor or after a timeout\n        has been reached.  Furthermore, libevent also support callbacks due\n        to signals or regular timeouts.\n\n        libevent is meant to replace the event loop found in event driven\n        network servers.  An application just needs to call event_dispatch()\n        and then add or remove events dynamically without having to change\n        the event loop.\n",
   "maintainers": [],
   "name": "libevent",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "000791e74a511f862081aff90ab27304c88f0aba",
   "15bd0f4beb1eb6e609bd365893289d3a163a4ef2"
  ]
 },
 "2.0.21": {
  "meta": {
   "description": "Event notification library",
   "homepage": "",
   "license": "mBSD",
   "long_description": "The libevent API provides a mechanism to execute a callback function\n        when a specific event occurs on a file descriptor or after a timeout\n        has been reached.  Furthermore, libevent also support callbacks due\n        to signals or regular timeouts.\n\n        libevent is meant to replace the event loop found in event driven\n        network servers.  An application just needs to call event_dispatch()\n        and then add or remove events dynamically without having to change\n        the event loop.\n",
   "maintainers": [],
   "name": "libevent",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": "pkgs/development/libraries/libevent/default.nix:18"
  },
  "revs": [
   "0005e1896d9bdef48aedcff9e86843351ac024e9",
   "1a55c4b89f6f6e337d1ca8878bfd8104f3fb6304"
  ]
 },
 "2.0.22": {
  "meta": {
   "description": "Event notification library",
   "homepage": "",
   "license": {
    "fullName": "BSD 3-clause \"New\" or \"Revised\" License",
    "shortName": "bsd3",
    "spdxId": "BSD-3-Clause",
    "url": "http://spdx.org/licenses/BSD-3-Clause"
   },
   "long_description": "The libevent API provides a mechanism to execute a callback function\n        when a specific event occurs on a file descriptor or after a timeout\n        has been reached.  Furthermore, libevent also support callbacks due\n        to signals or regular timeouts.\n\n        libevent is meant to replace the event loop found in event driven\n        network servers.  An application just needs to call event_dispatch()\n        and then add or remove events dynamically without having to change\n        the event loop.\n",
   "maintainers": [
    "William A. Kennington III <william@wkennington.com>"
   ],
   "name": "libevent",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd",
    "i686-netbsd",
    "x86_64-netbsd",
    "x86_64-solaris"
   ],
   "position": "pkgs/development/libraries/libevent/default.nix:20"
  },
  "revs": [
   "0000d4029e264262dcf45a822ccf3b48bcacf209",
   "044ceae2806480555a44c91c386546cffb46ba74"
  ]
 },
 "2.1.10": {
  "meta": {
   "description": "Event notification library",
   "homepage": "http://libevent.org/",
   "license": {
    "fullName": "BSD 3-clause \"New\" or \"Revised\" License",
    "shortName": "bsd3",
    "spdxId": "BSD-3-Clause",
    "url": "http://spdx.org/licenses/BSD-3-Clause.html"
   },
   "long_description": "The libevent API provides a mechanism to execute a callback function\nwhen a specific event occurs on a file descriptor or after a timeout\nhas been reached.  Furthermore, libevent also support callbacks due\nto signals or regular timeouts.\n\nlibevent is meant to replace the event loop found in event driven\nnetwork servers.  An application just needs to call event_dispatch()\nand then add or remove events dynamically without having to change\nthe event loop.\n",
   "maintainers": [],
   "name": "libevent",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-darwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "aarch64-none",
    "avr-none",
    "arm-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none"
   ],
   "position": "pkgs/development/libraries/libevent/default.nix:44"
  },
  "revs": [
   "00078b99ee8baded7fc89e9e1e3501068a2c7fff",
   "0a5b8d9bf64b94ec36c61ad4da4c34cda85a7aed"
  ]
 },
 "2.1.11": {
  "meta": {
   "description": "Event notification library",
   "homepage": "http://libevent.org/",
   "license": {
    "fullName": "BSD 3-clause \"New\" or \"Revised\" License",
    "shortName": "bsd3",
    "spdxId": "BSD-3-Clause",
    "url": "https://spdx.org/licenses/BSD-3-Clause.html"
   },
   "long_description": "The libevent API provides a mechanism to execute a callback function\nwhen a specific event occurs on a file descriptor or after a timeout\nhas been reached.  Furthermore, libevent also support callbacks due\nto signals or regular timeouts.\n\nlibevent is meant to replace the event loop found in event driven\nnetwork servers.  An application just needs to call event_dispatch()\nand then add or remove events dynamically without having to change\nthe event loop.\n",
   "maintainers": [],
   "name": "libevent",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "arm-none",
    "armv6l-none",
    "aarch64-none",
    "avr-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none",
    "riscv64-none",
    "riscv32-none",
    "vc4-none",
    "js-ghcjs",
    "aarch64-genode",
    "x86_64-genode"
   ],
   "position": "pkgs/development/libraries/libevent/default.nix:44"
  },
  "revs": [
   "00022fbeda385d7b6ae2eee44f07eecfc6d92015",
   "050b0068e5760d35c712fe4e77cc1cbf26c79640"
  ]
 },
 "2.1.12": {
  "meta": {
   "description": "Event notification library",
   "homepage": "http://libevent.org/",
   "license": {
    "fullName": "BSD 3-clause \"New\" or \"Revised\" License",
    "shortName": "bsd3",
    "spdxId": "BSD-3-Clause",
    "url": "https://spdx.org/licenses/BSD-3-Clause.html"
   },
   "long_description": "The libevent API provides a mechanism to execute a callback function\nwhen a specific event occurs on a file descriptor or after a timeout\nhas been reached.  Furthermore, libevent also support callbacks due\nto signals or regular timeouts.\n\nlibevent is meant to replace the event loop found in event driven\nnetwork servers.  An application just needs to call event_dispatch()\nand then add or remove events dynamically without having to change\nthe event loop.\n",
   "maintainers": [],
   "name": "libevent",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "x86_64-redox",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "arm-none",
    "armv6l-none",
    "aarch64-none",
    "avr-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none",
    "riscv64-none",
    "riscv32-none",
    "vc4-none",
    "js-ghcjs",
    "aarch64-genode",
    "i686-genode",
    "x86_64-genode"
   ],
   "position": "pkgs/development/libraries/libevent/default.nix:44"
  },
  "revs": [
   "000404944c6da404f013111563bcc0084b270e28",
   "1c1668df4de35b649a58c5db483401ad2f35678d"
  ]
 },
 "2.1.8": {
  "meta": {
   "description": "Event notification library",
   "homepage": "http://libevent.org/",
   "license": {
    "fullName": "BSD 3-clause \"New\" or \"Revised\" License",
    "shortName": "bsd3",
    "spdxId": "BSD-3-Clause",
    "url": "http://spdx.org/licenses/BSD-3-Clause.html"
   },
   "long_description": "The libevent API provides a mechanism to execute a callback function\nwhen a specific event occurs on a file descriptor or after a timeout\nhas been reached.  Furthermore, libevent also support callbacks due\nto signals or regular timeouts.\n\nlibevent is meant to replace the event loop found in event driven\nnetwork servers.  An application just needs to call event_dispatch()\nand then add or remove events dynamically without having to change\nthe event loop.\n",
   "maintainers": [
    {
     "email": "william@wkennington.com",
     "github": "wkennington",
     "name": "William A. Kennington III"
    }
   ],
   "name": "libevent",
   "platforms": [
    {}
   ],
   "position": "pkgs/development/libraries/libevent/default.nix:56"
  },
  "revs": [
   "00005ce0bdbc3c13804adc9a7fd71a02cc0b8db2",
   "1a99f4cc61e16dc37c5538161fc22bacbd76b968"
  ]
 }
}