{
 "4.02.0": {
  "meta": {
   "description": "Most popular variant of the Caml language",
   "homepage": "http://caml.inria.fr/ocaml",
   "license": [
    {
     "fullName": "Q Public License 1.0",
     "shortName": "qpl",
     "spdxId": "QPL-1.0",
     "url": "http://spdx.org/licenses/QPL-1.0"
    },
    {
     "fullName": "GNU Library General Public License v2 only",
     "shortName": "lgpl2",
     "spdxId": "LGPL-2.0",
     "url": "http://spdx.org/licenses/LGPL-2.0"
    }
   ],
   "long_description": "OCaml is the most popular variant of the Caml language.  From a\nlanguage standpoint, it extends the core Caml language with a\nfully-fledged object-oriented layer, as well as a powerful module\nsystem, all connected by a sound, polymorphic type system featuring\ntype inference.\n\nThe OCaml system is an industrial-strength implementation of this\nlanguage, featuring a high-performance native-code compiler (ocamlopt)\nfor 9 processor architectures (IA32, PowerPC, AMD64, Alpha, Sparc,\nMips, IA64, HPPA, StrongArm), as well as a bytecode compiler (ocamlc)\nand an interactive read-eval-print loop (ocaml) for quick development\nand portability.  The OCaml distribution includes a comprehensive\nstandard library, a replay debugger (ocamldebug), lexer (ocamllex) and\nparser (ocamlyacc) generators, a pre-processor pretty-printer (camlp4)\nand a documentation generator (ocamldoc).\n",
   "maintainers": [],
   "name": "ocaml",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin"
   ],
   "position": "pkgs/development/compilers/ocaml/generic.nix:63"
  },
  "revs": [
   "08b85f5f9917cad708faab7fc81b1c155d478328",
   "180366aa14568efc620bed6f33c2633b274e3f91"
  ]
 },
 "4.02.2": {
  "meta": {
   "description": "Most popular variant of the Caml language",
   "homepage": "http://caml.inria.fr/ocaml",
   "license": [
    {
     "fullName": "Q Public License 1.0",
     "shortName": "qpl",
     "spdxId": "QPL-1.0",
     "url": "http://spdx.org/licenses/QPL-1.0"
    },
    {
     "fullName": "GNU Library General Public License v2 only",
     "shortName": "lgpl2",
     "spdxId": "LGPL-2.0",
     "url": "http://spdx.org/licenses/LGPL-2.0"
    }
   ],
   "long_description": "OCaml is the most popular variant of the Caml language.  From a\nlanguage standpoint, it extends the core Caml language with a\nfully-fledged object-oriented layer, as well as a powerful module\nsystem, all connected by a sound, polymorphic type system featuring\ntype inference.\n\nThe OCaml system is an industrial-strength implementation of this\nlanguage, featuring a high-performance native-code compiler (ocamlopt)\nfor 9 processor architectures (IA32, PowerPC, AMD64, Alpha, Sparc,\nMips, IA64, HPPA, StrongArm), as well as a bytecode compiler (ocamlc)\nand an interactive read-eval-print loop (ocaml) for quick development\nand portability.  The OCaml distribution includes a comprehensive\nstandard library, a replay debugger (ocamldebug), lexer (ocamllex) and\nparser (ocamlyacc) generators, a pre-processor pretty-printer (camlp4)\nand a documentation generator (ocamldoc).\n",
   "maintainers": [],
   "name": "ocaml",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin"
   ],
   "position": "pkgs/development/compilers/ocaml/4.02.nix:60"
  },
  "revs": [
   "67e38dfe23ba03ee42c478c6858bafd6f0fc1f9b",
   "67e38dfe23ba03ee42c478c6858bafd6f0fc1f9b"
  ]
 },
 "4.02.3": {
  "meta": {
   "description": "Most popular variant of the Caml language",
   "homepage": "http://caml.inria.fr/ocaml",
   "license": [
    {
     "fullName": "Q Public License 1.0",
     "shortName": "qpl",
     "spdxId": "QPL-1.0",
     "url": "http://spdx.org/licenses/QPL-1.0.html"
    },
    {
     "fullName": "GNU Library General Public License v2 only",
     "shortName": "lgpl2",
     "spdxId": "LGPL-2.0",
     "url": "http://spdx.org/licenses/LGPL-2.0.html"
    }
   ],
   "long_description": "OCaml is the most popular variant of the Caml language.  From a\nlanguage standpoint, it extends the core Caml language with a\nfully-fledged object-oriented layer, as well as a powerful module\nsystem, all connected by a sound, polymorphic type system featuring\ntype inference.\n\nThe OCaml system is an industrial-strength implementation of this\nlanguage, featuring a high-performance native-code compiler (ocamlopt)\nfor 9 processor architectures (IA32, PowerPC, AMD64, Alpha, Sparc,\nMips, IA64, HPPA, StrongArm), as well as a bytecode compiler (ocamlc)\nand an interactive read-eval-print loop (ocaml) for quick development\nand portability.  The OCaml distribution includes a comprehensive\nstandard library, a replay debugger (ocamldebug), lexer (ocamllex) and\nparser (ocamlyacc) generators, a pre-processor pretty-printer (camlp4)\nand a documentation generator (ocamldoc).\n",
   "maintainers": [],
   "name": "ocaml",
   "platforms": [
    {
     "kernel": {
      "_type": "kernel",
      "execFormat": {
       "_type": "exec-format",
       "name": "elf"
      },
      "families": {},
      "name": "linux"
     }
    },
    {
     "kernel": {
      "families": {
       "darwin": {
        "_type": "exec-format",
        "name": "darwin"
       }
      }
     }
    }
   ],
   "position": "pkgs/development/compilers/ocaml/generic.nix:73"
  },
  "revs": [
   "00005ce0bdbc3c13804adc9a7fd71a02cc0b8db2",
   "5101b357ec30c1ac4a9273b379e631f841af9fa3"
  ]
 }
}