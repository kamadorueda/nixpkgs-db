{
 "3.11": {
  "meta": {
   "description": "PLY (Python Lex-Yacc), an implementation of the lex and yacc parsing tools for Python",
   "homepage": "http://www.dabeaz.com/ply/",
   "license": {
    "fullName": "BSD 3-clause \"New\" or \"Revised\" License",
    "shortName": "bsd3",
    "spdxId": "BSD-3-Clause",
    "url": "http://spdx.org/licenses/BSD-3-Clause.html"
   },
   "long_description": "PLY is an implementation of lex and yacc parsing tools for Python.\nIn a nutshell, PLY is nothing more than a straightforward lex/yacc\nimplementation.  Here is a list of its essential features: It's\nimplemented entirely in Python; It uses LR-parsing which is\nreasonably efficient and well suited for larger grammars; PLY\nprovides most of the standard lex/yacc features including support for\nempty productions, precedence rules, error recovery, and support for\nambiguous grammars; PLY is straightforward to use and provides very\nextensive error checking; PLY doesn't try to do anything more or less\nthan provide the basic lex/yacc functionality.  In other words, it's\nnot a large parsing framework or a component of some larger system.\n",
   "maintainers": [],
   "name": "python2.7-ply",
   "platforms": [
    {}
   ],
   "position": "pkgs/development/python-modules/ply/default.nix:26"
  },
  "revs": [
   "00005ce0bdbc3c13804adc9a7fd71a02cc0b8db2",
   "919d3ea2a0c19d2bed0afb5d71636b7c0237637b"
  ]
 },
 "3.2": {
  "meta": {
   "description": "PLY (Python Lex-Yacc), an implementation of the lex and yacc parsing tools for Python",
   "homepage": "http://www.dabeaz.com/ply/",
   "license": "revised-BSD",
   "long_description": "PLY is an implementation of lex and yacc parsing tools for Python.\nIn a nutshell, PLY is nothing more than a straightforward lex/yacc\nimplementation.  Here is a list of its essential features: It's\nimplemented entirely in Python; It uses LR-parsing which is\nreasonably efficient and well suited for larger grammars; PLY\nprovides most of the standard lex/yacc features including support for\nempty productions, precedence rules, error recovery, and support for\nambiguous grammars; PLY is straightforward to use and provides very\nextensive error checking; PLY doesn't try to do anything more or less\nthan provide the basic lex/yacc functionality.  In other words, it's\nnot a large parsing framework or a component of some larger system.\n",
   "maintainers": [
    "Ludovic Court\u00e8s <ludo@gnu.org>"
   ],
   "name": "python-ply",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "powerpc-linux",
    "armv5tel-linux",
    "mips64el-linux",
    "i686-darwin",
    "powerpc-darwin",
    "x86_64-darwin",
    "i686-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "powerpc-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": ""
  },
  "revs": [
   "000051b196b82d30d1008c8999502c484ea5bd7d",
   "61129e1ee9a37d75f2f26c8eb5de1c984766a461"
  ]
 },
 "3.4": {
  "meta": {
   "description": "PLY (Python Lex-Yacc), an implementation of the lex and yacc parsing tools for Python",
   "homepage": "http://www.dabeaz.com/ply/",
   "license": {
    "fullName": "BSD 3-clause \"New\" or \"Revised\" License",
    "shortName": "bsd3",
    "spdxId": "BSD-3-Clause",
    "url": "http://spdx.org/licenses/BSD-3-Clause"
   },
   "long_description": "PLY is an implementation of lex and yacc parsing tools for Python.\nIn a nutshell, PLY is nothing more than a straightforward lex/yacc\nimplementation.  Here is a list of its essential features: It's\nimplemented entirely in Python; It uses LR-parsing which is\nreasonably efficient and well suited for larger grammars; PLY\nprovides most of the standard lex/yacc features including support for\nempty productions, precedence rules, error recovery, and support for\nambiguous grammars; PLY is straightforward to use and provides very\nextensive error checking; PLY doesn't try to do anything more or less\nthan provide the basic lex/yacc functionality.  In other words, it's\nnot a large parsing framework or a component of some larger system.\n",
   "maintainers": [
    "Florian Friesdorf <flo@chaoflow.net>",
    "Domen Kozar <domen@dev.si>"
   ],
   "name": "python2.7-ply",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": "pkgs/top-level/python-packages.nix:8128"
  },
  "revs": [
   "000162daed5e6a854d1e034409002aee80e6d8ac",
   "71f92bc8a386bcd05f74d56113fd2f408145ad7e"
  ]
 },
 "3.7": {
  "meta": {
   "description": "PLY (Python Lex-Yacc), an implementation of the lex and yacc parsing tools for Python",
   "homepage": "http://www.dabeaz.com/ply/",
   "license": {
    "fullName": "BSD 3-clause \"New\" or \"Revised\" License",
    "shortName": "bsd3",
    "spdxId": "BSD-3-Clause",
    "url": "http://spdx.org/licenses/BSD-3-Clause"
   },
   "long_description": "PLY is an implementation of lex and yacc parsing tools for Python.\nIn a nutshell, PLY is nothing more than a straightforward lex/yacc\nimplementation.  Here is a list of its essential features: It's\nimplemented entirely in Python; It uses LR-parsing which is\nreasonably efficient and well suited for larger grammars; PLY\nprovides most of the standard lex/yacc features including support for\nempty productions, precedence rules, error recovery, and support for\nambiguous grammars; PLY is straightforward to use and provides very\nextensive error checking; PLY doesn't try to do anything more or less\nthan provide the basic lex/yacc functionality.  In other words, it's\nnot a large parsing framework or a component of some larger system.\n",
   "maintainers": [
    "Florian Friesdorf <flo@chaoflow.net>",
    "Domen Kozar <domen@dev.si>"
   ],
   "name": "python2.7-ply",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": "pkgs/top-level/python-packages.nix:9698"
  },
  "revs": [
   "000a2108ba10df725065004e1f3d2fb793078f71",
   "24ffbfde1d3f4e89c2c9ebdf209565d69f1a59cf"
  ]
 },
 "3.8": {
  "meta": {
   "description": "PLY (Python Lex-Yacc), an implementation of the lex and yacc parsing tools for Python",
   "homepage": "http://www.dabeaz.com/ply/",
   "license": {
    "fullName": "BSD 3-clause \"New\" or \"Revised\" License",
    "shortName": "bsd3",
    "spdxId": "BSD-3-Clause",
    "url": "http://spdx.org/licenses/BSD-3-Clause"
   },
   "long_description": "PLY is an implementation of lex and yacc parsing tools for Python.\nIn a nutshell, PLY is nothing more than a straightforward lex/yacc\nimplementation.  Here is a list of its essential features: It's\nimplemented entirely in Python; It uses LR-parsing which is\nreasonably efficient and well suited for larger grammars; PLY\nprovides most of the standard lex/yacc features including support for\nempty productions, precedence rules, error recovery, and support for\nambiguous grammars; PLY is straightforward to use and provides very\nextensive error checking; PLY doesn't try to do anything more or less\nthan provide the basic lex/yacc functionality.  In other words, it's\nnot a large parsing framework or a component of some larger system.\n",
   "maintainers": [
    "Florian Friesdorf <flo@chaoflow.net>",
    "Domen Kozar <domen@dev.si>"
   ],
   "name": "python2.7-ply",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd",
    "i686-netbsd",
    "x86_64-netbsd",
    "x86_64-solaris"
   ],
   "position": "pkgs/top-level/python-packages.nix:14345"
  },
  "revs": [
   "0000d4029e264262dcf45a822ccf3b48bcacf209",
   "3e1be2206b4c1eb3299fb633b8ce9f5ac1c32898"
  ]
 }
}