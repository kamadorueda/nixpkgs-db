{
 "7.6.6": {
  "meta": {
   "description": "The Boehm-Demers-Weiser conservative garbage collector for C and C++",
   "homepage": "http://hboehm.info/gc/",
   "license": "http://hboehm.info/gc/license.txt",
   "long_description": "The Boehm-Demers-Weiser conservative garbage collector can be used as a\ngarbage collecting replacement for C malloc or C++ new.  It allows you\nto allocate memory basically as you normally would, without explicitly\ndeallocating memory that is no longer useful.  The collector\nautomatically recycles memory when it determines that it can no longer\nbe otherwise accessed.\n\nThe collector is also used by a number of programming language\nimplementations that either use C as intermediate code, want to\nfacilitate easier interoperation with C libraries, or just prefer the\nsimple collector interface.\n\nAlternatively, the garbage collector may be used as a leak detector for\nC or C++ programs, though that is not its primary goal.\n",
   "maintainers": [],
   "name": "boehm-gc",
   "platforms": [
    {}
   ],
   "position": "pkgs/development/libraries/boehm-gc/7.6.6.nix:47"
  },
  "revs": [
   "00005ce0bdbc3c13804adc9a7fd71a02cc0b8db2",
   "01229007553d9322c473c0fa36e3d6c644147e7d"
  ]
 }
}