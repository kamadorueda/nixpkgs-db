{
 "0.10.0": {
  "meta": {
   "description": "Unit testing framework for C",
   "homepage": "http://check.sourceforge.net/",
   "license": {
    "fullName": "GNU Library General Public License v2 or later",
    "shortName": "lgpl2Plus",
    "spdxId": "LGPL-2.0+",
    "url": "http://spdx.org/licenses/LGPL-2.0+"
   },
   "long_description": "Check is a unit testing framework for C.  It features a simple\n        interface for defining unit tests, putting little in the way of the\n        developer.  Tests are run in a separate address space, so Check can\n        catch both assertion failures and code errors that cause\n        segmentation faults or other signals.  The output from unit tests\n        can be used within source code editors and IDEs.\n",
   "maintainers": [
    "William A. Kennington III <william@wkennington.com>"
   ],
   "name": "check",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd",
    "i686-netbsd",
    "x86_64-netbsd",
    "x86_64-solaris"
   ],
   "position": "pkgs/development/libraries/check/default.nix:20"
  },
  "revs": [
   "0000d4029e264262dcf45a822ccf3b48bcacf209",
   "003102c41127dabf90349235964b6e4714114ae7"
  ]
 },
 "0.11.0": {
  "meta": {
   "description": "Unit testing framework for C",
   "homepage": "https://libcheck.github.io/check/",
   "license": {
    "fullName": "GNU Library General Public License v2 or later",
    "shortName": "lgpl2Plus",
    "spdxId": "LGPL-2.0+",
    "url": "http://spdx.org/licenses/LGPL-2.0+"
   },
   "long_description": "Check is a unit testing framework for C.  It features a simple\n        interface for defining unit tests, putting little in the way of the\n        developer.  Tests are run in a separate address space, so Check can\n        catch both assertion failures and code errors that cause\n        segmentation faults or other signals.  The output from unit tests\n        can be used within source code editors and IDEs.\n",
   "maintainers": [
    "William A. Kennington III <william@wkennington.com>"
   ],
   "name": "check",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-darwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris"
   ],
   "position": "pkgs/development/libraries/check/default.nix:20"
  },
  "revs": [
   "00056e76d0a5c1c05d7ad1064702b3d121cd1b98",
   "000c7800a1030a61677b64e9edb1670d3d940194"
  ]
 },
 "0.12.0": {
  "meta": {
   "description": "Unit testing framework for C",
   "homepage": "https://libcheck.github.io/check/",
   "license": {
    "fullName": "GNU Library General Public License v2 or later",
    "shortName": "lgpl2Plus",
    "spdxId": "LGPL-2.0+",
    "url": "http://spdx.org/licenses/LGPL-2.0+.html"
   },
   "long_description": "Check is a unit testing framework for C.  It features a simple\n        interface for defining unit tests, putting little in the way of the\n        developer.  Tests are run in a separate address space, so Check can\n        catch both assertion failures and code errors that cause\n        segmentation faults or other signals.  The output from unit tests\n        can be used within source code editors and IDEs.\n",
   "maintainers": [
    {
     "email": "william@wkennington.com",
     "github": "wkennington",
     "name": "William A. Kennington III"
    }
   ],
   "name": "check",
   "platforms": [
    {}
   ],
   "position": "pkgs/development/libraries/check/default.nix:20"
  },
  "revs": [
   "00005ce0bdbc3c13804adc9a7fd71a02cc0b8db2",
   "000463186d471107324c67faecb5c85e9f06521a"
  ]
 },
 "0.13.0": {
  "meta": {
   "description": "Unit testing framework for C",
   "homepage": "https://libcheck.github.io/check/",
   "license": {
    "fullName": "GNU Library General Public License v2 or later",
    "shortName": "lgpl2Plus",
    "spdxId": "LGPL-2.0-or-later",
    "url": "http://spdx.org/licenses/LGPL-2.0-or-later.html"
   },
   "long_description": "Check is a unit testing framework for C.  It features a simple\n        interface for defining unit tests, putting little in the way of the\n        developer.  Tests are run in a separate address space, so Check can\n        catch both assertion failures and code errors that cause\n        segmentation faults or other signals.  The output from unit tests\n        can be used within source code editors and IDEs.\n",
   "maintainers": [],
   "name": "check",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "aarch64-none",
    "avr-none",
    "arm-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none",
    "riscv64-none",
    "riscv32-none",
    "vc4-none"
   ],
   "position": "pkgs/development/libraries/check/default.nix:20"
  },
  "revs": [
   "000f19ff08cfaf6ce89b136ea986fde64f750555",
   "002fc5fa06868521e7bf134ca45d679cb21cae9a"
  ]
 },
 "0.14.0": {
  "meta": {
   "description": "Unit testing framework for C",
   "homepage": "https://libcheck.github.io/check/",
   "license": {
    "fullName": "GNU Library General Public License v2 or later",
    "shortName": "lgpl2Plus",
    "spdxId": "LGPL-2.0-or-later",
    "url": "http://spdx.org/licenses/LGPL-2.0-or-later.html"
   },
   "long_description": "Check is a unit testing framework for C.  It features a simple\n        interface for defining unit tests, putting little in the way of the\n        developer.  Tests are run in a separate address space, so Check can\n        catch both assertion failures and code errors that cause\n        segmentation faults or other signals.  The output from unit tests\n        can be used within source code editors and IDEs.\n",
   "maintainers": [],
   "name": "check",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "arm-none",
    "armv6l-none",
    "aarch64-none",
    "avr-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none",
    "riscv64-none",
    "riscv32-none",
    "vc4-none",
    "js-ghcjs"
   ],
   "position": "pkgs/development/libraries/check/default.nix:20"
  },
  "revs": [
   "0005b13fc5f3c4c3bf3d0bb5f7ea4330b36c0bcc",
   "0006326d35ed4774d7936aea721ce1a5c8f0b775"
  ]
 },
 "0.15.0": {
  "meta": {
   "description": "Unit testing framework for C",
   "homepage": "https://libcheck.github.io/check/",
   "license": {
    "fullName": "GNU Library General Public License v2 or later",
    "shortName": "lgpl2Plus",
    "spdxId": "LGPL-2.0-or-later",
    "url": "https://spdx.org/licenses/LGPL-2.0-or-later.html"
   },
   "long_description": "Check is a unit testing framework for C.  It features a simple\n        interface for defining unit tests, putting little in the way of the\n        developer.  Tests are run in a separate address space, so Check can\n        catch both assertion failures and code errors that cause\n        segmentation faults or other signals.  The output from unit tests\n        can be used within source code editors and IDEs.\n",
   "maintainers": [],
   "name": "check",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "arm-none",
    "armv6l-none",
    "aarch64-none",
    "avr-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none",
    "riscv64-none",
    "riscv32-none",
    "vc4-none",
    "js-ghcjs",
    "aarch64-genode",
    "x86_64-genode"
   ],
   "position": "pkgs/development/libraries/check/default.nix:20"
  },
  "revs": [
   "00022fbeda385d7b6ae2eee44f07eecfc6d92015",
   "002077c0a66d0acce6930e2ff2ab2c7d34244c64"
  ]
 },
 "0.15.2": {
  "meta": {
   "description": "Unit testing framework for C",
   "homepage": "https://libcheck.github.io/check/",
   "license": {
    "fullName": "GNU Library General Public License v2 or later",
    "shortName": "lgpl2Plus",
    "spdxId": "LGPL-2.0-or-later",
    "url": "https://spdx.org/licenses/LGPL-2.0-or-later.html"
   },
   "long_description": "Check is a unit testing framework for C.  It features a simple\n        interface for defining unit tests, putting little in the way of the\n        developer.  Tests are run in a separate address space, so Check can\n        catch both assertion failures and code errors that cause\n        segmentation faults or other signals.  The output from unit tests\n        can be used within source code editors and IDEs.\n",
   "maintainers": [],
   "name": "check",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-cygwin",
    "i686-freebsd",
    "i686-linux",
    "i686-netbsd",
    "i686-openbsd",
    "x86_64-cygwin",
    "x86_64-freebsd",
    "x86_64-linux",
    "x86_64-netbsd",
    "x86_64-openbsd",
    "x86_64-solaris",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin",
    "x86_64-windows",
    "i686-windows",
    "wasm64-wasi",
    "wasm32-wasi",
    "x86_64-redox",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "arm-none",
    "armv6l-none",
    "aarch64-none",
    "avr-none",
    "i686-none",
    "x86_64-none",
    "powerpc-none",
    "msp430-none",
    "riscv64-none",
    "riscv32-none",
    "vc4-none",
    "js-ghcjs",
    "aarch64-genode",
    "i686-genode",
    "x86_64-genode"
   ],
   "position": "pkgs/development/libraries/check/default.nix:20"
  },
  "revs": [
   "000404944c6da404f013111563bcc0084b270e28",
   "001334b47c6cdfc35e94805380484e75004cdbf5"
  ]
 },
 "0.9.11": {
  "meta": {
   "description": "Check, a unit testing framework for C",
   "homepage": "http://check.sourceforge.net/",
   "license": "LGPLv2+",
   "long_description": "Check is a unit testing framework for C.  It features a simple\n        interface for defining unit tests, putting little in the way of the\n        developer.  Tests are run in a separate address space, so Check can\n        catch both assertion failures and code errors that cause\n        segmentation faults or other signals.  The output from unit tests\n        can be used within source code editors and IDEs.\n",
   "maintainers": [],
   "name": "check",
   "platforms": null,
   "position": "pkgs/development/libraries/check/default.nix:16"
  },
  "revs": [
   "000b1ad43accf62263ef519bc0b0d4056c3e80b5",
   "000b1ad43accf62263ef519bc0b0d4056c3e80b5"
  ]
 },
 "0.9.12": {
  "meta": {
   "description": "Unit testing framework for C",
   "homepage": "http://check.sourceforge.net/",
   "license": {
    "fullName": "GNU Library General Public License v2 or later",
    "shortName": "LGPL-2.0+",
    "url": "http://spdx.org/licenses/LGPL-2.0+"
   },
   "long_description": "Check is a unit testing framework for C.  It features a simple\n        interface for defining unit tests, putting little in the way of the\n        developer.  Tests are run in a separate address space, so Check can\n        catch both assertion failures and code errors that cause\n        segmentation faults or other signals.  The output from unit tests\n        can be used within source code editors and IDEs.\n",
   "maintainers": [],
   "name": "check",
   "platforms": null,
   "position": "pkgs/development/libraries/check/default.nix:16"
  },
  "revs": [
   "0005e1896d9bdef48aedcff9e86843351ac024e9",
   "00312d90b9ae42ae383174fcb6b4760d009606ed"
  ]
 },
 "0.9.14": {
  "meta": {
   "description": "Unit testing framework for C",
   "homepage": "http://check.sourceforge.net/",
   "license": {
    "fullName": "GNU Library General Public License v2 or later",
    "shortName": "lgpl2Plus",
    "spdxId": "LGPL-2.0+",
    "url": "http://spdx.org/licenses/LGPL-2.0+"
   },
   "long_description": "Check is a unit testing framework for C.  It features a simple\n        interface for defining unit tests, putting little in the way of the\n        developer.  Tests are run in a separate address space, so Check can\n        catch both assertion failures and code errors that cause\n        segmentation faults or other signals.  The output from unit tests\n        can be used within source code editors and IDEs.\n",
   "maintainers": [
    "William A. Kennington III <william@wkennington.com>"
   ],
   "name": "check",
   "platforms": [
    "i686-linux",
    "x86_64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7l-linux",
    "mips64el-linux",
    "x86_64-darwin",
    "i686-cygwin",
    "x86_64-cygwin",
    "i686-freebsd",
    "x86_64-freebsd",
    "i686-openbsd",
    "x86_64-openbsd"
   ],
   "position": "pkgs/development/libraries/check/default.nix:16"
  },
  "revs": [
   "000162daed5e6a854d1e034409002aee80e6d8ac",
   "002da098e1e44f8150034af7d87b7e751cd476f8"
  ]
 },
 "0.9.8": {
  "meta": {
   "description": "Check, a unit testing framework for C",
   "homepage": "http://check.sourceforge.net/",
   "license": "LGPLv2+",
   "long_description": "Check is a unit testing framework for C.  It features a simple\n        interface for defining unit tests, putting little in the way of the\n        developer.  Tests are run in a separate address space, so Check can\n        catch both assertion failures and code errors that cause\n        segmentation faults or other signals.  The output from unit tests\n        can be used within source code editors and IDEs.\n",
   "maintainers": [],
   "name": "check",
   "platforms": null,
   "position": ""
  },
  "revs": [
   "000051b196b82d30d1008c8999502c484ea5bd7d",
   "00081d1873148a8ec642d5c912d04875c4ee4a66"
  ]
 }
}