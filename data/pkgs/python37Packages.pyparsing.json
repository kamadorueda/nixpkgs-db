{
 "2.2.2": {
  "meta": {
   "description": "An alternative approach to creating and executing simple grammars, vs. the traditional lex/yacc approach, or the use of regular expressions",
   "homepage": "http://pyparsing.wikispaces.com/",
   "license": {
    "fullName": "MIT License",
    "shortName": "mit",
    "spdxId": "MIT",
    "url": "http://spdx.org/licenses/MIT.html"
   },
   "long_description": "",
   "maintainers": [],
   "name": "python3.7-pyparsing",
   "platforms": [
    {
     "kernel": {
      "_type": "kernel",
      "execFormat": {
       "_type": "exec-format",
       "name": "elf"
      },
      "families": {},
      "name": "linux"
     }
    },
    {
     "kernel": {
      "families": {
       "darwin": {
        "_type": "exec-format",
        "name": "darwin"
       }
      }
     }
    }
   ],
   "position": "pkgs/development/python-modules/pyparsing/default.nix:16"
  },
  "revs": [
   "00005ce0bdbc3c13804adc9a7fd71a02cc0b8db2",
   "00005ce0bdbc3c13804adc9a7fd71a02cc0b8db2"
  ]
 },
 "2.3.0": {
  "meta": {
   "description": "An alternative approach to creating and executing simple grammars, vs. the traditional lex/yacc approach, or the use of regular expressions",
   "homepage": "http://pyparsing.wikispaces.com/",
   "license": {
    "fullName": "MIT License",
    "shortName": "mit",
    "spdxId": "MIT",
    "url": "http://spdx.org/licenses/MIT.html"
   },
   "long_description": "",
   "maintainers": [],
   "name": "python3.7-pyparsing",
   "platforms": [
    {
     "kernel": {
      "_type": "kernel",
      "execFormat": {
       "_type": "exec-format",
       "name": "elf"
      },
      "families": {},
      "name": "linux"
     }
    },
    {
     "kernel": {
      "families": {
       "darwin": {
        "_type": "exec-format",
        "name": "darwin"
       }
      }
     }
    }
   ],
   "position": "pkgs/development/python-modules/pyparsing/default.nix:16"
  },
  "revs": [
   "0008aa73eb0dec898c4e2e6913af645abd253c35",
   "0028bad962d0184f190474244b9e51d4b840443d"
  ]
 },
 "2.3.1": {
  "meta": {
   "description": "An alternative approach to creating and executing simple grammars, vs. the traditional lex/yacc approach, or the use of regular expressions",
   "homepage": "http://pyparsing.wikispaces.com/",
   "license": {
    "fullName": "MIT License",
    "shortName": "mit",
    "spdxId": "MIT",
    "url": "http://spdx.org/licenses/MIT.html"
   },
   "long_description": "",
   "maintainers": [],
   "name": "python3.7-pyparsing",
   "platforms": [
    {
     "kernel": {
      "_type": "kernel",
      "execFormat": {
       "_type": "exec-format",
       "name": "elf"
      },
      "families": {},
      "name": "linux"
     }
    },
    {
     "kernel": {
      "families": {
       "darwin": {
        "_type": "exec-format",
        "name": "darwin"
       }
      }
     }
    }
   ],
   "position": "pkgs/development/python-modules/pyparsing/default.nix:16"
  },
  "revs": [
   "0000a86d7cd47005096a292a797d2e02ce29e8d8",
   "000463186d471107324c67faecb5c85e9f06521a"
  ]
 },
 "2.4.5": {
  "meta": {
   "description": "An alternative approach to creating and executing simple grammars, vs. the traditional lex/yacc approach, or the use of regular expressions",
   "homepage": "http://pyparsing.wikispaces.com/",
   "license": {
    "fullName": "MIT License",
    "shortName": "mit",
    "spdxId": "MIT",
    "url": "http://spdx.org/licenses/MIT.html"
   },
   "long_description": "",
   "maintainers": [],
   "name": "python3.7-pyparsing",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-linux",
    "x86_64-linux",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin"
   ],
   "position": "pkgs/development/python-modules/pyparsing/default.nix:16"
  },
  "revs": [
   "000f19ff08cfaf6ce89b136ea986fde64f750555",
   "00907b2b44c9e11b4c7ea8707dbadc9f86fca20e"
  ]
 },
 "2.4.6": {
  "meta": {
   "description": "An alternative approach to creating and executing simple grammars, vs. the traditional lex/yacc approach, or the use of regular expressions",
   "homepage": "https://github.com/pyparsing/pyparsing",
   "license": {
    "fullName": "MIT License",
    "shortName": "mit",
    "spdxId": "MIT",
    "url": "https://spdx.org/licenses/MIT.html"
   },
   "long_description": "",
   "maintainers": [
    {
     "email": "kamadorueda@gmail.com",
     "github": "kamadorueda",
     "githubId": 47480384,
     "keys": [
      {
       "fingerprint": "2BE3 BAFD 793E A349 ED1F  F00F 04D0 CEAF 916A 9A40",
       "longkeyid": "rsa4096/0x04D0CEAF916A9A40"
      }
     ],
     "name": "Kevin Amado"
    }
   ],
   "name": "python3.7-pyparsing",
   "platforms": [
    "aarch64-linux",
    "armv5tel-linux",
    "armv6l-linux",
    "armv7a-linux",
    "armv7l-linux",
    "mipsel-linux",
    "i686-linux",
    "x86_64-linux",
    "powerpc64le-linux",
    "riscv32-linux",
    "riscv64-linux",
    "x86_64-darwin",
    "i686-darwin",
    "aarch64-darwin",
    "armv7a-darwin"
   ],
   "position": "pkgs/development/python-modules/pyparsing/default.nix:29"
  },
  "revs": [
   "00022fbeda385d7b6ae2eee44f07eecfc6d92015",
   "0056f627a0203501c82a74a59c7553b158cc9642"
  ]
 }
}